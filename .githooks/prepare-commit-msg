#!/bin/bash

COMMIT_SOURCE=$2

#################################################################
# Force a commit that is modifying an existing migration to
# make the committer explicitly acknowledge the change. This check
# attempts to help prevent accidental changes to existing migrations.
#

COMMIT_MESSAGE=$(cat "${1}")

# Check if file being committed is a modified migration file
# diff-filter types [D]eleted, [M]odified, [R]enamed, [T]ype changed
if git diff --cached --name-only --diff-filter=DMRT | grep -E --quiet "(migrations\/m\d{6}_\d{6})";
then
    MIGRATION_MODIFIED=true
fi

# Ignore merge commits by setting value to "empty"
if [[ "$COMMIT_MESSAGE" == "Merge branch"* ]]; then
    MIGRATION_MODIFIED=''
fi

if [ -n "$MIGRATION_MODIFIED" ] && [[ "$COMMIT_MESSAGE" != "Updates existing migration"* ]]; then
    echo "Existing migration files should rarely be modified. Update the commit message to explicitly acknowledge that you are making a change to an existing migration. The commit message should begin with:"
    echo ""
    echo "'Updates existing migration [to fix X]'"
    exit 1
fi

#################################################################
# Attempt to block incorrect translation categories from being committed
# This should check in both the assets/src/[module] folder and src/[module] folder
# Does not check folders named something different than a translation category, like forms-frontend
#

## get only non-deleted files: MRT in non-merge-commits
if [[ "$COMMIT_SOURCE" != "merge" ]]; then

    TRANSLATION_CATEGORIES[0]='data-studio'
    TRANSLATION_CATEGORIES[1]='forms'
    TRANSLATION_CATEGORIES[2]='mailer'
    TRANSLATION_CATEGORIES[3]='meta'
    TRANSLATION_CATEGORIES[4]='redirects'
    TRANSLATION_CATEGORIES[5]='sent-email'
    TRANSLATION_CATEGORIES[6]='sitemaps'
    TRANSLATION_CATEGORIES[7]='transactional'
    TRANSLATION_CATEGORIES[8]='uris'

    ## create a new variable that removes the matched category from the TRANSLATION_CATEGORIES array and makes the array a string
    TRANSLATION_CATEGORIES_STRING=$(printf "|%s" "${TRANSLATION_CATEGORIES[@]}" | tr -d '[:space:]')
    ## remove pipe from beginning of string
    TRANSLATION_CATEGORIES_STRING=${TRANSLATION_CATEGORIES_STRING:1}


    ## diff-filter types [D]eleted, [M]odified, [R]enamed, [T]ype changed
    if git diff --cached --name-only --diff-filter=MRT | grep -E --quiet "(src\/core)";
    then
        MATCH_STRINGS_REGEX="Craft(::|\.)t\('sprout-module-($TRANSLATION_CATEGORIES_STRING)|\|( *)t\('sprout-module-($TRANSLATION_CATEGORIES_STRING)"

        ## test if any files changed contain content that includes the string 'sprout-module-[moduleName]'
        if git diff --cached --name-only --diff-filter=MRT | xargs grep -E --quiet "$MATCH_STRINGS_REGEX";
        then
            ## echo grep result
            echo "You have changed a file that contains the string 'sprout-module-($TRANSLATION_CATEGORIES_STRING)'"
            exit 1;
        fi
    fi

    ## loop through TRANSLATION_CATEGORIES
    for CATEGORY in "${TRANSLATION_CATEGORIES[@]}"
    do
        ## create a variable that removes the dash from the value
        CATEGORY_FOLDER="${CATEGORY//-/}"

        ## test if any files changed contain content that includes the string 'sprout-module-transactional'
        if git diff --cached --name-only --diff-filter=MRT | grep -E --quiet "src\/$CATEGORY_FOLDER";
        then
            # remove the matched category from the TRANSLATION_CATEGORIES_STRING string
            TRANSLATION_CATEGORIES_STRING=${TRANSLATION_CATEGORIES_STRING//$CATEGORY/}
            ## replace any double pipes with single pipe
            TRANSLATION_CATEGORIES_STRING=${TRANSLATION_CATEGORIES_STRING//||/|}

            ## remove pipe from beginning of string, if it exists (it will for the first item in our category list)
            if [[ "$CATEGORY_FOLDER" == "datastudio" ]]; then
                TRANSLATION_CATEGORIES_STRING=${TRANSLATION_CATEGORIES_STRING:1}
            fi

            MATCH_STRINGS_REGEX="Craft(::|\.)t\('sprout-module-($TRANSLATION_CATEGORIES_STRING)|\|( *)t\('sprout-module-($TRANSLATION_CATEGORIES_STRING)"

            if git diff --cached --name-only --diff-filter=MRT | xargs grep -E --quiet "$MATCH_STRINGS_REGEX";
            then
                ## echo grep result
                echo "Incorrect translation category in src/$CATEGORY_FOLDER"
                exit 1;
            fi
        fi
    done
fi