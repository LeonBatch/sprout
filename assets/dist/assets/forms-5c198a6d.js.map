{"version":3,"file":"forms-5c198a6d.js","sources":["../../src/core/SourceElementRelations.js","../../src/forms/formbuilder/FormBuilder.js","../../src/forms/formbuilder/FormField.js","../../src/forms/formbuilder/App.js","../../src/forms/NewForm.js","../../src/forms/Integrations.js","../../src/forms/IntegrationsRelationsTable.js","../../src/data-studio/DataSourceRelationsTable.js","../../src/transactional/NotificationEventsRelationsTable.js"],"sourcesContent":["let $relationModal = $('#sprout-relations-modal');\n\nlet $modal = new Garnish.Modal($relationModal, {\n    autoShow: false,\n    closeOtherModals: false,\n    resizable: true,\n    onShow: function() {\n        let relationBtn = document.getElementById('sprout-relations-btn');\n\n        let data = {\n            elementId: relationBtn.dataset.elementId,\n        };\n\n        Craft.sendActionRequest('POST', 'sprout-module-core/source-element-relations/get-relations', {\n            data: data,\n        }).then((response) => {\n            if (response.data.success) {\n                $relationModal.html(response.data.html);\n            }\n        }).catch(() => {\n\n        });\n    },\n    onHide: function() {\n\n    },\n});\n\nlet sproutRelationBtn = document.querySelector('#sprout-relations-btn');\n\nif (sproutRelationBtn !== null) {\n    sproutRelationBtn.addEventListener('click', function(event) {\n        event.preventDefault();\n        $modal.show();\n    }, false);\n}\n","export const FormBuilder = (formId) => ({\n\n    formId: formId,\n\n    lastUpdatedFormFieldUid: null,\n\n    /**\n     * Array of field data\n     * [\n     *  id: 123,\n     *  type: className,\n     *  etc.\n     * ]\n     */\n    sourceFields: [],\n\n    /**\n     * [\n     *   {\n     *     id: 123,\n     *     label: 'X',\n     *     elements: [\n     *        {\n     *          id: 123,\n     *          name: 'Y',\n     *          required,\n     *          getExampleHtml(),\n     *          getSettingsHtml(),\n     *        },\n     *        {},\n     *        {}\n     *      ]\n     *   }\n     * ]\n     */\n    tabs: [],\n    fields: [],\n    uiSettings: [],\n\n    fieldLayoutUid: null,\n\n    selectedTabUid: null,\n    editTabUid: null,\n    editFieldUid: null,\n\n    dragOrigin: null,\n\n    DragOrigins: {\n        sourceField: 'source-field',\n        layoutField: 'layout-field',\n        layoutTabNav: 'layout-tab-nav',\n    },\n\n    isDraggingTabUid: null,\n    isDragOverTabUid: null,\n\n    isDraggingFormFieldUid: null,\n    isDragOverFormFieldUid: null,\n\n    init() {\n\n        let self = this;\n        // Get the saved fieldLayout data\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-submission-field-layout', {\n            data: {\n                formId: this.formId,\n            },\n        }).then((response) => {\n            console.log('get-submission-field-layout', response);\n            // self.tabs = [\n            //   {\n            //     id: 123,\n            //     label: 'Tab 1',\n            //     fields: [],\n            //   },\n            // ];\n            self.tabs = response.data.layout.tabs;\n            // self.fields = response.data.layout.fields;\n            // self.uiSettings = response.data.layout.uiSettings;\n            self.fieldLayoutUid = response.data.layout.uid;\n\n            // get uid of first tab in tabs array\n            self.selectedTabUid = self.tabs[0].uid ?? null;\n\n        }).catch(() => {\n            console.log('No form data found.');\n        });\n\n        window.formBuilder = this;\n\n        let sourceFields = JSON.parse(this.$refs.formBuilder.dataset.sourceFields);\n\n        for (const field of sourceFields) {\n            this.sourceFields.push(field);\n        }\n    },\n\n    get integrationsFormFieldMetadata() {\n\n        let fieldLayout = {};\n\n        if (this.tabs.length && !this.tabs[0].elements.length) {\n            return [];\n        }\n\n        let fields = [];\n\n        for (const tab of this.tabs) {\n\n            for (const element of tab.elements) {\n\n                let fieldData = this.getFormFieldAttributes(element);\n\n                let field = {\n                    name: fieldData.field.name,\n                    handle: fieldData.field.handle,\n                    type: fieldData.field.type,\n                    uid: fieldData.field.uid,\n                };\n\n                fields.push(field);\n            }\n        }\n\n        this.fields = fields;\n\n        return JSON.stringify(fields);\n    },\n\n    get fieldLayoutInputValue() {\n\n        let fieldLayout = {};\n\n        if (this.tabs.length && !this.tabs[0].elements.length) {\n            return [];\n        }\n\n        let fieldLayoutTabs = [];\n\n        for (const tab of this.tabs) {\n\n            let fieldLayoutFields = [];\n\n            for (const element of tab.elements) {\n\n                let field = this.getFormFieldAttributes(element);\n\n                fieldLayoutFields.push(field);\n            }\n\n            fieldLayoutTabs.push({\n                id: tab.uid, // remove\n                uid: tab.uid,\n                name: tab.name,\n                sortOrder: null,\n                userCondition: null,\n                elementCondition: null,\n                elements: fieldLayoutFields,\n            });\n        }\n\n        fieldLayout['tabs'] = fieldLayoutTabs;\n\n        return JSON.stringify(fieldLayout);\n    },\n\n    // Removes uiSettings from element/field data\n    getFormFieldAttributes(fieldData) {\n\n        const {\n            uiSettings,\n            ...fieldAttributes\n        } = fieldData;\n\n        return fieldAttributes;\n    },\n\n    // Drag Actions\n\n    dragStartLayoutTabNav(e) {\n        console.log('dragStartLayoutTabNav');\n\n        e.dataTransfer.setData('sprout/origin-page-tab-uid', e.target.dataset.tabUid);\n        this.dragOrigin = this.DragOrigins.layoutTabNav;\n        this.isDraggingTabUid = e.target.dataset.tabUid;\n\n        // e.dataTransfer.dropEffect = 'link';\n        // e.dataTransfer.effectAllowed = 'copyLink';\n    },\n\n    dragEndLayoutTabNav(e) {\n        console.log('dragEndLayoutTabNav');\n\n        this.dragOrigin = null;\n        this.isDraggingTabUid = null;\n        this.isDragOverTabUid = null;\n    },\n\n    dragEnterLayoutTabNav(e) {\n        console.log('dragEnterLayoutTabNav');\n        e.target.classList.add('no-pointer-events');\n    },\n\n    dragLeaveLayoutTabNav(e) {\n        console.log('dragLeaveLayoutTabNav');\n        e.target.classList.remove('no-pointer-events');\n    },\n\n    dragOverLayoutTabNav(e) {\n        let self = this;\n\n        if (this.dragOrigin === this.DragOrigins.layoutTabNav) {\n\n        }\n\n        if (this.dragOrigin === this.DragOrigins.sourceField || this.dragOrigin === this.DragOrigins.layoutField) {\n            setTimeout(function() {\n                self.selectedTabUid = e.target.dataset.tabUid;\n            }, 1000);\n        }\n    },\n\n    dropOnLayoutTabNav(e) {\n        console.log('dropOnLayoutTabNav');\n\n        let self = this;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n\n        if (this.dragOrigin === this.DragOrigins.layoutTabNav) {\n            this.updateTabPosition(originTabUid, targetTabUid);\n            this.selectedTabUid = originTabUid;\n        }\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            let type = e.dataTransfer.getData('sprout/field-type');\n            this.addFieldToLayoutTab(type);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            this.updateFieldPosition(originTabUid, targetTabUid, self.isDraggingFormFieldUid);\n        }\n    },\n\n    dragStartSourceField(e) {\n        console.log('dragStartSourceField');\n\n        this.dragOrigin = this.DragOrigins.sourceField;\n\n        e.dataTransfer.setData('sprout/field-type', e.target.dataset.type);\n\n        // e.dataTransfer.dropEffect = 'link';\n        // e.dataTransfer.effectAllowed = 'copyLink';\n    },\n\n    dragEndSourceField(e) {\n        console.log('dragEndSourceField');\n\n        this.isDraggingFormFieldUid = null;\n        this.isDragOverFormFieldUid = null;\n    },\n\n    dragStartLayoutField(e) {\n        console.log('dragStartLayoutField');\n\n        let self = this;\n\n        // Store selected tab in drag object as it might change before the drop event\n        e.dataTransfer.setData('sprout/origin-page-tab-uid', this.selectedTabUid);\n        e.dataTransfer.setData('sprout/field-type', e.target.dataset.type);\n        this.dragOrigin = this.DragOrigins.layoutField;\n        this.isDraggingTabUid = e.target.dataset.tabUid;\n        this.isDraggingFormFieldUid = e.target.dataset.fieldUid;\n\n        // Need setTimeout before manipulating dom:\n        // https://stackoverflow.com/questions/19639969/html5-dragend-event-firing-immediately\n        // setTimeout(function() {\n        //   self.isDraggingFormFieldUid = isDraggingFormFieldUid;\n        // }, 10);\n\n        // e.dataTransfer.dropEffect = 'move';\n        // e.dataTransfer.effectAllowed = 'move';\n\n        // Handle scroll stuff: https://stackoverflow.com/a/72807140/1586560\n        // On drag scroll, prevents page from growing with mobile safari rubber-band effect\n        // let VerticalMaxed = (window.innerHeight + window.scrollY) >= document.body.offsetHeight;\n        //\n        // this.scrollActive = true;\n        //\n        // if (e.clientY < 150) {\n        //   this.scrollActive = false;\n        //   this.scrollFieldLayout(-1);\n        // }\n        //\n        // if ((e.clientY > (document.documentElement.clientHeight - 150)) && !VerticalMaxed) {\n        //   this.scrollActive = false;\n        //   this.scrollFieldLayout(1)\n        // }\n    },\n\n    dragEndLayoutField(e) {\n        console.log('dragEndLayoutField');\n\n        // Reset scrolling\n        // this.scrollActive = false;\n\n        this.isDraggingFormFieldUid = null;\n        this.isDragOverFormFieldUid = null;\n    },\n\n    dragEnterLayoutTabBody(e) {\n        console.log('dragEnterLayoutTabBody');\n\n        this.isDragOverTabUid = this.selectedTabUid;\n    },\n\n    dragLeaveLayoutTabBody(e) {\n        console.log('dragLeaveLayoutTabBody');\n\n        this.isDragOverTabUid = null;\n    },\n\n    dropOnLayoutTabBody(e) {\n        console.log('dropOnLayoutTabBody');\n        let self = this;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            this.addFieldToLayoutTab(type);\n\n            let fieldData = this.getFieldByType(type);\n            let layoutElement = this.getLayoutElement(fieldData.field.uid, fieldData.field, fieldData.uiSettings);\n            this.editFormField(layoutElement);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            let dropBeforeTargetFieldUid = e.target.dataset.fieldUid;\n            this.updateFieldPosition(originTabUid, this.selectedTabUid, self.isDraggingFormFieldUid, dropBeforeTargetFieldUid);\n        }\n    },\n\n    dragEnterLayoutField(e) {\n        console.log('dragEnterLayoutField');\n        e.target.classList.add('no-pointer-events');\n\n    },\n\n    dragLeaveLayoutField(e) {\n        console.log('dragLeaveLayoutField');\n        e.target.classList.remove('no-pointer-events');\n    },\n\n    dropOnExistingLayoutField(e) {\n        console.log('dropOnExistingLayoutField');\n        let self = this;\n\n        e.target.classList.remove('no-pointer-events');\n\n        // let fieldUid = e.dataTransfer.getData('sprout/field-id');\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n        let beforeFieldUid = e.target.dataset.fieldUid;\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            this.addFieldToLayoutTab(type, beforeFieldUid);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            this.updateFieldPosition(originTabUid, targetTabUid, self.isDraggingFormFieldUid, beforeFieldUid);\n        }\n    },\n\n    dragEnterFieldLayoutEndZone(e) {\n        console.log('dragEnterFieldLayoutEndZone');\n\n        // this.isMouseOverEndZone = true;\n    },\n\n    dragLeaveFieldLayoutEndZone(e) {\n        console.log('dragLeaveFieldLayoutEndZone');\n\n        // this.isMouseOverEndZone = false;\n    },\n\n    dropOnLayoutEndZone(e) {\n        console.log('dropOnLayoutEndZone');\n        let self = this;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n        let beforeFieldUid = e.target.dataset.fieldUid;\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            this.addFieldToLayoutTab(type);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            this.updateFieldPosition(originTabUid, targetTabUid, self.isDraggingFormFieldUid, beforeFieldUid);\n        }\n    },\n\n    // See specifying drop targets docs:\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n    dragOverLayoutTabBody(e) {\n        const isDraggingFormField = e.dataTransfer.types.includes('sprout/field-type');\n\n        if (isDraggingFormField) {\n            console.log('dragOverLayoutTabBody');\n            event.preventDefault();\n        }\n    },\n\n    dragOverLayoutField(e) {\n        const isDraggingLayoutField = e.dataTransfer.types.includes('sprout/field-type');\n\n        if (isDraggingLayoutField) {\n            // console.log('dragOverLayoutField');\n            event.preventDefault();\n        }\n    },\n\n    isOverFieldLayoutEndZone(e) {\n        const sproutFormField = e.dataTransfer.types.includes('sprout/field-type');\n\n        // this.isDragOverTabUid = this.selectedTabUid;\n        // this.isDragOverFormFieldUid = e.target.parentNode.dataset.fieldUid;\n\n\n        if (sproutFormField) {\n            console.log('isOverFieldLayoutEndZone');\n            event.preventDefault();\n        }\n    },\n\n    // Helper Methods\n\n    getFieldsByGroup(handle) {\n        return this.sourceFields.filter(item => item.groupName === handle);\n    },\n\n    getFieldByType(type) {\n        return this.sourceFields.filter(item => item.field.type === type)[0] ?? null;\n    },\n\n    getTabIndexByTabUid(tabUid) {\n        return this.tabs.findIndex(item => item.uid === tabUid);\n    },\n\n    getFieldIndexByFieldUid(tab, fieldUid) {\n        return tab.elements.findIndex(item => item.fieldUid === fieldUid);\n    },\n\n    updateTabSettings(tabUid, data) {\n        let tabIndex = this.getTabIndexByTabUid(tabUid);\n\n        // loop through js object\n        Object.entries(data).forEach(([index, value]) => {\n            this.tabs[tabIndex][index] = value;\n        });\n\n        if (!this.tabs[tabIndex]['name']) {\n            this.tabs[tabIndex]['name'] = 'Page';\n        }\n    },\n\n    updateFieldSettings(fieldUid, fieldSettings) {\n\n        let tabIndex = this.getTabIndexByTabUid(this.selectedTabUid);\n        let tab = this.tabs[tabIndex];\n\n        let fieldIndex = this.getFieldIndexByFieldUid(tab, fieldUid);\n        let targetField = tab.elements[fieldIndex];\n\n        targetField.name = fieldSettings.name;\n        targetField.instructions = fieldSettings.instructions;\n        targetField.required = fieldSettings.required;\n        targetField.settings = fieldSettings.settings;\n        // loop through fieldSettings.settings and update the targetField.settings\n        // console.log(fieldSettings);\n\n        tab.elements[fieldIndex] = targetField;\n    },\n\n    updateTabPosition(tabUid, beforeTabUid = null) {\n\n        let beforeTabIndex = this.getTabIndexByTabUid(beforeTabUid);\n        let tabIndex = this.getTabIndexByTabUid(tabUid);\n        let targetTab = this.tabs[tabIndex];\n\n        // console.log(this.tabs);\n        // Remove the updated tab\n        this.tabs.splice(tabIndex, 1);\n\n        if (beforeTabUid) {\n\n            // console.log('target' + targetTab);\n            // Insert the updated tab before the target tab\n            this.tabs.splice(beforeTabIndex, 0, targetTab);\n        } else {\n            this.tabs.push(targetTab);\n        }\n\n        this.lastUpdatedTabUid = targetTab.uid;\n    },\n\n    updateFieldPosition(originTabUid, targetTabUid, fieldUid, beforeFieldUid = null) {\n\n        console.log('updateFieldPosition');\n\n        let originTabIndex = this.getTabIndexByTabUid(originTabUid);\n        let originTab = this.tabs[originTabIndex];\n\n        let targetTabIndex = this.getTabIndexByTabUid(targetTabUid);\n        let targetTab = this.tabs[targetTabIndex];\n\n        if (!targetTab) {\n            targetTab = originTab;\n        }\n\n        let originFieldIndex = this.getFieldIndexByFieldUid(originTab, fieldUid);\n        let targetField = originTab.elements[originFieldIndex];\n\n        // Remove the updated field from the layout\n        // this might change the indexes of the elements on the tab\n        originTab.elements.splice(originFieldIndex, 1);\n\n        if (beforeFieldUid) {\n            let beforeFieldIndex = this.getFieldIndexByFieldUid(targetTab, beforeFieldUid);\n\n            // Insert the updated field before the target field\n            targetTab.elements.splice(beforeFieldIndex, 0, targetField);\n        } else {\n            targetTab.elements.push(targetField);\n        }\n\n        // Update tab\n        this.tabs[targetTabIndex] = targetTab;\n\n        this.lastUpdatedFormFieldUid = targetField.uid;\n\n        this.resetLastUpdated();\n    },\n\n    addFormPageButton() {\n        let newUid = Craft.uuid();\n        let tab = {\n            uid: newUid,\n            name: 'New Page',\n            userCondition: null,\n            elementCondition: null,\n            elements: [],\n        };\n\n        this.tabs.push(tab);\n        this.selectedTabUid = newUid;\n    },\n\n    addFieldToLayoutTab(type, beforeFieldUid = null) {\n\n        console.log('addFieldToLayoutTab', type, beforeFieldUid);\n\n        let fieldData = this.getFieldByType(type);\n        fieldData.field.type = type;\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            fieldData.field.name = fieldData.uiSettings.displayName;\n            fieldData.field.handle = fieldData.uiSettings.defaultHandle + '_' + Craft.randomString(4);\n            fieldData.field.uid = Craft.uuid();\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n\n        }\n\n        let fieldUid = fieldData.field.uid;\n\n        let tabIndex = this.getTabIndexByTabUid(this.selectedTabUid);\n        let layoutElement = this.getLayoutElement(fieldUid, fieldData.field, fieldData.uiSettings);\n        this.tabs[tabIndex].elements.push(layoutElement);\n\n        if (beforeFieldUid) {\n\n            let tabIndex = this.getTabIndexByTabUid(this.selectedTabUid);\n            let tab = this.tabs[tabIndex];\n\n            let fieldIndex = this.getFieldIndexByFieldUid(tab, fieldUid);\n            let targetField = tab.elements[fieldIndex];\n\n            // Remove the updated field\n            tab.elements.splice(fieldIndex, 1);\n\n            // let beforeFieldIndex = tab.elements.length + 1;\n            let beforeFieldIndex = this.getFieldIndexByFieldUid(tab, beforeFieldUid);\n\n            // Insert the updated field before the target field\n            tab.elements.splice(beforeFieldIndex, 0, targetField);\n\n            // Update tab\n            this.tabs[tabIndex] = tab;\n\n            this.lastUpdatedFormFieldUid = targetField.uid;\n\n            this.resetLastUpdated();\n        }\n    },\n\n    getLayoutElement(fieldUid, field, uiSettings) {\n        return {\n            type: 'BarrelStrength\\\\Sprout\\\\forms\\\\submissions\\\\CustomFormField',\n            required: false,\n            width: 100,\n            uid: Craft.uuid(),\n            userCondition: null,\n            elementCondition: null,\n            fieldUid: fieldUid,\n            field: field,\n            uiSettings: uiSettings,\n        };\n    },\n\n    resetLastUpdated() {\n        let self = this;\n\n        // The timeout here needs to match the time of the 'drop-highlight' css transition effect\n        setTimeout(function() {\n            self.lastUpdatedFormFieldUid = null;\n        }, 300);\n    },\n\n    // scrollFieldLayout(stepY) {\n    //   let scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n    //   window.scrollTo(0, (scrollY + stepY));\n    //\n    //   if (this.scrollActive) {\n    //     setTimeout(function() {\n    //       scroll(0, stepY);\n    //     }, 20);\n    //   }\n    // },\n\n    isBefore(element1, element2) {\n        if (element2.parentNode === element1.parentNode) {\n            for (let currentElement = element1.previousSibling; currentElement && currentElement.nodeType !== 9; currentElement = currentElement.previousSibling) {\n                if (currentElement === element2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // Field Stuff\n\n    editFormTab(tab) {\n\n        let self = this;\n\n        this.editTabUid = tab.uid;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-tab-settings-html', {\n            data: {\n                formId: this.formId,\n                tab: tab,\n            },\n        }).then((response) => {\n\n            self.openTabSlideout(response);\n\n        }).catch(() => {\n            console.log('No form data found.');\n        });\n\n    },\n\n    openTabSlideout(response) {\n\n        let self = this;\n\n        const $body = $('<div/>', {class: 'fld-element-settings-body'});\n        const $fields = $('<div/>', {class: 'fields'}).appendTo($body);\n        const $footer = $('<div/>', {class: 'fld-element-settings-footer'});\n\n        const $removeBtn = Craft.ui.createButton({\n            class: 'icon',\n            attr: {\n                'data-icon': 'trash',\n            },\n            label: Craft.t('app', 'Remove'),\n            spinner: true,\n        });\n\n        $removeBtn.attr('data-icon', 'trash');\n\n        // Copied from Craft's FieldLayoutDesigner.js\n        const $cancelBtn = Craft.ui.createButton({\n            data: {\n                trashed: true,\n            },\n            label: Craft.t('app', 'Close'),\n            spinner: true,\n        });\n\n        const $applyButton = Craft.ui.createSubmitButton({\n            class: 'secondary',\n            label: Craft.t('app', 'Apply'),\n            spinner: true,\n        });\n\n        $removeBtn.appendTo($footer);\n        $('<div/>', {class: 'flex-grow'}).appendTo($footer);\n        $cancelBtn.appendTo($footer);\n        $applyButton.appendTo($footer);\n\n        let settingsHtml = self.swapPlaceholders(response.data.settingsHtml, response.data.tabUid);\n\n        $(settingsHtml).appendTo($fields);\n\n        const $contents = $body.add($footer);\n\n        // Make sure condition builder js is only added once\n        $('.sprout-conditionbuilder-slideout').remove();\n\n        const slideout = new Craft.Slideout($contents, {\n            containerElement: 'form',\n            containerAttributes: {\n                method: 'post',\n                action: '',\n                class: 'fld-element-settings slideout sprout-conditionbuilder-slideout',\n                id: 'sprout-tab-modal',\n            },\n        });\n\n        const $form = slideout.$container;\n\n        let tabSettingsJs = self.swapPlaceholders(response.data.tabSettingsJs, response.data.tabUid);\n        Craft.appendBodyHtml(tabSettingsJs);\n\n        $form.on('submit', function(event) {\n            event.preventDefault();\n\n            let formData = new FormData($form[0]);\n\n            Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-tab-object', {\n                data: formData,\n            }).then((response) => {\n                self.updateTabSettings(self.editTabUid, {\n                    name: response.data.name,\n                    userCondition: response.data.userCondition,\n                    elementCondition: response.data.elementCondition,\n                });\n            });\n\n            slideout.close();\n        });\n\n        $removeBtn.on('click', () => {\n            // if only 1 tab exists, don't allow it to be removed\n            if (self.tabs.length === 1) {\n                Craft.cp.displayNotice(Craft.t('sprout-module-forms', 'Form must contain at least one tab.'));\n\n                return;\n            }\n\n            let tabIndex = self.getTabIndexByTabUid(self.selectedTabUid);\n\n            let newSelectedTabUid = (tabIndex - 1) >= 0\n                ? self.tabs[tabIndex - 1].uid\n                : self.tabs[tabIndex + 1].uid;\n\n            self.tabs.splice(tabIndex, 1);\n\n            let newTabIndex = self.getTabIndexByTabUid(newSelectedTabUid);\n            self.selectedTabUid = self.tabs[newTabIndex].uid;\n            self.editTabUid = self.selectedTabUid;\n\n            slideout.close();\n        });\n\n        $cancelBtn.on('click', () => {\n            slideout.close();\n            self.editFieldUid = null;\n        });\n    },\n\n    editFormField(layoutElement) {\n\n        // Testing CP Screen Slideout\n        this.editFormFieldViaCpScreen(layoutElement);\n\n        // Testing DIY Slideout\n        // this.editFormFieldViaSettingsHtml(layoutElement);\n    },\n\n    editFormFieldViaCpScreen(layoutElement) {\n        let self = this;\n\n        self.editFieldUid = layoutElement.fieldUid;\n\n        let data = {\n            formId: this.formId,\n            layoutElement: layoutElement,\n        };\n\n        let slideout = new Craft.CpScreenSlideout('sprout-module-forms/forms/edit-form-field-slideout-via-cp-screen', {\n            hasTabs: true,\n            tabManager: '',\n            params: {\n                formId: this.formId,\n                layoutElement: layoutElement,\n            },\n        });\n\n        // let settingsHtml = self.swapPlaceholders(response.data.settingsHtml, response.data.fieldUid);\n\n        slideout.on('close', () => {\n            console.log('waaa');\n        });\n    },\n\n    editFormFieldViaSettingsHtml(layoutElement) {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-field-settings-html', {\n            data: {\n                formId: this.formId,\n                layoutElement: layoutElement,\n            },\n        }).then((response) => {\n\n            self.openFieldSlideout(response);\n\n        }).catch((error) => {\n            console.log(error);\n            console.log('No form field data found.');\n        });\n    },\n\n    openFieldSlideout(response) {\n\n        let self = this;\n\n        const $body = $('<div/>', {class: 'fld-element-settings-body'});\n        const $fields = $('<div/>', {class: 'fields'}).appendTo($body);\n        const $footer = $('<div/>', {class: 'fld-element-settings-footer'});\n\n        const $removeBtn = Craft.ui.createButton({\n            class: 'icon',\n            attr: {\n                'data-icon': 'trash',\n            },\n            label: Craft.t('app', 'Remove'),\n            spinner: true,\n        });\n\n        $removeBtn.attr('data-icon', 'trash');\n\n        // Copied from Craft's FieldLayoutDesigner.js\n        const $cancelBtn = Craft.ui.createButton({\n            data: {\n                trashed: true,\n            },\n            label: Craft.t('app', 'Close'),\n            spinner: true,\n        });\n\n        const $applyButton = Craft.ui.createSubmitButton({\n            class: 'secondary',\n            label: Craft.t('app', 'Apply'),\n            spinner: true,\n        });\n\n        $removeBtn.appendTo($footer);\n        $('<div/>', {class: 'flex-grow'}).appendTo($footer);\n        $cancelBtn.appendTo($footer);\n        $applyButton.appendTo($footer);\n\n        let settingsHtml = self.swapPlaceholders(response.data.settingsHtml, response.data.fieldUid);\n\n        $(response.data.requiredSettingsHtml).appendTo($fields);\n        $(settingsHtml).appendTo($fields);\n        // $(response.data.additionalSettingsHtml).appendTo($fields);\n\n        const $contents = $body.add($footer);\n\n        // Make sure condition builder js is only added once\n        $('.sprout-conditionbuilder-slideout').remove();\n\n        const slideout = new Craft.Slideout($contents, {\n            containerElement: 'form',\n            containerAttributes: {\n                method: 'post',\n                action: '',\n                class: 'fld-element-settings slideout sprout-conditionbuilder-slideout',\n                id: 'sprout-field-modal',\n            },\n        });\n\n        const $form = slideout.$container;\n\n        Craft.initUiElements($body);\n\n        let fieldSettingsJs = self.swapPlaceholders(response.data.fieldSettingsJs, response.data.fieldUid);\n        Craft.appendBodyHtml(fieldSettingsJs);\n\n        $form.on('submit', function(event) {\n            event.preventDefault();\n\n            let formData = new FormData($form[0]);\n            // let fieldSettings = JSON.stringify(Object.fromEntries(formData));\n            // console.log(fieldSettings);\n\n            Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-field-object', {\n                data: formData,\n            }).then((response) => {\n\n                // self.updateTabSettings(self.editTabUid, {\n                //     name: response.data.name,\n                //     userCondition: response.data.userCondition,\n                //     elementCondition: response.data.elementCondition,\n                // });\n                //\n                self.updateFieldSettings(self.editFieldUid, JSON.parse(response.data.fieldSettings));\n            });\n\n            slideout.close();\n        });\n\n        $removeBtn.on('click', () => {\n            let tabIndex = self.getTabIndexByTabUid(self.selectedTabUid);\n            let tab = self.tabs[tabIndex];\n            let fieldIndex = self.getFieldIndexByFieldUid(tab, self.editFieldUid);\n            self.tabs[tabIndex].elements.splice(fieldIndex, 1);\n            self.editFieldUid = null;\n\n            slideout.close();\n        });\n\n        $cancelBtn.on('click', () => {\n            slideout.close();\n            self.editFieldUid = null;\n        });\n    },\n\n    // The js output by the condition builder\n    // \"<script>\n    // const conditionBuilderJs = \"<script>Garnish.requestAnimationFrame(() => {\n    //   const $button = $('#sources-__SOURCE_KEY__-condition-type-btn');\n    //   $button.menubtn().data('menubtn').on('optionSelect', event => {\n    //     const $option = $(event.option);\n    //     $button.text($option.text()).removeClass('add');\n    // // Don\\'t use data(\\'value\\') here because it could result in an object if data-value is JSON\n    //     const $input = $('#sources-__SOURCE_KEY__-condition-type-input').val($option.attr('data-value'));\n    //     htmx.trigger($input[0], 'change');\n    //   });\n    // });\n    // htmx.process(htmx.find('#__ID__'));\n    // htmx.trigger(htmx.find('#__ID__'), 'htmx:load');\n    // </script>\";\n    swapPlaceholders(str, sourceKey) {\n        const defaultId = `condition${Math.floor(Math.random() * 1000000)}`;\n\n        return str\n            .replace(/__ID__/g, defaultId)\n            .replace(/__SOURCE_KEY__(?=-)/g, Craft.formatInputId('\"' + sourceKey + '\"'))\n            .replace(/__SOURCE_KEY__/g, sourceKey);\n    },\n});\n","export const FormField = (element) => ({\n\n    element: element,\n    dragHover: false,\n\n    init() {\n\n    },\n\n    // exampleHtml() {\n    //   // let fieldData = window.formBuilder.getFieldByType(this.field.type);\n    //\n    //   let editText = Craft.t('sprout-module-forms', 'Edit');\n    //\n    //   return '<div ' +\n    //     'class=\"layout-field\"\\n' +\n    //     'draggable=\"true\"\\n' +\n    //     'x-on:dragstart=\"handleDragStart\"\\n' +\n    //     'x-on:dblclick=\"editFormField\"\\n' +\n    //     'x-bind:data-type=\"field.type\"' +\n    //     '>' +\n    //     '<div class=\"layout-field-header\">' +\n    //     '<h2 x-bind:class=\"field.required\" x-text=\"field.name\"></h2>' +\n    //     '<code class=\"light\" x-text=\"field.handle\"></code>' +\n    //     '<p x-show=\"field.instructions\" x-text=\"field.instructions\"></p>' +\n    //     '</div>' +\n    //     '<div class=\"body\" x-html=\"field.exampleInputHtml\"></div>' +\n    //     '<div class=\"layout-field-overlay\">' +\n    //     '<div x-on:click=\"editFormField\" class=\"edit-field-button\">'+editText+'</div>' +\n    //     '</div>' +\n    //     '</div>';\n    // },\n\n    // @todo - somehow outputting this collapses padding to left of main body area\n    sourceHtml() {\n        return '<div\\n' +\n            'class=\"source-field\"\\n' +\n            'draggable=\"true\"\\n' +\n            'x-bind:class=\"[dragHover ? \\'drag-hover\\' : \\'\\', element.field.sortOrder % 2 == 0 ? \\'even\\' : \\'odd\\']\"\\n' +\n            'x-on:mouseover=\"dragHover = true\"\\n' +\n            'x-on:mouseleave=\"dragHover = false\"\\n' +\n            'x-on:dragstart.self=\"dragStartSourceField\"\\n' +\n            'x-on:dragend.self=\"dragEndSourceField\"\\n' +\n            'x-bind:data-type=\"element.field.type\"' +\n            '>' +\n            '<h3>' +\n            '<span x-html=\"element.uiSettings.icon\" class=\"sproutforms-icon\"></span>' +\n            '<span x-text=\"element.field.name\" x-bind:data-handle=\"element.field.name\" class=\"sproutforms-sourcefield-name\"></span>' +\n            '</h3>' +\n            '</div>';\n    },\n});\n","import Alpine from 'alpinejs';\nimport {FormBuilder} from './FormBuilder';\n// import {FormTab} from './FormTab';\nimport {FormField} from './FormField';\n\nwindow.Alpine = Alpine;\n\nAlpine.data('FormBuilder', FormBuilder);\n// Alpine.data('FormTab', FormTab);\nAlpine.data('FormField', FormField);\n\nAlpine.start();\n","\nlet Sprout = window.Sprout || {};\n\nSprout.formNameForm = function() {\n\n    let $form = $('#form-name-form');\n    let name = document.getElementById('name-field');\n\n    $form.on('submit', () =>  {\n        if (name.value.length === 0) {\n            Garnish.shake($form);\n            name.focus();\n            return false;\n        } else {\n            $form.submit();\n            return true;\n        }\n    });\n};\n\nif (document.readyState !== 'loading') {\n    Sprout.formNameForm();\n} else {\n    document.addEventListener('DOMContentLoaded', Sprout.formNameForm);\n}\n","/*\n * @link https://sprout.barrelstrengthdesign.com\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license https://craftcms.github.io/license\n */\n\n/* global Craft */\n\nclass SproutFormsIntegration {\n\n    constructor(settings) {\n        const self = this;\n\n        // this.integrationType = typeof settings.integrationType !== 'undefined'\n        //     ? settings.integrationType\n        //     : '';\n        //\n        // // Make the sourceFormField read only\n        // this.disableOptions();\n        //\n        // // Init all empty field selects\n        // this.updateAllFieldSelects();\n        //\n        // this.updateTargetFieldsOnChange = typeof settings.updateTargetFieldsOnChange !== 'undefined'\n        //     ? settings.updateTargetFieldsOnChange\n        //     : [];\n        //\n        // this.updateTargetFieldsOnChange.forEach(function(elementId) {\n        //     // Register an onChange event for all Element IDs identified by the Integration\n        //     $(elementId).change(function() {\n        //         self.updateAllFieldSelects();\n        //     });\n        // });\n    }\n\n    disableOptions() {\n        const self = this;\n        const integrationId = $('#integrationId').val();\n\n        const data = {\n            'integrationId': integrationId,\n        };\n\n        Craft.postActionRequest('sprout-module-forms/form-integration-settings/get-source-form-fields', data, $.proxy(function(response, textStatus) {\n            const statusSuccess = (textStatus === 'success');\n            if (statusSuccess && response.success) {\n                const rows = response.sourceFormFields;\n                $('tbody .formField').each(function(index) {\n                    const td = $(this);\n                    td.empty();\n                    const title = rows[index]['label'];\n                    const handle = rows[index]['value'];\n                    td.append('<div style=\"display:none;\"><select readonly name=\"settings[' + self.integrationType + '][fieldMapping][' + index + '][sourceFormField]\"><option selected value=\"' + handle + '\">' + title + '</option></select></div><div style=\"padding: 7px 10px;font-size: 12px;color:#8f98a3;\">' + title + ' <span class=\"code\">(' + handle + ')</span></div>');\n                });\n            } else {\n                Craft.cp.displayError(Craft.t('sprout', 'Unable to get the Form fields'));\n            }\n        }, this));\n\n        return null;\n    }\n\n    updateAllFieldSelects() {\n        const integrationIdBase = this.integrationType.replace(/\\\\/g, '-');\n        const mappingTableRows = 'table#settings-' + integrationIdBase + '-fieldMapping tr';\n\n        $(mappingTableRows).find('td:eq(2),th:eq(2)').remove();\n        $(mappingTableRows).find('td:eq(0),th:eq(0)').css('width', '50%');\n        $(mappingTableRows).find('td:eq(1),th:eq(1)').css('width', '50%');\n\n        const $currentRows = this.getCurrentRows('tbody .targetFields');\n\n        // Hand off all our current Form data so the Integration can use it if needed\n        const formData = $('#integrationId').closest('form').serialize();\n\n        const self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-integration-settings/get-target-integration-fields', {\n            data: formData,\n        }).then((response) => {\n            const statusSuccess = (textStatus === 'success');\n\n            if (statusSuccess && response.success) {\n                const rows = response.targetIntegrationFields;\n\n                if (rows.length === 0) {\n                    return false;\n                }\n\n                $currentRows.each(function(index) {\n                    const $select = $(this).find('select');\n                    const fields = rows[index];\n\n                    self.appendFieldsToSelect($select, fields);\n                });\n            } else {\n                Craft.cp.displayError(Craft.t('sprout', 'Unable to get the Form fields'));\n            }\n        }, this);\n    }\n\n    getCurrentRows(className = null) {\n        if (className === null) {\n            className = 'tbody .formField';\n        }\n        return $(className);\n    }\n\n    appendFieldsToSelect($select, fields) {\n        $select.empty();\n\n        let dropdown = '';\n        let closeOptgroup = false;\n        $select.append('<option value=\"\">' + Craft.t('sprout', 'None') + '</option>');\n\n        for (let i = 0; i < fields.length; i++) {\n            const field = fields[i];\n            let selectedCode = '';\n            const lastItem = i === (fields.length - 1);\n\n            if (!('optgroup' in field)) {\n                if ('selected' in field) {\n                    selectedCode = 'selected';\n                }\n                dropdown += '<option ' + selectedCode + ' value=\"' + field['value'] + '\">' + field['label'] + '</option>';\n            }\n\n            if (('optgroup' in field && closeOptgroup) || (lastItem && closeOptgroup)) {\n                dropdown += '</optgroup>';\n                closeOptgroup = false;\n            }\n\n            if ('optgroup' in field) {\n                dropdown += '<optgroup label=\"' + field['optgroup'] + '\">';\n                closeOptgroup = true;\n            }\n        }\n\n        $select.append(dropdown);\n    }\n}\n\nwindow.SproutFormsIntegration = SproutFormsIntegration;\n","class IntegrationsRelationsTable {\n\n    constructor(formId, siteId) {\n        this.formId = formId;\n        this.siteId = siteId;\n\n        this.newSelectField = document.getElementById('new-integration');\n\n        this.initLinkSlideout();\n        this.initNewSlideout();\n    }\n\n    initLinkSlideout() {\n        console.log('initialize existing integrations slideouts');\n\n        let self = this;\n\n        let editableItems = document.querySelectorAll('#integrations-field .edit-element-col a');\n\n        editableItems.forEach(function(editableItem) {\n            editableItem.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let integrationId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewSlideout() {\n        console.log('initialize new integrations slideouts');\n\n        let self = this;\n\n        if (this.newSelectField) {\n            let integrationUid = Craft.uuid();\n\n            this.newSelectField.addEventListener('change', function(event) {\n                if (event.target.value) {\n\n                    self.createSlideout(integrationUid, event.target.value);\n                }\n            });\n        }\n    }\n\n    createSlideout(integrationUid, integrationTypeUid) {\n        let self = this;\n\n        console.log('createSlideout', window.formBuilder.integrationsFormFieldMetadata);\n\n        let integrationsFormFieldMetadata = formBuilder.integrationsFormFieldMetadata.length > 0\n            ? JSON.parse(formBuilder.integrationsFormFieldMetadata)\n            : [];\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-integrations/edit-integration-slideout', {\n                data: {\n                    formId: self.formId,\n                    integrationUid: integrationUid,\n                    integrationTypeUid: integrationTypeUid,\n                    integrationsFormFieldMetadata: integrationsFormFieldMetadata,\n                },\n            })\n            .then((response) => {\n                console.log('create slideout response', response);\n\n                if (response.data.success) {\n                    // let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    //     elementId: response.data.elementId,\n                    //     siteId: response.data.siteId,\n                    //     draftId: response.data.draftId,\n                    //     elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                    // });\n\n                    const slideout = new Craft.Slideout(response.data.html, {\n                        containerElement: 'form',\n                        containerAttributes: {\n                            action: 'sprout-module-forms/form-integration-settings/save-integration',\n                            method: 'post',\n                            novalidate: '',\n                            class: 'fld-element-settings',\n                        },\n                    });\n                    Craft.appendBodyHtml(response.data.slideoutJs);\n\n                    slideout.on('submit', () => {\n                        console.log('on slideout submit', response);\n\n                        self.replaceTable();\n                    });\n\n                    slideout.on('close', () => {\n                        console.log('on slideout close', response);\n                        if (this.newSelectField) {\n                            this.newSelectField.value = '';\n                        }\n                    });\n                }\n            });\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-integrations/edit-integration-slideout', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('integrations table html response', response);\n\n                $('#integrations-field').html(response.data.html);\n\n                self.initLinkSlideout();\n                self.initNewSlideout();\n            });\n    }\n}\n\nwindow.IntegrationsRelationsTable = IntegrationsRelationsTable;\n\n\n\n","class DataSourceRelationsTable {\n\n    constructor(elementId, siteId) {\n        this.elementId = elementId;\n        this.siteId = siteId;\n\n        this.initLinkElementSlideout();\n        this.initNewElementSlideout();\n    }\n\n    initLinkElementSlideout() {\n        console.log('initialize existing report element slideouts');\n\n        let self = this;\n\n        let editableElements = document.querySelectorAll('#data-source-relations-field .edit-element-col a');\n\n        editableElements.forEach(function(editableElement) {\n            editableElement.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let elementId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewElementSlideout() {\n        console.log('initialize new report element slideouts');\n\n        let self = this;\n\n        let newSelectField = document.getElementById('new-data-set');\n\n        if (newSelectField) {\n            newSelectField.addEventListener('change', function(event) {\n                Craft.sendActionRequest('POST', 'sprout-module-data-studio/data-set/create-data-set', {\n                        data: {\n                            type: event.target.value,\n                        },\n                    })\n                    .then((response) => {\n                        console.log('create slideout response', response);\n\n                        if (response.data.success) {\n                            let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                                elementId: response.data.elementId,\n                                siteId: response.data.siteId,\n                                draftId: response.data.draftId,\n                                elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                            });\n\n                            slideout.on('submit', () => {\n                                console.log('on slideout submit', response);\n\n                                self.replaceTable();\n                            });\n                        }\n                    });\n            });\n        }\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-data-studio/form-relations-table/get-relations-table', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('reports table html response', response);\n\n                $('#data-source-relations-field').html(response.data.html);\n\n                self.initLinkElementSlideout();\n                self.initNewElementSlideout();\n            });\n    }\n}\n\nwindow.DataSourceRelationsTable = DataSourceRelationsTable;\n\n\n\n","class NotificationEventsRelationsTable {\n\n    constructor(elementId, siteId) {\n        this.elementId = elementId;\n        this.siteId = siteId;\n\n        this.initLinkElementSlideout();\n        this.initNewElementSlideout();\n    }\n\n    initLinkElementSlideout() {\n        console.log('initialize existing email element slideouts');\n\n        let self = this;\n\n        let editableElements = document.querySelectorAll('#notification-event-relations-field .edit-element-col a');\n\n        editableElements.forEach(function(editableElement) {\n            editableElement.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let elementId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewElementSlideout() {\n        console.log('initialize email element slideouts');\n\n        let self = this;\n\n        let newSelectField = document.getElementById('new-transactional-email');\n\n        if (newSelectField) {\n            newSelectField.addEventListener('change', function(event) {\n                console.log('on change email type event', event);\n\n                Craft.sendActionRequest('POST', 'sprout-module-mailer/email/create-email', {\n                        data: {\n                            emailTypeUid: event.target.value,\n                            emailVariant: 'BarrelStrength\\\\Sprout\\\\transactional\\\\components\\\\emailvariants\\\\TransactionalEmailVariant',\n                            emailVariantSettings: {\n                                eventId: 'BarrelStrength\\\\Sprout\\\\forms\\\\components\\\\notificationevents\\\\SaveSubmissionNotificationEvent',\n                                // emailTypeUid: event.target.value,\n                            },\n                        },\n                    })\n                    .then((response) => {\n                        console.log('create slideout response', response);\n\n                        if (response.data.success) {\n                            let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement', {\n                                elementId: response.data.elementId,\n                                siteId: response.data.siteId,\n                                draftId: response.data.draftId,\n                                elementType: 'BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement',\n                            });\n\n                            slideout.on('submit', () => {\n                                console.log('on slideout submit', response);\n\n                                self.replaceTable();\n                            });\n                        }\n                    });\n            });\n        }\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-transactional/form-relations-table/get-relations-table', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('reports table html response', response);\n\n                $('#notification-event-relations-field').html(response.data.html);\n\n                self.initLinkElementSlideout();\n                self.initNewElementSlideout();\n            });\n    }\n}\n\nwindow.NotificationEventsRelationsTable = NotificationEventsRelationsTable;\n\n\n\n"],"names":["$relationModal","$modal","data","response","sproutRelationBtn","event","FormBuilder","formId","self","sourceFields","field","fields","tab","element","fieldData","fieldLayout","fieldLayoutTabs","fieldLayoutFields","uiSettings","fieldAttributes","originTabUid","targetTabUid","type","layoutElement","dropBeforeTargetFieldUid","beforeFieldUid","handle","item","tabUid","fieldUid","tabIndex","index","value","fieldSettings","fieldIndex","targetField","beforeTabUid","beforeTabIndex","targetTab","originTabIndex","originTab","targetTabIndex","originFieldIndex","beforeFieldIndex","newUid","element1","element2","currentElement","$body","$fields","$footer","$removeBtn","$cancelBtn","$applyButton","settingsHtml","$contents","slideout","$form","tabSettingsJs","formData","newSelectedTabUid","newTabIndex","error","fieldSettingsJs","str","sourceKey","defaultId","FormField","Alpine","Sprout","name","SproutFormsIntegration","settings","textStatus","rows","td","title","mappingTableRows","$currentRows","$select","className","dropdown","closeOptgroup","i","selectedCode","lastItem","IntegrationsRelationsTable","siteId","editableItem","integrationUid","integrationTypeUid","integrationsFormFieldMetadata","DataSourceRelationsTable","elementId","editableElement","newSelectField","NotificationEventsRelationsTable"],"mappings":"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"}