{"version":3,"file":"groups-0da14c9e.js","sources":["../../src/core/SourceGroups.js"],"sourcesContent":["/* global Craft */\n\n/* global Garnish */\n\nclass SproutSourceGroupsAdmin {\n\n    constructor(settings) {\n\n        this.groupsSelector = settings.groupsSelector;\n        this.groups = document.querySelector(this.groupsSelector);\n        this.selectedGroup = this.groups.querySelector('a.sel:first-child');\n\n        this.elementType = settings.elementType;\n\n        // Use jQuery for Garnish MenuBtn\n        this.groupSettingsSelector = settings.groupSettingsSelector;\n        this.$groupSettingsBtn = $(this.groupSettingsSelector);\n\n        this.newGroupButtonSelector = settings.newGroupButtonSelector;\n        this.newGroupBtn = document.querySelector(this.newGroupButtonSelector);\n        this.newGroupAction = settings.newGroupAction;\n        this.newGroupOnSuccessUrlBase = settings.newGroupOnSuccessUrlBase;\n        this.newGroupOnErrorMessage = settings.newGroupOnErrorMessage;\n\n        this.renameGroupAction = settings.renameGroupAction;\n        this.renameGroupOnSuccessMessage = settings.renameGroupOnSuccessMessage;\n        this.renameGroupOnErrorMessage = settings.renameGroupOnErrorMessage;\n        this.promptForGroupNameMessage = settings.promptForGroupNameMessage;\n\n        this.deleteGroupAction = settings.deleteGroupAction;\n        this.deleteGroupOnSuccessUrl = settings.deleteGroupOnSuccessUrl;\n        this.deleteGroupConfirmMessage = settings.deleteGroupConfirmMessage;\n        this.deleteGroupOnErrorMessage = settings.deleteGroupOnErrorMessage;\n\n        this.initPage();\n    }\n\n    initPage() {\n        let self = this;\n\n        this.newGroupBtn.addEventListener('click', function() {\n            self.addNewGroup();\n        });\n\n        // Should we display the Groups Setting Selector or not?\n        self.toggleGroupSettingsSelector();\n        self.groups.addEventListener('click', function() {\n            self.toggleGroupSettingsSelector();\n        });\n\n        new Garnish.MenuBtn(self.$groupSettingsBtn, {\n            onOptionSelect: function(elem) {\n\n                const $elem = $(elem);\n\n                if ($elem.hasClass('disabled')) {\n                    return;\n                }\n\n                switch ($(elem).data('action')) {\n                    case 'rename': {\n                        self.renameSelectedGroup();\n                        break;\n                    }\n                    case 'delete': {\n                        self.deleteSelectedGroup();\n                        break;\n                    }\n                }\n            },\n        });\n\n        // Ensure that 'menubtn' classes get registered\n        Craft.initUiElements();\n    }\n\n    addNewGroup() {\n        let self = this;\n        const name = self.promptForGroupName('');\n\n        if (name) {\n            const params = {\n                name: name,\n                type: self.elementType,\n            };\n\n            Craft.sendActionRequest('POST', self.newGroupAction, {\n                data: params,\n            }).then((response) => {\n                if (response.data.success) {\n                    location.href = Craft.getUrl(self.newGroupOnSuccessUrlBase);\n                } else {\n                    Craft.cp.displayError(self.newGroupOnErrorMessage);\n                }\n            });\n        }\n    }\n\n    renameSelectedGroup() {\n        let self = this;\n\n        const oldName = self.selectedGroup.textContent,\n            newName = self.promptForGroupName(oldName);\n\n        if (newName && newName !== oldName) {\n            const params = {\n                id: self.selectedGroup.dataset.id,\n                name: newName,\n                type: self.elementType,\n            };\n\n            Craft.sendActionRequest('POST', self.renameGroupAction, {\n                data: params,\n            }).then((response) => {\n                if (response.data.success) {\n                    this.selectedGroup.textContent = response.data.group.name;\n                    Craft.cp.displayNotice(self.renameGroupOnSuccessMessage);\n                } else {\n                    Craft.cp.displayError(self.renameGroupOnErrorMessage);\n                }\n            });\n        }\n    }\n\n    promptForGroupName(oldName) {\n        return prompt(self.promptForGroupNameMessage, oldName);\n    }\n\n    deleteSelectedGroup() {\n        let self = this;\n        if (confirm(self.deleteGroupConfirmMessage)) {\n            const params = {\n                id: self.selectedGroup.dataset.id,\n            };\n\n            Craft.sendActionRequest('POST', self.deleteGroupAction, {\n                data: params,\n            }).then((response) => {\n                if (response.data.success) {\n                    location.href = Craft.getUrl(self.deleteGroupOnSuccessUrl);\n                } else {\n                    Craft.cp.displayError(self.deleteGroupOnErrorMessage);\n                }\n            });\n        }\n    }\n\n    toggleGroupSettingsSelector() {\n        this.selectedGroup = this.groups.querySelector('a.sel:first-child');\n\n        if (this.selectedGroup.dataset.key === '*' || this.selectedGroup.dataset.readonly) {\n            $(this.$groupSettingsBtn).addClass('hidden');\n        } else {\n            $(this.$groupSettingsBtn).removeClass('hidden');\n        }\n    }\n}\n\nwindow.SproutSourceGroupsAdmin = SproutSourceGroupsAdmin;\n"],"names":["SproutSourceGroupsAdmin","settings","self","elem","name","params","response","oldName","newName"],"mappings":"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"}