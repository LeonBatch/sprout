{"version":3,"file":"phoneField-bb6f10b1.js","sources":["../../src/fields/PhoneField.js"],"sourcesContent":["import './phone-field.scss';\n\n/* global Craft */\n\nclass SproutPhoneField {\n\n    constructor(namespaceInputId, countryId) {\n        this.sproutPhoneFieldId = namespaceInputId;\n        this.sproutPhoneCountryId = countryId;\n        this.sproutPhoneFieldButtonClass = '#' + this.sproutPhoneFieldId + '-field .compoundSelectText-text .sprout-phone-button';\n\n        this.checkValidation();\n        this.addListeners();\n    }\n\n    checkValidation() {\n        let self = this;\n        // We use setTimeout to make sure our function works every time\n        setTimeout(function() {\n            let phoneNumber = document.getElementById(self.sproutPhoneFieldId).value;\n            let country = document.getElementById(self.sproutPhoneCountryId).value;\n\n            let data = {\n                value: {\n                    'country': country,\n                    'phone': phoneNumber,\n                },\n            };\n\n            // Determine if we should show Phone link on initial load\n            self.validatePhoneNumber(document.getElementById(self.sproutPhoneFieldId), data);\n        }, 500);\n    }\n\n    addListeners() {\n        let self = this;\n\n        document.getElementById(this.sproutPhoneFieldId).addEventListener('input', function() {\n            let currentPhoneField = this;\n            let phoneNumber = this.value;\n            let country = document.getElementById(self.sproutPhoneCountryId).value;\n            let data = {\n                value: {\n                    'country': country,\n                    'phone': phoneNumber,\n                },\n            };\n            self.validatePhoneNumber(currentPhoneField, data);\n        });\n    }\n\n    validatePhoneNumber(currentPhoneField, data) {\n        let self = this;\n\n        // Craft.sendActionRequest('POST', 'sprout-module-forms/fields/validate-phone', {\n        //     data: data,\n        // }).then((response) => {\n        //     console.log(response.data);\n        //     if (response.data.success) {\n        //         document.querySelector(self.sproutPhoneFieldButtonClass).classList.add('fade');\n        //         document.querySelector(self.sproutPhoneFieldButtonClass + ' a').setAttribute('href', 'tel:' + data.phone);\n        //     } else {\n        //         document.querySelector(self.sproutPhoneFieldButtonClass).classList.remove('fade');\n        //     }\n        // });\n    }\n}\n\nwindow.SproutPhoneField = SproutPhoneField;\n\n"],"names":["SproutPhoneField","namespaceInputId","countryId","self","phoneNumber","data","currentPhoneField"],"mappings":"AAIA,MAAMA,CAAiB,CAEnB,YAAYC,EAAkBC,EAAW,CACrC,KAAK,mBAAqBD,EAC1B,KAAK,qBAAuBC,EAC5B,KAAK,4BAA8B,IAAM,KAAK,mBAAqB,uDAEnE,KAAK,gBAAe,EACpB,KAAK,aAAY,CACpB,CAED,iBAAkB,CACd,IAAIC,EAAO,KAEX,WAAW,UAAW,CAClB,IAAIC,EAAc,SAAS,eAAeD,EAAK,kBAAkB,EAAE,MAG/DE,EAAO,CACP,MAAO,CACH,QAJM,SAAS,eAAeF,EAAK,oBAAoB,EAAE,MAKzD,MAASC,CACZ,CACjB,EAGYD,EAAK,oBAAoB,SAAS,eAAeA,EAAK,kBAAkB,EAAGE,CAAI,CAClF,EAAE,GAAG,CACT,CAED,cAAe,CACX,IAAIF,EAAO,KAEX,SAAS,eAAe,KAAK,kBAAkB,EAAE,iBAAiB,QAAS,UAAW,CAClF,IAAIG,EAAoB,KACpBF,EAAc,KAAK,MAEnBC,EAAO,CACP,MAAO,CACH,QAHM,SAAS,eAAeF,EAAK,oBAAoB,EAAE,MAIzD,MAASC,CACZ,CACjB,EACYD,EAAK,oBAAoBG,EAAmBD,CAAI,CAC5D,CAAS,CACJ,CAED,oBAAoBC,EAAmBD,EAAM,CAc5C,CACL,CAEA,OAAO,iBAAmBL"}