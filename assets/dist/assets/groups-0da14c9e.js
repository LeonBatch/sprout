class n{constructor(e){this.groupsSelector=e.groupsSelector,this.groups=document.querySelector(this.groupsSelector),this.selectedGroup=this.groups.querySelector("a.sel:first-child"),this.elementType=e.elementType,this.groupSettingsSelector=e.groupSettingsSelector,this.$groupSettingsBtn=$(this.groupSettingsSelector),this.newGroupButtonSelector=e.newGroupButtonSelector,this.newGroupBtn=document.querySelector(this.newGroupButtonSelector),this.newGroupAction=e.newGroupAction,this.newGroupOnSuccessUrlBase=e.newGroupOnSuccessUrlBase,this.newGroupOnErrorMessage=e.newGroupOnErrorMessage,this.renameGroupAction=e.renameGroupAction,this.renameGroupOnSuccessMessage=e.renameGroupOnSuccessMessage,this.renameGroupOnErrorMessage=e.renameGroupOnErrorMessage,this.promptForGroupNameMessage=e.promptForGroupNameMessage,this.deleteGroupAction=e.deleteGroupAction,this.deleteGroupOnSuccessUrl=e.deleteGroupOnSuccessUrl,this.deleteGroupConfirmMessage=e.deleteGroupConfirmMessage,this.deleteGroupOnErrorMessage=e.deleteGroupOnErrorMessage,this.initPage()}initPage(){let e=this;this.newGroupBtn.addEventListener("click",function(){e.addNewGroup()}),e.toggleGroupSettingsSelector(),e.groups.addEventListener("click",function(){e.toggleGroupSettingsSelector()}),new Garnish.MenuBtn(e.$groupSettingsBtn,{onOptionSelect:function(r){if(!$(r).hasClass("disabled"))switch($(r).data("action")){case"rename":{e.renameSelectedGroup();break}case"delete":{e.deleteSelectedGroup();break}}}}),Craft.initUiElements()}addNewGroup(){let e=this;const r=e.promptForGroupName("");if(r){const t={name:r,type:e.elementType};Craft.sendActionRequest("POST",e.newGroupAction,{data:t}).then(o=>{o.data.success?location.href=Craft.getUrl(e.newGroupOnSuccessUrlBase):Craft.cp.displayError(e.newGroupOnErrorMessage)})}}renameSelectedGroup(){let e=this;const r=e.selectedGroup.textContent,t=e.promptForGroupName(r);if(t&&t!==r){const o={id:e.selectedGroup.dataset.id,name:t,type:e.elementType};Craft.sendActionRequest("POST",e.renameGroupAction,{data:o}).then(s=>{s.data.success?(this.selectedGroup.textContent=s.data.group.name,Craft.cp.displayNotice(e.renameGroupOnSuccessMessage)):Craft.cp.displayError(e.renameGroupOnErrorMessage)})}}promptForGroupName(e){return prompt(self.promptForGroupNameMessage,e)}deleteSelectedGroup(){let e=this;if(confirm(e.deleteGroupConfirmMessage)){const r={id:e.selectedGroup.dataset.id};Craft.sendActionRequest("POST",e.deleteGroupAction,{data:r}).then(t=>{t.data.success?location.href=Craft.getUrl(e.deleteGroupOnSuccessUrl):Craft.cp.displayError(e.deleteGroupOnErrorMessage)})}}toggleGroupSettingsSelector(){this.selectedGroup=this.groups.querySelector("a.sel:first-child"),this.selectedGroup.dataset.key==="*"||this.selectedGroup.dataset.readonly?$(this.$groupSettingsBtn).addClass("hidden"):$(this.$groupSettingsBtn).removeClass("hidden")}}window.SproutSourceGroupsAdmin=n;
//# sourceMappingURL=groups-0da14c9e.js.map
