{"version":3,"file":"forms-70cc867e.js","sources":["../../src/core/SourceElementRelations.js","../../src/forms/formbuilder/FormBuilder.js","../../src/forms/formbuilder/FormField.js","../../src/forms/formbuilder/App.js","../../src/forms/FormSettings.js","../../src/forms/Integrations.js","../../src/forms/IntegrationModal.js","../../src/forms/IntegrationsRelationsTable.js","../../src/data-studio/DataSourceRelationsTable.js","../../src/transactional/NotificationEventsRelationsTable.js"],"sourcesContent":["let $relationModal = $('#sprout-relations-modal');\n\nlet $modal = new Garnish.Modal($relationModal, {\n    autoShow: false,\n    closeOtherModals: false,\n    resizable: true,\n    onShow: function() {\n        let relationBtn = document.getElementById('sprout-relations-btn');\n\n        let data = {\n            elementId: relationBtn.dataset.elementId,\n        };\n\n        Craft.sendActionRequest('POST', 'sprout-module-core/source-element-relations/get-relations', {\n            data: data,\n        }).then((response) => {\n            if (response.data.success) {\n                $relationModal.html(response.data.html);\n            }\n        }).catch(() => {\n\n        });\n    },\n    onHide: function() {\n\n    },\n});\n\nlet sproutRelationBtn = document.querySelector('#sprout-relations-btn');\n\nif (sproutRelationBtn !== null) {\n    sproutRelationBtn.addEventListener('click', function(event) {\n        event.preventDefault();\n        $modal.show();\n    }, false);\n}\n","export const FormBuilder = (formId) => ({\n\n    formId: formId,\n\n    lastUpdatedFormFieldUid: null,\n\n    /**\n     * Array of field data\n     * [\n     *  id: 123,\n     *  type: className,\n     *  etc.\n     * ]\n     */\n    sourceFields: [],\n\n    /**\n     * [\n     *   {\n     *     id: 123,\n     *     label: 'X',\n     *     elements: [\n     *        {\n     *          id: 123,\n     *          name: 'Y',\n     *          required,\n     *          getExampleHtml(),\n     *          getSettingsHtml(),\n     *        },\n     *        {},\n     *        {}\n     *      ]\n     *   }\n     * ]\n     */\n    tabs: [],\n    fields: [],\n    uiSettings: [],\n\n    fieldLayoutUid: null,\n\n    selectedTabUid: null,\n    editTabUid: null,\n    editFieldUid: null,\n\n    dragOrigin: null,\n\n    DragOrigins: {\n        sourceField: 'source-field',\n        layoutField: 'layout-field',\n        layoutTabNav: 'layout-tab-nav',\n    },\n\n    isDraggingTabUid: null,\n    isDragOverTabUid: null,\n\n    isDraggingFormFieldUid: null,\n    isDragOverFormFieldUid: null,\n\n    init() {\n\n        let self = this;\n        // Get the saved fieldLayout data\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-submission-field-layout', {\n            data: {\n                formId: this.formId,\n            },\n        }).then((response) => {\n            console.log('get-submission-field-layout', response);\n            // self.tabs = [\n            //   {\n            //     id: 123,\n            //     label: 'Tab 1',\n            //     fields: [],\n            //   },\n            // ];\n            self.tabs = response.data.layout.tabs;\n            // self.fields = response.data.layout.fields;\n            // self.uiSettings = response.data.layout.uiSettings;\n            self.fieldLayoutUid = response.data.layout.uid;\n\n            // get uid of first tab in tabs array\n            self.selectedTabUid = self.tabs[0].uid ?? null;\n\n        }).catch(() => {\n            console.log('No form data found.');\n        });\n\n        window.formBuilder = this;\n\n        let sourceFields = JSON.parse(this.$refs.formBuilder.dataset.sourceFields);\n\n        for (const field of sourceFields) {\n            this.sourceFields.push(field);\n        }\n    },\n\n    get integrationsFormFieldMetadata() {\n\n        let fieldLayout = {};\n\n        if (this.tabs.length && !this.tabs[0].elements.length) {\n            return [];\n        }\n\n        let fields = [];\n\n        for (const tab of this.tabs) {\n\n            for (const element of tab.elements) {\n\n                let fieldData = this.getFormFieldAttributes(element);\n\n                let field = {\n                    name: fieldData.field.name,\n                    handle: fieldData.field.handle,\n                    type: fieldData.field.type,\n                    uid: fieldData.field.uid,\n                };\n\n                fields.push(field);\n            }\n        }\n\n        this.fields = fields;\n\n        return JSON.stringify(fields);\n    },\n\n    get fieldLayoutInputValue() {\n\n        let fieldLayout = {};\n\n        if (this.tabs.length && !this.tabs[0].elements.length) {\n            return [];\n        }\n\n        let fieldLayoutTabs = [];\n\n        for (const tab of this.tabs) {\n\n            let fieldLayoutFields = [];\n\n            for (const element of tab.elements) {\n\n                let field = this.getFormFieldAttributes(element);\n\n                fieldLayoutFields.push(field);\n            }\n\n            fieldLayoutTabs.push({\n                id: tab.uid, // remove\n                uid: tab.uid,\n                name: tab.name,\n                sortOrder: null,\n                userCondition: null,\n                elementCondition: null,\n                elements: fieldLayoutFields,\n            });\n        }\n\n        fieldLayout['tabs'] = fieldLayoutTabs;\n\n        return JSON.stringify(fieldLayout);\n    },\n\n    // Removes uiSettings from element/field data\n    getFormFieldAttributes(fieldData) {\n\n        const {\n            uiSettings,\n            ...fieldAttributes\n        } = fieldData;\n\n        return fieldAttributes;\n    },\n\n    // Drag Actions\n\n    dragStartLayoutTabNav(e) {\n        console.log('dragStartLayoutTabNav');\n\n        e.dataTransfer.setData('sprout/origin-page-tab-uid', e.target.dataset.tabUid);\n        this.dragOrigin = this.DragOrigins.layoutTabNav;\n        this.isDraggingTabUid = e.target.dataset.tabUid;\n\n        // e.dataTransfer.dropEffect = 'link';\n        // e.dataTransfer.effectAllowed = 'copyLink';\n    },\n\n    dragEndLayoutTabNav(e) {\n        console.log('dragEndLayoutTabNav');\n\n        this.dragOrigin = null;\n        this.isDraggingTabUid = null;\n        this.isDragOverTabUid = null;\n    },\n\n    dragEnterLayoutTabNav(e) {\n        console.log('dragEnterLayoutTabNav');\n        e.target.classList.add('no-pointer-events');\n    },\n\n    dragLeaveLayoutTabNav(e) {\n        console.log('dragLeaveLayoutTabNav');\n        e.target.classList.remove('no-pointer-events');\n    },\n\n    dragOverLayoutTabNav(e) {\n        let self = this;\n\n        if (this.dragOrigin === this.DragOrigins.layoutTabNav) {\n\n        }\n\n        if (this.dragOrigin === this.DragOrigins.sourceField || this.dragOrigin === this.DragOrigins.layoutField) {\n            setTimeout(function() {\n                self.selectedTabUid = e.target.dataset.tabUid;\n            }, 1000);\n        }\n    },\n\n    dropOnLayoutTabNav(e) {\n        console.log('dropOnLayoutTabNav');\n\n        let self = this;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n\n        if (this.dragOrigin === this.DragOrigins.layoutTabNav) {\n            this.updateTabPosition(originTabUid, targetTabUid);\n            this.selectedTabUid = originTabUid;\n        }\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            let type = e.dataTransfer.getData('sprout/field-type');\n            this.addFieldToLayoutTab(type);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            this.updateFieldPosition(originTabUid, targetTabUid, self.isDraggingFormFieldUid);\n        }\n    },\n\n    dragStartSourceField(e) {\n        console.log('dragStartSourceField');\n\n        this.dragOrigin = this.DragOrigins.sourceField;\n\n        e.dataTransfer.setData('sprout/field-type', e.target.dataset.type);\n\n        // e.dataTransfer.dropEffect = 'link';\n        // e.dataTransfer.effectAllowed = 'copyLink';\n    },\n\n    dragEndSourceField(e) {\n        console.log('dragEndSourceField');\n\n        this.isDraggingFormFieldUid = null;\n        this.isDragOverFormFieldUid = null;\n    },\n\n    dragStartLayoutField(e) {\n        console.log('dragStartLayoutField');\n\n        let self = this;\n\n        // Store selected tab in drag object as it might change before the drop event\n        e.dataTransfer.setData('sprout/origin-page-tab-uid', this.selectedTabUid);\n        e.dataTransfer.setData('sprout/field-type', e.target.dataset.type);\n        this.dragOrigin = this.DragOrigins.layoutField;\n        this.isDraggingTabUid = e.target.dataset.tabUid;\n        this.isDraggingFormFieldUid = e.target.dataset.fieldUid;\n\n        // Need setTimeout before manipulating dom:\n        // https://stackoverflow.com/questions/19639969/html5-dragend-event-firing-immediately\n        // setTimeout(function() {\n        //   self.isDraggingFormFieldUid = isDraggingFormFieldUid;\n        // }, 10);\n\n        // e.dataTransfer.dropEffect = 'move';\n        // e.dataTransfer.effectAllowed = 'move';\n\n        // Handle scroll stuff: https://stackoverflow.com/a/72807140/1586560\n        // On drag scroll, prevents page from growing with mobile safari rubber-band effect\n        // let VerticalMaxed = (window.innerHeight + window.scrollY) >= document.body.offsetHeight;\n        //\n        // this.scrollActive = true;\n        //\n        // if (e.clientY < 150) {\n        //   this.scrollActive = false;\n        //   this.scrollFieldLayout(-1);\n        // }\n        //\n        // if ((e.clientY > (document.documentElement.clientHeight - 150)) && !VerticalMaxed) {\n        //   this.scrollActive = false;\n        //   this.scrollFieldLayout(1)\n        // }\n    },\n\n    dragEndLayoutField(e) {\n        console.log('dragEndLayoutField');\n\n        // Reset scrolling\n        // this.scrollActive = false;\n\n        this.isDraggingFormFieldUid = null;\n        this.isDragOverFormFieldUid = null;\n    },\n\n    dragEnterLayoutTabBody(e) {\n        console.log('dragEnterLayoutTabBody');\n\n        this.isDragOverTabUid = this.selectedTabUid;\n    },\n\n    dragLeaveLayoutTabBody(e) {\n        console.log('dragLeaveLayoutTabBody');\n\n        this.isDragOverTabUid = null;\n    },\n\n    dropOnLayoutTabBody(e) {\n        console.log('dropOnLayoutTabBody');\n        let self = this;\n\n        // @todo - implement\n        this.$dispatch('form-field-update', { 'formFieldName': 'FieldNameTest' });\n\n        e.target.classList.remove('no-pointer-events');\n\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            this.addFieldToLayoutTab(type);\n\n            let fieldData = this.getFieldByType(type);\n            let layoutElement = this.getLayoutElement(fieldData.field.uid, fieldData.field, fieldData.uiSettings);\n            this.editFormField(layoutElement);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            let dropBeforeTargetFieldUid = e.target.dataset.fieldUid;\n            this.updateFieldPosition(originTabUid, this.selectedTabUid, self.isDraggingFormFieldUid, dropBeforeTargetFieldUid);\n        }\n    },\n\n    dragEnterLayoutField(e) {\n        console.log('dragEnterLayoutField');\n        e.target.classList.add('no-pointer-events');\n\n    },\n\n    dragLeaveLayoutField(e) {\n        console.log('dragLeaveLayoutField');\n        e.target.classList.remove('no-pointer-events');\n    },\n\n    dropOnExistingLayoutField(e) {\n        console.log('dropOnExistingLayoutField');\n        let self = this;\n\n        e.target.classList.remove('no-pointer-events');\n\n        // let fieldUid = e.dataTransfer.getData('sprout/field-id');\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n        let beforeFieldUid = e.target.dataset.fieldUid;\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            this.addFieldToLayoutTab(type, beforeFieldUid);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            this.updateFieldPosition(originTabUid, targetTabUid, self.isDraggingFormFieldUid, beforeFieldUid);\n        }\n    },\n\n    dragEnterFieldLayoutEndZone(e) {\n        console.log('dragEnterFieldLayoutEndZone');\n\n        // this.isMouseOverEndZone = true;\n    },\n\n    dragLeaveFieldLayoutEndZone(e) {\n        console.log('dragLeaveFieldLayoutEndZone');\n\n        // this.isMouseOverEndZone = false;\n    },\n\n    dropOnLayoutEndZone(e) {\n        console.log('dropOnLayoutEndZone');\n        let self = this;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n        let beforeFieldUid = e.target.dataset.fieldUid;\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            this.addFieldToLayoutTab(type);\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n            this.updateFieldPosition(originTabUid, targetTabUid, self.isDraggingFormFieldUid, beforeFieldUid);\n        }\n    },\n\n    // See specifying drop targets docs:\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n    dragOverLayoutTabBody(e) {\n        const isDraggingFormField = e.dataTransfer.types.includes('sprout/field-type');\n\n        if (isDraggingFormField) {\n            console.log('dragOverLayoutTabBody');\n            event.preventDefault();\n        }\n    },\n\n    dragOverLayoutField(e) {\n        const isDraggingLayoutField = e.dataTransfer.types.includes('sprout/field-type');\n\n        if (isDraggingLayoutField) {\n            // console.log('dragOverLayoutField');\n            event.preventDefault();\n        }\n    },\n\n    isOverFieldLayoutEndZone(e) {\n        const sproutFormField = e.dataTransfer.types.includes('sprout/field-type');\n\n        // this.isDragOverTabUid = this.selectedTabUid;\n        // this.isDragOverFormFieldUid = e.target.parentNode.dataset.fieldUid;\n\n\n        if (sproutFormField) {\n            console.log('isOverFieldLayoutEndZone');\n            event.preventDefault();\n        }\n    },\n\n    // Helper Methods\n\n    getFieldsByGroup(handle) {\n        return this.sourceFields.filter(item => item.groupName === handle);\n    },\n\n    getFieldByType(type) {\n        return this.sourceFields.filter(item => item.field.type === type)[0] ?? null;\n    },\n\n    getTabIndexByTabUid(tabUid) {\n        return this.tabs.findIndex(item => item.uid === tabUid);\n    },\n\n    getFieldIndexByFieldUid(tab, fieldUid) {\n        return tab.elements.findIndex(item => item.fieldUid === fieldUid);\n    },\n\n    updateTabSettings(tabUid, data) {\n        let tabIndex = this.getTabIndexByTabUid(tabUid);\n\n        // loop through js object\n        Object.entries(data).forEach(([index, value]) => {\n            this.tabs[tabIndex][index] = value;\n        });\n\n        if (!this.tabs[tabIndex]['name']) {\n            this.tabs[tabIndex]['name'] = 'Page';\n        }\n    },\n\n    updateFieldSettings(fieldUid, fieldSettings) {\n\n        let tabIndex = this.getTabIndexByTabUid(this.selectedTabUid);\n        let tab = this.tabs[tabIndex];\n\n        let fieldIndex = this.getFieldIndexByFieldUid(tab, fieldUid);\n        let targetField = tab.elements[fieldIndex];\n\n        targetField.name = fieldSettings.name;\n        targetField.instructions = fieldSettings.instructions;\n        targetField.required = fieldSettings.required;\n        targetField.settings = fieldSettings.settings;\n        // loop through fieldSettings.settings and update the targetField.settings\n        // console.log(fieldSettings);\n\n        tab.elements[fieldIndex] = targetField;\n    },\n\n    updateTabPosition(tabUid, beforeTabUid = null) {\n\n        let beforeTabIndex = this.getTabIndexByTabUid(beforeTabUid);\n        let tabIndex = this.getTabIndexByTabUid(tabUid);\n        let targetTab = this.tabs[tabIndex];\n\n        // console.log(this.tabs);\n        // Remove the updated tab\n        this.tabs.splice(tabIndex, 1);\n\n        if (beforeTabUid) {\n\n            // console.log('target' + targetTab);\n            // Insert the updated tab before the target tab\n            this.tabs.splice(beforeTabIndex, 0, targetTab);\n        } else {\n            this.tabs.push(targetTab);\n        }\n\n        this.lastUpdatedTabUid = targetTab.uid;\n    },\n\n    updateFieldPosition(originTabUid, targetTabUid, fieldUid, beforeFieldUid = null) {\n\n        console.log('updateFieldPosition');\n\n        let originTabIndex = this.getTabIndexByTabUid(originTabUid);\n        let originTab = this.tabs[originTabIndex];\n\n        let targetTabIndex = this.getTabIndexByTabUid(targetTabUid);\n        let targetTab = this.tabs[targetTabIndex];\n\n        if (!targetTab) {\n            targetTab = originTab;\n        }\n\n        let originFieldIndex = this.getFieldIndexByFieldUid(originTab, fieldUid);\n        let targetField = originTab.elements[originFieldIndex];\n\n        // Remove the updated field from the layout\n        // this might change the indexes of the elements on the tab\n        originTab.elements.splice(originFieldIndex, 1);\n\n        if (beforeFieldUid) {\n            let beforeFieldIndex = this.getFieldIndexByFieldUid(targetTab, beforeFieldUid);\n\n            // Insert the updated field before the target field\n            targetTab.elements.splice(beforeFieldIndex, 0, targetField);\n        } else {\n            targetTab.elements.push(targetField);\n        }\n\n        // Update tab\n        this.tabs[targetTabIndex] = targetTab;\n\n        this.lastUpdatedFormFieldUid = targetField.uid;\n\n        this.resetLastUpdated();\n    },\n\n    addFormPageButton() {\n        let newUid = Craft.uuid();\n        let tab = {\n            uid: newUid,\n            name: 'New Page',\n            userCondition: null,\n            elementCondition: null,\n            elements: [],\n        };\n\n        this.tabs.push(tab);\n        this.selectedTabUid = newUid;\n    },\n\n    addFieldToLayoutTab(type, beforeFieldUid = null) {\n\n        console.log('addFieldToLayoutTab', type, beforeFieldUid);\n\n        let fieldData = this.getFieldByType(type);\n        fieldData.field.type = type;\n\n        if (this.dragOrigin === this.DragOrigins.sourceField) {\n            fieldData.field.name = fieldData.uiSettings.displayName;\n            fieldData.field.handle = fieldData.uiSettings.defaultHandle + '_' + Craft.randomString(4);\n            fieldData.field.uid = Craft.uuid();\n        }\n\n        if (this.dragOrigin === this.DragOrigins.layoutField) {\n\n        }\n\n        let fieldUid = fieldData.field.uid;\n\n        let tabIndex = this.getTabIndexByTabUid(this.selectedTabUid);\n        let layoutElement = this.getLayoutElement(fieldUid, fieldData.field, fieldData.uiSettings);\n        this.tabs[tabIndex].elements.push(layoutElement);\n\n        if (beforeFieldUid) {\n\n            let tabIndex = this.getTabIndexByTabUid(this.selectedTabUid);\n            let tab = this.tabs[tabIndex];\n\n            let fieldIndex = this.getFieldIndexByFieldUid(tab, fieldUid);\n            let targetField = tab.elements[fieldIndex];\n\n            // Remove the updated field\n            tab.elements.splice(fieldIndex, 1);\n\n            // let beforeFieldIndex = tab.elements.length + 1;\n            let beforeFieldIndex = this.getFieldIndexByFieldUid(tab, beforeFieldUid);\n\n            // Insert the updated field before the target field\n            tab.elements.splice(beforeFieldIndex, 0, targetField);\n\n            // Update tab\n            this.tabs[tabIndex] = tab;\n\n            this.lastUpdatedFormFieldUid = targetField.uid;\n\n            this.resetLastUpdated();\n        }\n    },\n\n    getLayoutElement(fieldUid, field, uiSettings) {\n        return {\n            type: 'BarrelStrength\\\\Sprout\\\\forms\\\\submissions\\\\CustomFormField',\n            required: false,\n            width: 100,\n            uid: Craft.uuid(),\n            userCondition: null,\n            elementCondition: null,\n            fieldUid: fieldUid,\n            field: field,\n            uiSettings: uiSettings,\n        };\n    },\n\n    resetLastUpdated() {\n        let self = this;\n\n        // The timeout here needs to match the time of the 'drop-highlight' css transition effect\n        setTimeout(function() {\n            self.lastUpdatedFormFieldUid = null;\n        }, 300);\n    },\n\n    // scrollFieldLayout(stepY) {\n    //   let scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n    //   window.scrollTo(0, (scrollY + stepY));\n    //\n    //   if (this.scrollActive) {\n    //     setTimeout(function() {\n    //       scroll(0, stepY);\n    //     }, 20);\n    //   }\n    // },\n\n    isBefore(element1, element2) {\n        if (element2.parentNode === element1.parentNode) {\n            for (let currentElement = element1.previousSibling; currentElement && currentElement.nodeType !== 9; currentElement = currentElement.previousSibling) {\n                if (currentElement === element2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // Field Stuff\n\n    editFormTab(tab) {\n\n        let self = this;\n\n        this.editTabUid = tab.uid;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-tab-settings-html', {\n            data: {\n                formId: this.formId,\n                tab: tab,\n            },\n        }).then((response) => {\n\n            self.openTabSlideout(response);\n\n        }).catch(() => {\n            console.log('No form data found.');\n        });\n\n    },\n\n    openTabSlideout(response) {\n\n        let self = this;\n\n        const $body = $('<div/>', {class: 'fld-element-settings-body'});\n        const $fields = $('<div/>', {class: 'fields'}).appendTo($body);\n        const $footer = $('<div/>', {class: 'fld-element-settings-footer'});\n\n        const $removeBtn = Craft.ui.createButton({\n            class: 'icon',\n            attr: {\n                'data-icon': 'trash',\n            },\n            label: Craft.t('app', 'Remove'),\n            spinner: true,\n        });\n\n        $removeBtn.attr('data-icon', 'trash');\n\n        // Copied from Craft's FieldLayoutDesigner.js\n        const $cancelBtn = Craft.ui.createButton({\n            data: {\n                trashed: true,\n            },\n            label: Craft.t('app', 'Close'),\n            spinner: true,\n        });\n\n        const $applyButton = Craft.ui.createSubmitButton({\n            class: 'secondary',\n            label: Craft.t('app', 'Apply'),\n            spinner: true,\n        });\n\n        $removeBtn.appendTo($footer);\n        $('<div/>', {class: 'flex-grow'}).appendTo($footer);\n        $cancelBtn.appendTo($footer);\n        $applyButton.appendTo($footer);\n\n        let settingsHtml = self.swapPlaceholders(response.data.settingsHtml, response.data.tabUid);\n\n        $(settingsHtml).appendTo($fields);\n\n        const $contents = $body.add($footer);\n\n        // Make sure condition builder js is only added once\n        $('.sprout-conditionbuilder-slideout').remove();\n\n        const slideout = new Craft.Slideout($contents, {\n            containerElement: 'form',\n            containerAttributes: {\n                method: 'post',\n                action: '',\n                class: 'fld-element-settings slideout sprout-conditionbuilder-slideout',\n                id: 'sprout-tab-modal',\n            },\n        });\n\n        const $form = slideout.$container;\n\n        let tabSettingsJs = self.swapPlaceholders(response.data.tabSettingsJs, response.data.tabUid);\n        Craft.appendBodyHtml(tabSettingsJs);\n\n        $form.on('submit', function(event) {\n            event.preventDefault();\n\n            let formData = new FormData($form[0]);\n\n            Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-tab-object', {\n                data: formData,\n            }).then((response) => {\n                self.updateTabSettings(self.editTabUid, {\n                    name: response.data.name,\n                    userCondition: response.data.userCondition,\n                    elementCondition: response.data.elementCondition,\n                });\n            });\n\n            slideout.close();\n        });\n\n        $removeBtn.on('click', () => {\n            // if only 1 tab exists, don't allow it to be removed\n            if (self.tabs.length === 1) {\n                Craft.cp.displayNotice(Craft.t('sprout-module-forms', 'Form must contain at least one tab.'));\n\n                return;\n            }\n\n            let tabIndex = self.getTabIndexByTabUid(self.selectedTabUid);\n\n            let newSelectedTabUid = (tabIndex - 1) >= 0\n                ? self.tabs[tabIndex - 1].uid\n                : self.tabs[tabIndex + 1].uid;\n\n            self.tabs.splice(tabIndex, 1);\n\n            let newTabIndex = self.getTabIndexByTabUid(newSelectedTabUid);\n            self.selectedTabUid = self.tabs[newTabIndex].uid;\n            self.editTabUid = self.selectedTabUid;\n\n            slideout.close();\n        });\n\n        $cancelBtn.on('click', () => {\n            slideout.close();\n            self.editFieldUid = null;\n        });\n    },\n\n    editFormField(layoutElement) {\n\n        // Testing CP Screen Slideout\n        // this.editFormFieldViaCpScreen(layoutElement);\n\n        // Testing DIY Slideout\n        this.editFormFieldViaSettingsHtml(layoutElement);\n    },\n\n    editFormFieldViaCpScreen(layoutElement) {\n        let self = this;\n\n        self.editFieldUid = layoutElement.fieldUid;\n\n        let data = {\n            formId: this.formId,\n            layoutElement: layoutElement,\n        };\n\n        new Craft.CpScreenSlideout('sprout-module-forms/forms/edit-form-field-slideout-via-cp-screen', {\n            hasTabs: true,\n            tabManager: '',\n            params: {\n                formId: this.formId,\n                layoutElement: layoutElement,\n            },\n        });\n    },\n\n    editFormFieldViaSettingsHtml(layoutElement) {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-field-settings-html', {\n            data: {\n                formId: this.formId,\n                layoutElement: layoutElement,\n            },\n        }).then((response) => {\n\n            self.openFieldSlideout(response);\n\n        }).catch((error) => {\n            console.log(error);\n            console.log('No form field data found.');\n        });\n    },\n\n    openFieldSlideout(response) {\n\n        let self = this;\n\n        const $body = $('<div/>', {class: 'fld-element-settings-body'});\n        const $fields = $('<div/>', {class: 'fields'}).appendTo($body);\n        const $footer = $('<div/>', {class: 'fld-element-settings-footer'});\n\n        const $removeBtn = Craft.ui.createButton({\n            class: 'icon',\n            attr: {\n                'data-icon': 'trash',\n            },\n            label: Craft.t('app', 'Remove'),\n            spinner: true,\n        });\n\n        $removeBtn.attr('data-icon', 'trash');\n\n        // Copied from Craft's FieldLayoutDesigner.js\n        const $cancelBtn = Craft.ui.createButton({\n            data: {\n                trashed: true,\n            },\n            label: Craft.t('app', 'Close'),\n            spinner: true,\n        });\n\n        const $applyButton = Craft.ui.createSubmitButton({\n            class: 'secondary',\n            label: Craft.t('app', 'Apply'),\n            spinner: true,\n        });\n\n        $removeBtn.appendTo($footer);\n        $('<div/>', {class: 'flex-grow'}).appendTo($footer);\n        $cancelBtn.appendTo($footer);\n        $applyButton.appendTo($footer);\n\n        let settingsHtml = self.swapPlaceholders(response.data.settingsHtml, response.data.fieldUid);\n\n        $(response.data.requiredSettingsHtml).appendTo($fields);\n        $(settingsHtml).appendTo($fields);\n        // $(response.data.additionalSettingsHtml).appendTo($fields);\n\n        const $contents = $body.add($footer);\n\n        // Make sure condition builder js is only added once\n        $('.sprout-conditionbuilder-slideout').remove();\n\n        const slideout = new Craft.Slideout($contents, {\n            containerElement: 'form',\n            containerAttributes: {\n                method: 'post',\n                action: '',\n                class: 'fld-element-settings slideout sprout-conditionbuilder-slideout',\n                id: 'sprout-field-modal',\n            },\n        });\n\n        const $form = slideout.$container;\n\n        Craft.initUiElements($body);\n\n        let fieldSettingsJs = self.swapPlaceholders(response.data.fieldSettingsJs, response.data.fieldUid);\n        Craft.appendBodyHtml(fieldSettingsJs);\n\n        $form.on('submit', function(event) {\n            event.preventDefault();\n\n            let formData = new FormData($form[0]);\n            // let fieldSettings = JSON.stringify(Object.fromEntries(formData));\n            // console.log(fieldSettings);\n\n            Craft.sendActionRequest('POST', 'sprout-module-forms/forms/get-form-field-object', {\n                data: formData,\n            }).then((response) => {\n\n                // self.updateTabSettings(self.editTabUid, {\n                //     name: response.data.name,\n                //     userCondition: response.data.userCondition,\n                //     elementCondition: response.data.elementCondition,\n                // });\n                //\n                self.updateFieldSettings(self.editFieldUid, JSON.parse(response.data.fieldSettings));\n            });\n\n            slideout.close();\n        });\n\n        $removeBtn.on('click', () => {\n            let tabIndex = self.getTabIndexByTabUid(self.selectedTabUid);\n            let tab = self.tabs[tabIndex];\n            let fieldIndex = self.getFieldIndexByFieldUid(tab, self.editFieldUid);\n            self.tabs[tabIndex].elements.splice(fieldIndex, 1);\n            self.editFieldUid = null;\n\n            slideout.close();\n        });\n\n        $cancelBtn.on('click', () => {\n            slideout.close();\n            self.editFieldUid = null;\n        });\n    },\n\n    // The js output by the condition builder\n    // \"<script>\n    // const conditionBuilderJs = \"<script>Garnish.requestAnimationFrame(() => {\n    //   const $button = $('#sources-__SOURCE_KEY__-condition-type-btn');\n    //   $button.menubtn().data('menubtn').on('optionSelect', event => {\n    //     const $option = $(event.option);\n    //     $button.text($option.text()).removeClass('add');\n    // // Don\\'t use data(\\'value\\') here because it could result in an object if data-value is JSON\n    //     const $input = $('#sources-__SOURCE_KEY__-condition-type-input').val($option.attr('data-value'));\n    //     htmx.trigger($input[0], 'change');\n    //   });\n    // });\n    // htmx.process(htmx.find('#__ID__'));\n    // htmx.trigger(htmx.find('#__ID__'), 'htmx:load');\n    // </script>\";\n    swapPlaceholders(str, sourceKey) {\n        const defaultId = `condition${Math.floor(Math.random() * 1000000)}`;\n\n        return str\n            .replace(/__ID__/g, defaultId)\n            .replace(/__SOURCE_KEY__(?=-)/g, Craft.formatInputId('\"' + sourceKey + '\"'))\n            .replace(/__SOURCE_KEY__/g, sourceKey);\n    },\n});\n","export const FormField = (element) => ({\n\n    element: element,\n    dragHover: false,\n\n    init() {\n\n    },\n\n    // exampleHtml() {\n    //   // let fieldData = window.formBuilder.getFieldByType(this.field.type);\n    //\n    //   let editText = Craft.t('sprout-module-forms', 'Edit');\n    //\n    //   return '<div ' +\n    //     'class=\"layout-field\"\\n' +\n    //     'draggable=\"true\"\\n' +\n    //     'x-on:dragstart=\"handleDragStart\"\\n' +\n    //     'x-on:dblclick=\"editFormField\"\\n' +\n    //     'x-bind:data-type=\"field.type\"' +\n    //     '>' +\n    //     '<div class=\"layout-field-header\">' +\n    //     '<h2 x-bind:class=\"field.required\" x-text=\"field.name\"></h2>' +\n    //     '<code class=\"light\" x-text=\"field.handle\"></code>' +\n    //     '<p x-show=\"field.instructions\" x-text=\"field.instructions\"></p>' +\n    //     '</div>' +\n    //     '<div class=\"body\" x-html=\"field.exampleInputHtml\"></div>' +\n    //     '<div class=\"layout-field-overlay\">' +\n    //     '<div x-on:click=\"editFormField\" class=\"edit-field-button\">'+editText+'</div>' +\n    //     '</div>' +\n    //     '</div>';\n    // },\n\n    // @todo - somehow outputting this collapses padding to left of main body area\n    sourceHtml() {\n        return '<div\\n' +\n            'class=\"source-field\"\\n' +\n            'draggable=\"true\"\\n' +\n            'x-bind:class=\"[dragHover ? \\'drag-hover\\' : \\'\\', element.field.sortOrder % 2 == 0 ? \\'even\\' : \\'odd\\']\"\\n' +\n            'x-on:mouseover=\"dragHover = true\"\\n' +\n            'x-on:mouseleave=\"dragHover = false\"\\n' +\n            'x-on:dragstart.self=\"dragStartSourceField\"\\n' +\n            'x-on:dragend.self=\"dragEndSourceField\"\\n' +\n            'x-bind:data-type=\"element.field.type\"' +\n            '>' +\n            '<h3>' +\n            '<span x-html=\"element.uiSettings.icon\" class=\"sproutforms-icon\"></span>' +\n            '<span x-text=\"element.field.name\" x-bind:data-handle=\"element.field.name\" class=\"sproutforms-sourcefield-name\"></span>' +\n            '</h3>' +\n            '</div>';\n    },\n});\n","import Alpine from 'alpinejs';\nimport {FormBuilder} from './FormBuilder';\n// import {FormTab} from './FormTab';\nimport {FormField} from './FormField';\n\nwindow.Alpine = Alpine;\n\nAlpine.data('FormBuilder', FormBuilder);\n// Alpine.data('FormTab', FormTab);\nAlpine.data('FormField', FormField);\n\nAlpine.start();\n","/*\n * @link https://sprout.barrelstrengthdesign.com\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license https://craftcms.github.io/license\n */\n\n/* global Craft */\n/* global Garnish */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n    Craft.SproutForms = {};\n}\n\n(function($) {\n    Craft.SproutForms.FormSettings = Garnish.Base.extend({\n\n        options: null,\n        modal: null,\n        $lightswitches: null,\n\n        /**\n         * The constructor.\n         */\n        init: function() {\n            // init method\n            this.initButtons();\n        },\n\n        /**\n         * Adds edit buttons to existing integrations.\n         */\n        initButtons: function() {\n            const that = this;\n\n            // Add listeners to all the items that start with sproutform-field-\n            $('a[id^=\\'sproutform-integration\\']').each(function(i, el) {\n                const integrationId = $(el).data('integrationid');\n\n                if (integrationId) {\n                    that.addListener($('#sproutform-integration-' + integrationId), 'activate', 'editIntegration');\n                }\n            });\n\n            this.$lightswitches = $('.sproutforms-integration-row .lightswitch');\n\n            this.addListener(this.$lightswitches, 'click', 'onEnableIntegration');\n\n            this.modal = Craft.SproutForms.IntegrationModal.getInstance();\n\n            this.modal.on('saveIntegration', $.proxy(function(e) {\n                const integration = e.integration;\n                // Let's update the name if the integration is updated\n                this.resetIntegration(integration);\n            }, this));\n\n            this.addListener($('#integrationsOptions'), 'change', 'createDefaultIntegration');\n        },\n\n        onEnableIntegration: function(ev) {\n            const lightswitch = ev.currentTarget;\n            const integrationId = lightswitch.id;\n            let enabled = $(lightswitch).attr('aria-checked');\n            enabled = enabled === 'true' ? 1 : 0;\n            const formId = $('#formId').val();\n\n            const data = {integrationId: integrationId, enabled: enabled, formId: formId};\n\n            Craft.postActionRequest('sprout-module-forms/form-integrations/enable-integration', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success' && response.success) {\n                    Craft.cp.displayNotice(Craft.t('sprout', 'Integration updated.'));\n                } else {\n                    Craft.cp.displayError(Craft.t('sprout', 'Unable to update integration'));\n                }\n            }, this));\n\n        },\n\n        /**\n         * Renames | update icon |\n         * of an existing integration after edit it\n         *\n         * @param integration\n         */\n        resetIntegration: function(integration) {\n            const $integrationDiv = $('#sproutform-integration-' + integration.id);\n\n            const $container = $('#integration-enabled-' + integration.id);\n\n            const currentValue = integration.enabled === '1' ? true : false;\n            const settingsValue = $container.attr('aria-checked') === 'true' ? true : false;\n            if (currentValue !== settingsValue) {\n                $container.attr('aria-checked', '' + currentValue);\n                if (currentValue) {\n                    $container.addClass('on');\n                } else {\n                    $container.removeClass('on');\n                }\n            }\n            $integrationDiv.html(integration.name);\n        },\n\n        createDefaultIntegration: function(type) {\n\n            const that = this;\n            const integrationTableBody = $('#sproutforms-integrations-table tbody');\n            const currentIntegration = $('#integrationsOptions').val();\n            const formId = $('#formId').val();\n\n            if (currentIntegration === '') {\n                return;\n            }\n\n            const data = {\n                type: currentIntegration,\n                formId: formId,\n                sendRule: '*',\n            };\n\n            Craft.postActionRequest('sprout-module-forms/form-integrations/save-integration', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    const integration = response.integration;\n\n                    integrationTableBody.append('<tr class=\"field sproutforms-integration-row\" id =\"sproutforms-integration-row-' + integration.id + '\">' +\n                        '<td class=\"heading\">' +\n                        '<a href=\"#\" id =\"sproutform-integration-' + integration.id + '\" data-integrationid=\"' + integration.id + '\">' + integration.name + '</a>' +\n                        '</td>' +\n                        '<td>' +\n                        '<div class=\"lightswitch small\" tabindex=\"0\" data-value=\"1\" role=\"checkbox\" aria-checked=\"false\" id =\"integration-enabled-' + integration.id + '\">' +\n                        '<div class=\"lightswitch-container\">' +\n                        '<div class=\"handle\"></div>' +\n                        '</div>' +\n                        '<input type=\"hidden\" name=\"\" value=\"\">' +\n                        '</div>' +\n                        '</td>' +\n                        '</tr>');\n\n                    that.addListener($('#sproutform-integration-' + integration.id), 'activate', 'editIntegration');\n\n                    $('#integrationsOptions').val('');\n                    const $container = $('#integration-enabled-' + integration.id);\n                    $container.lightswitch();\n                    that.addListener($container, 'click', 'onEnableIntegration');\n                } else {\n                    // something went wrong\n                }\n            }, this));\n\n        },\n\n        editIntegration: function(currentOption) {\n            const option = currentOption.currentTarget;\n\n            const integrationId = $(option).data('integrationid');\n            // Make our field available to our parent function\n            //this.$field = $(option);\n            this.base($(option));\n\n            this.modal.editIntegration(integrationId);\n        },\n\n    });\n\n})(jQuery);\n","/*\n * @link https://sprout.barrelstrengthdesign.com\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license https://craftcms.github.io/license\n */\n\n/* global Craft */\n\nclass SproutFormsIntegration {\n\n    constructor(settings) {\n        const self = this;\n\n        // this.integrationType = typeof settings.integrationType !== 'undefined'\n        //     ? settings.integrationType\n        //     : '';\n        //\n        // // Make the sourceFormField read only\n        // this.disableOptions();\n        //\n        // // Init all empty field selects\n        // this.updateAllFieldSelects();\n        //\n        // this.updateTargetFieldsOnChange = typeof settings.updateTargetFieldsOnChange !== 'undefined'\n        //     ? settings.updateTargetFieldsOnChange\n        //     : [];\n        //\n        // this.updateTargetFieldsOnChange.forEach(function(elementId) {\n        //     // Register an onChange event for all Element IDs identified by the Integration\n        //     $(elementId).change(function() {\n        //         self.updateAllFieldSelects();\n        //     });\n        // });\n    }\n\n    disableOptions() {\n        const self = this;\n        const integrationId = $('#integrationId').val();\n\n        const data = {\n            'integrationId': integrationId,\n        };\n\n        Craft.postActionRequest('sprout-module-forms/form-integrations/get-source-form-fields', data, $.proxy(function(response, textStatus) {\n            const statusSuccess = (textStatus === 'success');\n            if (statusSuccess && response.success) {\n                const rows = response.sourceFormFields;\n                $('tbody .formField').each(function(index) {\n                    const td = $(this);\n                    td.empty();\n                    const title = rows[index]['label'];\n                    const handle = rows[index]['value'];\n                    td.append('<div style=\"display:none;\"><select readonly name=\"settings[' + self.integrationType + '][fieldMapping][' + index + '][sourceFormField]\"><option selected value=\"' + handle + '\">' + title + '</option></select></div><div style=\"padding: 7px 10px;font-size: 12px;color:#8f98a3;\">' + title + ' <span class=\"code\">(' + handle + ')</span></div>');\n                });\n            } else {\n                Craft.cp.displayError(Craft.t('sprout', 'Unable to get the Form fields'));\n            }\n        }, this));\n\n        return null;\n    }\n\n    updateAllFieldSelects() {\n        const integrationIdBase = this.integrationType.replace(/\\\\/g, '-');\n        const mappingTableRows = 'table#settings-' + integrationIdBase + '-fieldMapping tr';\n\n        $(mappingTableRows).find('td:eq(2),th:eq(2)').remove();\n        $(mappingTableRows).find('td:eq(0),th:eq(0)').css('width', '50%');\n        $(mappingTableRows).find('td:eq(1),th:eq(1)').css('width', '50%');\n\n        const $currentRows = this.getCurrentRows('tbody .targetFields');\n\n        // Hand off all our current Form data so the Integration can use it if needed\n        const formData = $('#integrationId').closest('form').serialize();\n\n        const self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-integrations/get-target-integration-fields', {\n            data: formData,\n        }).then((response) => {\n            const statusSuccess = (textStatus === 'success');\n\n            if (statusSuccess && response.success) {\n                const rows = response.targetIntegrationFields;\n\n                if (rows.length === 0) {\n                    return false;\n                }\n\n                $currentRows.each(function(index) {\n                    const $select = $(this).find('select');\n                    const fields = rows[index];\n\n                    self.appendFieldsToSelect($select, fields);\n                });\n            } else {\n                Craft.cp.displayError(Craft.t('sprout', 'Unable to get the Form fields'));\n            }\n        }, this);\n    }\n\n    getCurrentRows(className = null) {\n        if (className === null) {\n            className = 'tbody .formField';\n        }\n        return $(className);\n    }\n\n    appendFieldsToSelect($select, fields) {\n        $select.empty();\n\n        let dropdown = '';\n        let closeOptgroup = false;\n        $select.append('<option value=\"\">' + Craft.t('sprout', 'None') + '</option>');\n\n        for (let i = 0; i < fields.length; i++) {\n            const field = fields[i];\n            let selectedCode = '';\n            const lastItem = i === (fields.length - 1);\n\n            if (!('optgroup' in field)) {\n                if ('selected' in field) {\n                    selectedCode = 'selected';\n                }\n                dropdown += '<option ' + selectedCode + ' value=\"' + field['value'] + '\">' + field['label'] + '</option>';\n            }\n\n            if (('optgroup' in field && closeOptgroup) || (lastItem && closeOptgroup)) {\n                dropdown += '</optgroup>';\n                closeOptgroup = false;\n            }\n\n            if ('optgroup' in field) {\n                dropdown += '<optgroup label=\"' + field['optgroup'] + '\">';\n                closeOptgroup = true;\n            }\n        }\n\n        $select.append(dropdown);\n    }\n}\n\nwindow.SproutFormsIntegration = SproutFormsIntegration;\n","/*\n * @link https://sprout.barrelstrengthdesign.com\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license https://craftcms.github.io/license\n */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n    Craft.SproutForms = {};\n}\n\n(function($) {\n    let MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n    // If mutation observer is not supported, create a harness for it for graceful degradation.\n    // Older browsers could be supported through the DOMNodeInserted event, but that can be saved for another day...\n    if (!MutationObserver) {\n        MutationObserver = function() {\n        };\n        MutationObserver.prototype.observe = function() {\n        };\n        MutationObserver.prototype.disconnect = function() {\n        };\n    }\n\n    /**\n     * SproutForms.IntegrationModal class\n     * Handles the modal window for editing integrations.\n     */\n    Craft.SproutForms.IntegrationModal = Garnish.Modal.extend({\n\n            $body: null,\n            $content: null,\n            $main: null,\n            $footer: null,\n            $leftButtons: null,\n            $rightButtons: null,\n            $saveBtn: null,\n            $cancelBtn: null,\n            $deleteBtn: null,\n            $saveSpinner: null,\n            $deleteSpinner: null,\n            $loadSpinner: null,\n            addedDelete: false,\n\n            $html: null,\n            $js: null,\n            $css: null,\n            $currentHtml: null,\n            $currentJs: null,\n            $currentCss: null,\n\n            $observed: null,\n            observer: null,\n\n            templateLoaded: false,\n            executedJs: null,\n            loadedCss: null,\n\n            /**\n             * The constructor.\n             */\n            init: function(settings) {\n                this.base();\n                this.setSettings(settings, {\n                    resizable: true,\n                });\n\n                this.$currentHtml = $();\n                this.$currentJs = $();\n                this.$currentCss = $();\n                this.$observed = $();\n\n                this.executedJs = {};\n                this.loadedCss = {};\n\n                // Observe the DOM\n                this.observer = new MutationObserver($.proxy(function(mutations) {\n                    for (let i = 0; i < mutations.length; i++) {\n                        this.$observed = this.$observed.add(mutations[i].addedNodes);\n                    }\n                }, this));\n\n                const $container = $('<form class=\"modal sprout-field-modal\" style=\"display: none; opacity: 0;\">').appendTo(Garnish.$bod);\n\n                this.$body = $('<div class=\"body\">').appendTo($container);\n                this.$content = $('<div class=\"content\">').appendTo(this.$body);\n                this.$main = $('<div class=\"main\">').appendTo(this.$content);\n                this.$footer = $('<div class=\"footer\">').appendTo($container);\n                this.$loadSpinner = $('<div class=\"spinner big\">').appendTo($container);\n\n                this.$leftButtons = $('<div class=\"buttons left\">').appendTo(this.$footer);\n                this.$rightButtons = $('<div class=\"buttons right\">').appendTo(this.$footer);\n\n                this.$deleteSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$leftButtons);\n\n                this.$deleteBtn = $('<div class=\"btn delete hidden\" role=\"button\">').text(Craft.t('sprout', 'Delete')).appendTo(this.$leftButtons);\n                this.$cancelBtn = $('<div class=\"btn disabled\" role=\"button\">').text(Craft.t('sprout', 'Cancel')).appendTo(this.$rightButtons);\n                this.$saveBtn = $('<div class=\"btn submit disabled\" role=\"button\">').text(Craft.t('sprout', 'Save')).appendTo(this.$rightButtons);\n                this.$saveSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$rightButtons);\n\n                this.setContainer($container);\n\n                this.$loadSpinner.addClass('hidden');\n                const response = {\n                    html: '',\n                    js: '',\n                    css: '',\n                };\n                this.initTemplate(response);\n            },\n\n            /**\n             * Prepares the Integration settings template HTML, CSS and Javascript.\n             *\n             * @param template\n             */\n            initTemplate: function(template) {\n                const callback = $.proxy(function(e) {\n                    this.$html = e.$html;\n                    this.$js = e.$js;\n                    this.$css = e.$css;\n\n                    this.templateLoaded = true;\n                    this.initListeners();\n                    if (this.visible) {\n                        this.initSettings();\n                    }\n\n                    this.off('parseTemplate', callback);\n                }, this);\n\n                this.on('parseTemplate', callback);\n                this.parseTemplate(template);\n            },\n\n            /**\n             * Takes raw HTML, CSS and Javascript and parses it ready to be used in the DOM.\n             * It also loads any external resources if they are needed.\n             *\n             * @param template\n             */\n            parseTemplate: function(template) {\n                const that = this;\n                const $head = Garnish.$doc.find('head');\n\n                const $html = $(template.html);\n                const $js = $(template.js).filter('script');\n                const $css = $(template.css).filter('style, link');\n\n                // Ensure that external stylesheets are loaded asynchronously\n                const $cssFiles = $css.filter('link').prop('async', true);\n                const $cssInline = $css.filter('style');\n\n                $cssFiles.each(function() {\n                    const $this = $(this);\n                    const src = $this.prop('href');\n\n                    if (!that.loadedCss.hasOwnProperty(src)) {\n                        $head.append($this);\n                        that.loadedCss[src] = $this;\n                    }\n                });\n\n                // Load external Javascript files asynchronously, and remove them from being executed again.\n                // This assumes that external Javascript files are simply library files, that don't directly and\n                // instantly execute code that modifies the DOM. Library files can be loaded and executed once and\n                // reused later on.\n                // The Javascript tags that directly contain code are assumed to be context-dependent, so they are\n                // saved to be executed each time the modal is opened.\n                const $jsFiles = $js.filter('[src]');\n                const $jsInline = $js.filter(':not([src])');\n\n                const jsFiles = [];\n                $jsFiles.each(function() {\n                    const $this = $(this);\n                    const src = $this.prop('src');\n                    if (!that.executedJs.hasOwnProperty(src)) {\n                        jsFiles.push(src);\n                        that.executedJs[src] = true;\n                    }\n                });\n\n                const callback = function() {\n                    that.off('runExternalScripts', callback);\n                    that.trigger('parseTemplate', {\n                        target: this,\n                        $html: $html,\n                        $js: $jsInline,\n                        $css: $cssInline,\n                    });\n                };\n                // Fixes bug on Craft3 - Updates way to callback function\n                $.when(this.runExternalScripts(jsFiles)).then(callback());\n                //this.runExternalScripts(jsFiles);\n\n                this.$deleteBtn.removeClass('hidden');\n                this.$saveBtn.removeClass('disabled');\n                this.$cancelBtn.removeClass('disabled');\n            },\n\n            /**\n             * Runs external Javascript files\n             *\n             * @param files - An array of URL's (as strings) to Javascript files\n             */\n            runExternalScripts: function(files) {\n                let filesCount = files.length;\n\n                if (filesCount > 0) {\n                    for (let i = 0; i < files.length; i++) {\n                        const src = files[i];\n\n                        // Fixes Double-instantiating bug\n                        if ((src.indexOf('MatrixConfigurator') >= 0) ||\n                            (src.indexOf('TableFieldSettings.min.js') >= 0) ||\n                            (src.indexOf('quill.min.js') >= 0) ||\n                            (src.indexOf('sproutfields.js') >= 0) ||\n                            (src.indexOf('EditableTable.js') >= 0) ||\n                            (src.indexOf('initialize.js') >= 0)\n                        ) {\n                            $.getScript(src, $.proxy(function(data, status) {\n                                if (status === 'success') {\n                                    filesCount--;\n\n                                    if (filesCount === 0) {\n                                        this.trigger('runExternalScripts', {\n                                            target: this,\n                                        });\n                                    }\n                                } else {\n                                    Craft.cp.displayError(Craft.t('sprout', 'Could not load all resources.'));\n                                }\n                            }, this));\n                        }\n                    }\n                } else {\n                    this.trigger('runExternalScripts', {\n                        target: this,\n                    });\n                }\n            },\n\n            /**\n             * Binds all listeners so the quick integration buttons can start working.\n             */\n            initListeners: function() {\n                this.$deleteBtn.addClass('hidden');\n                this.$cancelBtn.addClass('disabled');\n                this.$saveBtn.addClass('disabled');\n\n                this.addListener(this.$cancelBtn, 'activate', 'closeModal');\n                this.addListener(this.$saveBtn, 'activate', 'saveIntegration');\n                if (!this.addedDelete) {\n                    this.addListener(this.$deleteBtn, 'click', 'deleteIntegration');\n                    this.addedDelete = true;\n                }\n\n                this.on('show', this.initSettings);\n                this.on('fadeOut', this.destroySettings);\n\n                this.enable();\n            },\n\n            /**\n             * Unbinds all listeners.\n             */\n            destroyListeners: function() {\n                this.$cancelBtn.addClass('disabled');\n                this.$saveBtn.addClass('disabled');\n\n                this.removeListener(this.$cancelBtn, 'activate');\n                this.removeListener(this.$saveBtn, 'activate');\n\n                this.off('show', this.initSettings);\n                this.off('fadeOut', this.destroySettings);\n\n                this.disable();\n            },\n\n            /**\n             * Initialises the HTML, CSS and Javascript for the modal window.\n             */\n            initSettings: function(e) {\n                const that = e && e.target ? e.target : this;\n\n                // If the template files are not loaded yet, just cancel initialisation of the settings.\n                if (!that.templateLoaded) {\n                    return;\n                }\n\n                that.$currentHtml = e && e.$html ? e.$html : that.$html.clone();\n                that.$currentJs = e && e.$js ? e.$js : that.$js.clone();\n                that.$currentCss = e && e.$css ? e.$css : that.$css.clone();\n\n                // Save any new nodes that are added to the body during initialisation, so they can be safely removed later.\n                that.$observed = $();\n                that.observer.observe(Garnish.$bod[0], {childList: true, subtree: false});\n\n                that.$main.append(that.$currentHtml);\n                Garnish.$bod.append(that.$currentJs);\n\n                Craft.initUiElements();\n\n                // Rerun the external scripts as some field types may need to make DOM changes in their external files.\n                // This means that libraries are being initialized multiple times, but hopefully they're smart enough to\n                // deal with that. So far, no issues.\n                const callback = function() {\n                    that.off('runExternalScripts', callback);\n\n                    // Stop observing after a healthy timeout to ensure all mutations are captured.\n                    setTimeout(function() {\n                        that.observer.disconnect();\n                    }, 1);\n                };\n                $.when(that.runExternalScripts(Object.keys(that.executedJs))).then(callback());\n                //that.on('runExternalScripts', callback);\n                //that.runExternalScripts(Object.keys(that.executedJs));\n            },\n\n            /**\n             * Event handler for when the modal window finishes fading out after hiding.\n             * Clears out all events and elements of the modal.\n             */\n            destroySettings: function(e) {\n                const that = e && e.target ? e.target : this;\n\n                that.$currentHtml.remove();\n                that.$currentJs.remove();\n                that.$currentCss.remove();\n                that.$observed.remove();\n            },\n\n            /**\n             * Event handler for the Close button.\n             * Hides the modal window from view.\n             */\n            closeModal: function() {\n                this.hide();\n            },\n\n            /**\n             * Event handler for the save button.\n             * Saves the Integration settings to the database.\n             *\n             * @param e\n             */\n            saveIntegration: function(e) {\n                if (e) {\n                    e.preventDefault();\n                }\n\n                if (this.$saveBtn.hasClass('disabled') || !this.$saveSpinner.hasClass('hidden')) {\n                    return;\n                }\n\n                this.destroyListeners();\n\n                this.$saveSpinner.removeClass('hidden');\n                const data = this.$container.serialize();\n\n                const inputId = this.$container.find('input[name=\"integrationId\"]');\n                const id = inputId.length ? inputId.val() : false;\n\n                Craft.postActionRequest('sprout-module-forms/form-integrations/save-integration', data, $.proxy(function(response, textStatus) {\n                    this.$saveSpinner.addClass('hidden');\n\n                    const statusSuccess = (textStatus === 'success');\n\n                    if (statusSuccess && response.success) {\n                        this.initListeners();\n\n                        this.trigger('saveIntegration', {\n                            target: this,\n                            integration: response.integration,\n                        });\n\n                        Craft.cp.displayNotice(Craft.t('sprout', '\\'{name}\\' integration saved.', {name: response.integration.name}));\n\n                        this.hide();\n                    } else if (statusSuccess && response.template) {\n                        if (this.visible) {\n                            const callback = $.proxy(function(e) {\n                                this.initListeners();\n                                this.destroySettings();\n                                this.initSettings(e);\n                                this.off('parseTemplate', callback);\n                            }, this);\n\n                            this.on('parseTemplate', callback);\n                            this.parseTemplate(response.template);\n\n                            Garnish.shake(this.$container);\n                        } else {\n                            this.initListeners();\n                        }\n                    } else {\n                        this.initListeners();\n\n                        Craft.cp.displayError(Craft.t('sprout', 'An unknown error occurred.'));\n                    }\n                }, this));\n            },\n\n            /**\n             *\n             * @param id\n             */\n            editIntegration: function(id) {\n                this.destroyListeners();\n                this.show();\n                this.initListeners();\n\n                this.$loadSpinner.removeClass('hidden');\n\n                const formId = $('#formId').val();\n                const data = {\n                    'integrationId': id,\n                    'formId': formId,\n                };\n\n                Craft.postActionRequest('sprout-module-forms/form-integrations/edit-integration', data, $.proxy(function(response, textStatus) {\n                    this.$loadSpinner.addClass('hidden');\n\n                    const statusSuccess = (textStatus === 'success');\n\n                    if (statusSuccess && response.success) {\n                        const callback = $.proxy(function(e) {\n                            this.destroySettings();\n                            this.initSettings(e);\n                            this.off('parseTemplate', callback);\n                        }, this);\n\n                        this.on('parseTemplate', callback);\n                        this.parseTemplate(response.template);\n                    } else if (statusSuccess && response.error) {\n                        Craft.cp.displayError(response.error);\n\n                        this.hide();\n                    } else {\n                        Craft.cp.displayError(Craft.t('sprout', 'An unknown error occurred. '));\n\n                        this.hide();\n                    }\n                }, this));\n            },\n\n            deleteIntegration: function(e) {\n                e.preventDefault();\n                const userResponse = this.confirmDeleteIntegration();\n\n                if (userResponse) {\n                    this.destroyListeners();\n\n                    const data = this.$container.serialize();\n\n                    const integrationId = $(this.$container).find('input[name=\"integrationId\"]').val();\n\n                    Craft.postActionRequest('sprout-module-forms', data, $.proxy(function(response, textStatus) {\n                        const statusSuccess = (textStatus === 'success');\n\n                        if (statusSuccess && response.success) {\n\n                            Craft.cp.displayNotice(Craft.t('sprout', 'Integration deleted.'));\n\n                            $('#sproutforms-integration-row-' + integrationId).remove();\n\n                            this.initListeners();\n                            this.hide();\n                        } else {\n                            Craft.cp.displayError(Craft.t('sprout', 'Unable to delete integration.'));\n\n                            this.hide();\n                        }\n                    }, this));\n                }\n            },\n\n            confirmDeleteIntegration: function() {\n                return confirm('Are you sure you want to delete this integration and all of it\\'s settings?');\n            },\n\n            /**\n             * Prevents the modal from closing if it's disabled.\n             * This fixes issues if the modal is closed when saving/deleting integrations.\n             */\n            hide: function() {\n                if (!this._disabled) {\n                    this.base();\n                }\n            },\n\n            /**\n             * Removes everything to do with the modal form the DOM.\n             */\n            destroy: function() {\n                this.base.destroy();\n\n                this.destroyListeners();\n                this.destroySettings();\n\n                this.$shade.remove();\n                this.$container.remove();\n\n                this.trigger('destroy');\n            },\n        },\n        {\n            /**\n             * (Static) Singleton pattern.\n             *\n             * @returns IntegrationModal\n             */\n            getInstance: function() {\n                if (!this._instance) {\n                    this._instance = new Craft.SproutForms.IntegrationModal();\n                }\n\n                return this._instance;\n            },\n        });\n\n})(jQuery);\n","class IntegrationsRelationsTable {\n\n    constructor(formId, siteId) {\n        this.formId = formId;\n        this.siteId = siteId;\n\n        this.newSelectField = document.getElementById('new-integration');\n\n        this.initLinkSlideout();\n        this.initNewSlideout();\n    }\n\n    initLinkSlideout() {\n        console.log('initialize existing integrations slideouts');\n\n        let self = this;\n\n        let editableItems = document.querySelectorAll('#integrations-field .edit-element-col a');\n\n        editableItems.forEach(function(editableItem) {\n            editableItem.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let integrationId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewSlideout() {\n        console.log('initialize new integrations slideouts');\n\n        let self = this;\n\n        if (this.newSelectField) {\n            let integrationUid = Craft.uuid();\n\n            this.newSelectField.addEventListener('change', function(event) {\n                if (event.target.value) {\n\n                    self.createSlideout(integrationUid, event.target.value);\n                }\n            });\n        }\n    }\n\n    createSlideout(integrationUid, integrationTypeUid) {\n        let self = this;\n\n        let onPageIntegrationsFormFieldMetadata = document.querySelector('.sprout-form-builder').dataset.integrationsFormFieldMetadata;\n\n        let integrationsFormFieldMetadata = onPageIntegrationsFormFieldMetadata\n            ? JSON.parse(onPageIntegrationsFormFieldMetadata)\n            : [];\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/edit-integration-slideout', {\n                data: {\n                    formId: self.formId,\n                    integrationUid: integrationUid,\n                    integrationTypeUid: integrationTypeUid,\n                    integrationsFormFieldMetadata: integrationsFormFieldMetadata,\n                },\n            })\n            .then((response) => {\n                console.log('create slideout response', response);\n\n                if (response.data.success) {\n                    // let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    //     elementId: response.data.elementId,\n                    //     siteId: response.data.siteId,\n                    //     draftId: response.data.draftId,\n                    //     elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                    // });\n\n                    const slideout = new Craft.Slideout(response.data.html, {\n                        containerElement: 'form',\n                        containerAttributes: {\n                            action: 'sprout-module-forms/form-integrations/save-integration',\n                            method: 'post',\n                            novalidate: '',\n                            class: 'fld-element-settings',\n                        },\n                    });\n                    Craft.appendBodyHtml(response.data.slideoutJs);\n\n                    slideout.on('submit', () => {\n                        console.log('on slideout submit', response);\n\n                        self.replaceTable();\n                    });\n\n                    slideout.on('close', () => {\n                        console.log('on slideout close', response);\n                        if (this.newSelectField) {\n                            this.newSelectField.value = '';\n                        }\n                    });\n                }\n            });\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/forms/edit-integration-slideout', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('integrations table html response', response);\n\n                $('#integrations-field').html(response.data.html);\n\n                self.initLinkSlideout();\n                self.initNewSlideout();\n            });\n    }\n}\n\nwindow.IntegrationsRelationsTable = IntegrationsRelationsTable;\n\n\n\n","class DataSourceRelationsTable {\n\n    constructor(elementId, siteId) {\n        this.elementId = elementId;\n        this.siteId = siteId;\n\n        this.initLinkElementSlideout();\n        this.initNewElementSlideout();\n    }\n\n    initLinkElementSlideout() {\n        console.log('initialize existing report element slideouts');\n\n        let self = this;\n\n        let editableElements = document.querySelectorAll('#data-source-relations-field .edit-element-col a');\n\n        editableElements.forEach(function(editableElement) {\n            editableElement.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let elementId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewElementSlideout() {\n        console.log('initialize new report element slideouts');\n\n        let self = this;\n\n        let newSelectField = document.getElementById('new-data-set');\n\n        if (newSelectField) {\n            newSelectField.addEventListener('change', function(event) {\n                Craft.sendActionRequest('POST', 'sprout-module-data-studio/data-set/create-data-set', {\n                        data: {\n                            type: event.target.value,\n                        },\n                    })\n                    .then((response) => {\n                        console.log('create slideout response', response);\n\n                        if (response.data.success) {\n                            let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                                elementId: response.data.elementId,\n                                siteId: response.data.siteId,\n                                draftId: response.data.draftId,\n                                elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                            });\n\n                            slideout.on('submit', () => {\n                                console.log('on slideout submit', response);\n\n                                self.replaceTable();\n                            });\n                        }\n                    });\n            });\n        }\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-data-studio/form-relations-table/get-relations-table', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('reports table html response', response);\n\n                $('#data-source-relations-field').html(response.data.html);\n\n                self.initLinkElementSlideout();\n                self.initNewElementSlideout();\n            });\n    }\n}\n\nwindow.DataSourceRelationsTable = DataSourceRelationsTable;\n\n\n\n","class NotificationEventsRelationsTable {\n\n    constructor(elementId, siteId) {\n        this.elementId = elementId;\n        this.siteId = siteId;\n\n        this.initLinkElementSlideout();\n        this.initNewElementSlideout();\n    }\n\n    initLinkElementSlideout() {\n        console.log('initialize existing email element slideouts');\n\n        let self = this;\n\n        let editableElements = document.querySelectorAll('#notification-event-relations-field .edit-element-col a');\n\n        editableElements.forEach(function(editableElement) {\n            editableElement.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let elementId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewElementSlideout() {\n        console.log('initialize email element slideouts');\n\n        let self = this;\n\n        let newSelectField = document.getElementById('new-transactional-email');\n\n        if (newSelectField) {\n            newSelectField.addEventListener('change', function(event) {\n                console.log('on change email type event', event);\n\n                Craft.sendActionRequest('POST', 'sprout-module-mailer/email/create-email', {\n                        data: {\n                            emailTypeUid: event.target.value,\n                            emailVariant: 'BarrelStrength\\\\Sprout\\\\transactional\\\\components\\\\emailvariants\\\\TransactionalEmailVariant',\n                            emailVariantSettings: {\n                                eventId: 'BarrelStrength\\\\Sprout\\\\forms\\\\components\\\\notificationevents\\\\SaveSubmissionNotificationEvent',\n                                // emailTypeUid: event.target.value,\n                            },\n                        },\n                    })\n                    .then((response) => {\n                        console.log('create slideout response', response);\n\n                        if (response.data.success) {\n                            let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement', {\n                                elementId: response.data.elementId,\n                                siteId: response.data.siteId,\n                                draftId: response.data.draftId,\n                                elementType: 'BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement',\n                            });\n\n                            slideout.on('submit', () => {\n                                console.log('on slideout submit', response);\n\n                                self.replaceTable();\n                            });\n                        }\n                    });\n            });\n        }\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-transactional/form-relations-table/get-relations-table', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('reports table html response', response);\n\n                $('#notification-event-relations-field').html(response.data.html);\n\n                self.initLinkElementSlideout();\n                self.initNewElementSlideout();\n            });\n    }\n}\n\nwindow.NotificationEventsRelationsTable = NotificationEventsRelationsTable;\n\n\n\n"],"names":["$relationModal","$modal","data","response","sproutRelationBtn","event","FormBuilder","formId","self","sourceFields","field","fields","tab","element","fieldData","fieldLayout","fieldLayoutTabs","fieldLayoutFields","uiSettings","fieldAttributes","e","originTabUid","targetTabUid","type","layoutElement","dropBeforeTargetFieldUid","beforeFieldUid","handle","item","tabUid","fieldUid","tabIndex","index","value","fieldSettings","fieldIndex","targetField","beforeTabUid","beforeTabIndex","targetTab","originTabIndex","originTab","targetTabIndex","originFieldIndex","beforeFieldIndex","newUid","element1","element2","currentElement","$body","$fields","$footer","$removeBtn","$cancelBtn","$applyButton","settingsHtml","$contents","slideout","$form","tabSettingsJs","formData","newSelectedTabUid","newTabIndex","error","fieldSettingsJs","str","sourceKey","defaultId","FormField","Alpine","$","that","i","el","integrationId","integration","ev","lightswitch","enabled","textStatus","$integrationDiv","$container","currentValue","settingsValue","integrationTableBody","currentIntegration","currentOption","option","SproutFormsIntegration","settings","rows","td","title","mappingTableRows","$currentRows","$select","className","dropdown","closeOptgroup","selectedCode","lastItem","MutationObserver","mutations","template","callback","$head","$html","$js","$css","$cssFiles","$cssInline","$this","src","$jsFiles","$jsInline","jsFiles","files","filesCount","status","inputId","statusSuccess","id","IntegrationsRelationsTable","siteId","editableItem","integrationUid","integrationTypeUid","onPageIntegrationsFormFieldMetadata","integrationsFormFieldMetadata","DataSourceRelationsTable","elementId","editableElement","newSelectField","NotificationEventsRelationsTable"],"mappings":"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"}