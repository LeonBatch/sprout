{"version":3,"file":"forms-61fb77ce.js","sources":["../../src/core/SourceElementRelations.js","../../src/forms/formbuilder/helpers/DragDrop.js","../../src/forms/formbuilder/helpers/FieldLayout.js","../../src/forms/formbuilder/FormBuilder.js","../../src/forms/formbuilder/FormField.js","../../src/forms/formbuilder/App.js","../../src/forms/NewForm.js","../../src/forms/Integrations.js","../../src/forms/IntegrationsRelationsTable.js","../../src/data-studio/DataSourceRelationsTable.js","../../src/transactional/NotificationEventsRelationsTable.js"],"sourcesContent":["let $relationModal = $('#sprout-relations-modal');\n\nlet $modal = new Garnish.Modal($relationModal, {\n    autoShow: false,\n    closeOtherModals: false,\n    resizable: true,\n    onShow: function() {\n        let relationBtn = document.getElementById('sprout-relations-btn');\n\n        let data = {\n            elementId: relationBtn.dataset.elementId,\n        };\n\n        Craft.sendActionRequest('POST', 'sprout-module-core/source-element-relations/get-relations', {\n            data: data,\n        }).then((response) => {\n            if (response.data.success) {\n                $relationModal.html(response.data.html);\n            }\n        }).catch(() => {\n\n        });\n    },\n    onHide: function() {\n\n    },\n});\n\nlet sproutRelationBtn = document.querySelector('#sprout-relations-btn');\n\nif (sproutRelationBtn !== null) {\n    sproutRelationBtn.addEventListener('click', function(event) {\n        event.preventDefault();\n        $modal.show();\n    }, false);\n}\n","const DragDrop = {\n\n    // -------------------------------------------------------------------------\n    // LAYOUT TAB NAV\n    // -------------------------------------------------------------------------\n\n    dragStartLayoutTabNav: function(e) {\n        console.log('dragStartLayoutTabNav');\n\n        e.dataTransfer.setData('sprout/origin-page-tab-uid', e.target.dataset.tabUid);\n        window.FormBuilder.dragOrigin = window.FormBuilder.DragOrigins.layoutTabNav;\n        window.FormBuilder.isDraggingTabUid = e.target.dataset.tabUid;\n\n        // e.dataTransfer.dropEffect = 'link';\n        // e.dataTransfer.effectAllowed = 'copyLink';\n    },\n\n    dragEndLayoutTabNav: function(e) {\n        console.log('dragEndLayoutTabNav');\n\n        window.FormBuilder.dragOrigin = null;\n        window.FormBuilder.isDraggingTabUid = null;\n        window.FormBuilder.isDragOverTabUid = null;\n    },\n\n    dragEnterLayoutTabNav: function(e) {\n        console.log('dragEnterLayoutTabNav');\n        e.target.classList.add('no-pointer-events');\n    },\n\n    dragLeaveLayoutTabNav: function(e) {\n        console.log('dragLeaveLayoutTabNav');\n        e.target.classList.remove('no-pointer-events');\n    },\n\n    dragOverLayoutTabNav: function(e) {\n        let FormBuilder = window.FormBuilder;\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutTabNav) {\n\n        }\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.sourceField || FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutField) {\n            setTimeout(function() {\n                FormBuilder.selectedTabUid = e.target.dataset.tabUid;\n            }, 1000);\n        }\n    },\n\n    dropOnLayoutTabNav: function(e) {\n        console.log('dropOnLayoutTabNav');\n\n        let FormBuilder = window.FormBuilder;\n        let FieldLayoutHelper = FormBuilder.FieldLayoutHelper;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutTabNav) {\n            FieldLayoutHelper.updateTabPosition(originTabUid, targetTabUid);\n            FormBuilder.selectedTabUid = originTabUid;\n        }\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.sourceField) {\n            let type = e.dataTransfer.getData('sprout/field-type');\n            FieldLayoutHelper.addFieldToLayoutTab(type);\n        }\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutField) {\n            FieldLayoutHelper.updateFieldLayoutElementPosition(\n                originTabUid,\n                targetTabUid,\n                FormBuilder.isDraggingFormFieldUid\n            );\n        }\n    },\n\n    // -------------------------------------------------------------------------\n    // LAYOUT TAB BODY\n    // -------------------------------------------------------------------------\n\n    // See specifying drop targets docs:\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n    dragOverLayoutTabBody: function(e) {\n        const isDraggingFormField = e.dataTransfer.types.includes('sprout/field-type');\n\n        if (isDraggingFormField) {\n            console.log('dragOverLayoutTabBody');\n            event.preventDefault();\n        }\n    },\n\n    dragLeaveLayoutTabBody: function(e) {\n        console.log('dragLeaveLayoutTabBody');\n        window.FormBuilder.isDragOverTabUid = null;\n    },\n\n    dragEnterLayoutTabBody: function(e) {\n        console.log('dragEnterLayoutTabBody');\n\n        let FormBuilder = window.FormBuilder;\n\n        FormBuilder.isDragOverTabUid = FormBuilder.selectedTabUid;\n    },\n\n    dropOnLayoutTabBody: function(e) {\n        console.log('dropOnLayoutTabBody');\n\n        let FormBuilder = window.FormBuilder;\n        let FieldLayoutHelper = FormBuilder.FieldLayoutHelper;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.sourceField) {\n            FieldLayoutHelper.addFieldToLayoutTab(type);\n\n            let fieldData = FieldLayoutHelper.getFieldByType(type);\n            let layoutElement = FieldLayoutHelper.getLayoutElement(fieldData.field.uid, fieldData.field, fieldData.uiSettings);\n            FieldLayoutHelper.editFieldLayoutElement(layoutElement);\n        }\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutField) {\n            let dropBeforeTargetFieldUid = e.target.dataset.fieldUid;\n            FieldLayoutHelper.updateFieldLayoutElementPosition(\n                originTabUid,\n                FormBuilder.selectedTabUid,\n                FormBuilder.isDraggingFormFieldUid,\n                dropBeforeTargetFieldUid\n            );\n        }\n\n        console.log('tabs', FormBuilder.tabs);\n    },\n\n    // -------------------------------------------------------------------------\n    // SOURCE FIELDS\n    // -------------------------------------------------------------------------\n\n    dragStartSourceField: function(e) {\n        console.log('dragStartSourceField');\n\n        window.FormBuilder.dragOrigin = window.FormBuilder.DragOrigins.sourceField;\n\n        e.dataTransfer.setData('sprout/field-type', e.target.dataset.type);\n\n        // e.dataTransfer.dropEffect = 'link';\n        // e.dataTransfer.effectAllowed = 'copyLink';\n    },\n\n    dragEndSourceField: function(e) {\n        console.log('dragEndSourceField');\n\n        window.FormBuilder.isDraggingFormFieldUid = null;\n        window.FormBuilder.isDragOverFormFieldUid = null;\n    },\n\n    // -------------------------------------------------------------------------\n    // LAYOUT FIELDS\n    // -------------------------------------------------------------------------\n\n    dragStartLayoutField: function(e) {\n        console.log('dragStartLayoutField');\n\n        let FormBuilder = window.FormBuilder;\n\n        // Store selected tab in drag object as it might change before the drop event\n        e.dataTransfer.setData('sprout/origin-page-tab-uid', FormBuilder.selectedTabUid);\n        e.dataTransfer.setData('sprout/field-type', e.target.dataset.type);\n        FormBuilder.dragOrigin = FormBuilder.DragOrigins.layoutField;\n        FormBuilder.isDraggingTabUid = e.target.dataset.tabUid;\n        FormBuilder.isDraggingFormFieldUid = e.target.dataset.fieldUid;\n\n        // Need setTimeout before manipulating dom:\n        // https://stackoverflow.com/questions/19639969/html5-dragend-event-firing-immediately\n        // setTimeout(function() {\n        //   FormBuilder.isDraggingFormFieldUid = isDraggingFormFieldUid;\n        // }, 10);\n\n        // e.dataTransfer.dropEffect = 'move';\n        // e.dataTransfer.effectAllowed = 'move';\n\n        // Handle scroll stuff: https://stackoverflow.com/a/72807140/1586560\n        // On drag scroll, prevents page from growing with mobile safari rubber-band effect\n        // let VerticalMaxed = (window.innerHeight + window.scrollY) >= document.body.offsetHeight;\n        //\n        // this.scrollActive = true;\n        //\n        // if (e.clientY < 150) {\n        //   this.scrollActive = false;\n        //   this.scrollFieldLayout(-1);\n        // }\n        //\n        // if ((e.clientY > (document.documentElement.clientHeight - 150)) && !VerticalMaxed) {\n        //   this.scrollActive = false;\n        //   this.scrollFieldLayout(1)\n        // }\n    },\n\n    dragEndLayoutField: function(e) {\n        console.log('dragEndLayoutField');\n\n        // Reset scrolling\n        // this.scrollActive = false;\n\n        window.FormBuilder.isDraggingFormFieldUid = null;\n        window.FormBuilder.isDragOverFormFieldUid = null;\n    },\n\n    dragEnterLayoutField: function(e) {\n        console.log('dragEnterLayoutField');\n        e.target.classList.add('no-pointer-events');\n    },\n\n    dragOverLayoutField: function(e) {\n        const isDraggingLayoutField = e.dataTransfer.types.includes('sprout/field-type');\n\n        if (isDraggingLayoutField) {\n            window.FormBuilder.isDragOverFormFieldUid = e.target.dataset.fieldUid;\n            console.log('dragOverLayoutField', window.FormBuilder.isDragOverFormFieldUid);\n            event.preventDefault();\n        }\n    },\n\n    dragLeaveLayoutField: function(e) {\n        console.log('dragLeaveLayoutField');\n        e.target.classList.remove('no-pointer-events');\n    },\n\n    dropOnExistingLayoutField: function(e) {\n        console.log('dropOnExistingLayoutField');\n        let FormBuilder = window.FormBuilder;\n        let FieldLayoutHelper = FormBuilder.FieldLayoutHelper;\n\n        e.target.classList.remove('no-pointer-events');\n\n        // let fieldUid = e.dataTransfer.getData('sprout/field-id');\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n        let beforeFieldUid = e.target.dataset.fieldUid;\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.sourceField) {\n            FieldLayoutHelper.addFieldToLayoutTab(type, beforeFieldUid);\n        }\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutField) {\n            FieldLayoutHelper.updateFieldLayoutElementPosition(\n                originTabUid,\n                targetTabUid,\n                FormBuilder.isDraggingFormFieldUid,\n                beforeFieldUid\n            );\n        }\n    },\n\n    // -------------------------------------------------------------------------\n    // LAYOUT FIELDS END ZONE\n    // -------------------------------------------------------------------------\n\n    dragEnterFieldLayoutEndZone: function(e) {\n        console.log('dragEnterFieldLayoutEndZone');\n\n        // this.isMouseOverEndZone = true;\n    },\n\n    dragLeaveFieldLayoutEndZone: function(e) {\n        console.log('dragLeaveFieldLayoutEndZone');\n\n        // window.FormBuilder.isMouseOverEndZone = false;\n    },\n\n    isOverFieldLayoutEndZone: function(e) {\n        const sproutFormField = e.dataTransfer.types.includes('sprout/field-type');\n\n        // this.isDragOverTabUid = this.selectedTabUid;\n        // this.isDragOverFormFieldUid = e.target.parentNode.dataset.fieldUid;\n\n        if (sproutFormField) {\n            console.log('isOverFieldLayoutEndZone');\n            event.preventDefault();\n        }\n    },\n\n    dropOnLayoutEndZone: function(e) {\n        console.log('dropOnLayoutEndZone');\n\n        let FormBuilder = window.FormBuilder;\n        let FieldLayoutHelper = FormBuilder.FieldLayoutHelper;\n\n        e.target.classList.remove('no-pointer-events');\n\n        let type = e.dataTransfer.getData('sprout/field-type');\n        let originTabUid = e.dataTransfer.getData('sprout/origin-page-tab-uid');\n        let targetTabUid = e.target.dataset.tabUid;\n        let beforeFieldUid = e.target.dataset.fieldUid;\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.sourceField) {\n            FieldLayoutHelper.addFieldToLayoutTab(type);\n        }\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutField) {\n            FieldLayoutHelper.updateFieldLayoutElementPosition(\n                originTabUid,\n                targetTabUid,\n                FormBuilder.isDraggingFormFieldUid,\n                beforeFieldUid\n            );\n        }\n    },\n};\n\nexport { DragDrop };","const FieldLayout = {\n\n    // -------------------------------------------------------------------------\n    // FIELD LAYOUT HTML INPUTS\n    // -------------------------------------------------------------------------\n\n    get submissionFieldLayoutConfig() {\n\n        let FormBuilder = window.FormBuilder;\n\n        let fieldLayout = {};\n\n        if (FormBuilder.tabs.length && !FormBuilder.tabs[0].fields.length) {\n            return [];\n        }\n\n        let fieldLayoutTabs = [];\n\n        for (const tab of FormBuilder.tabs) {\n\n            let fieldLayoutFields = [];\n\n            for (const element of tab.fields) {\n\n                let field = this.getFormFieldAttributes(element);\n\n                fieldLayoutFields.push(field);\n            }\n\n            fieldLayoutTabs.push({\n                id: tab.uid, // remove\n                uid: tab.uid,\n                name: tab.name,\n                sortOrder: null,\n                userCondition: null,\n                elementCondition: null,\n                fields: fieldLayoutFields,\n            });\n        }\n        fieldLayout['tabs'] = fieldLayoutTabs;\n\n        return JSON.stringify(fieldLayout);\n    },\n\n    // Removes uiSettings from element/field data\n    getFormFieldAttributes(fieldData) {\n\n        const {\n            uiSettings,\n            ...fieldAttributes\n        } = fieldData;\n\n        return fieldAttributes;\n    },\n\n    // -------------------------------------------------------------------------\n    // FORM TABS\n    // -------------------------------------------------------------------------\n\n    getTabIndexByTabUid(tabUid) {\n        return window.FormBuilder.tabs.findIndex(item => item.uid === tabUid);\n    },\n\n    addTab() {\n        let newUid = Craft.uuid();\n        let tab = {\n            uid: newUid,\n            name: 'New Page',\n            userCondition: null,\n            elementCondition: null,\n            fields: [],\n        };\n\n        this.tabs.push(tab);\n        this.selectedTabUid = newUid;\n    },\n\n    editTab(tab) {\n        let self = this;\n        let FormBuilder = window.FormBuilder;\n\n        FormBuilder.editTabUid = tab.uid;\n\n        let slideout = new Craft.CpScreenSlideout('sprout-module-forms/form-builder/edit-form-tab-slideout-via-cp-screen', {\n            hasTabs: false,\n            params: {\n                formId: FormBuilder.formId,\n                tab: tab,\n            },\n        });\n\n        const $removeBtn = this.getRemoveButtonHtml();\n        slideout.$footer.find('.flex-grow').before($removeBtn);\n        slideout.$footer.find('.submit').addClass('secondary');\n\n        $removeBtn.on('click', () => {\n            if (FormBuilder.tabs.length === 1) {\n                Craft.cp.displayNotice(Craft.t('sprout-module-forms', 'Form must contain at least one tab.'));\n\n                return;\n            }\n\n            let tabIndex = self.getTabIndexByTabUid(FormBuilder.selectedTabUid);\n\n            let newSelectedTabUid = (tabIndex - 1) >= 0\n                ? FormBuilder.tabs[tabIndex - 1].uid\n                : FormBuilder.tabs[tabIndex + 1].uid;\n\n            FormBuilder.tabs.splice(tabIndex, 1);\n\n            let newTabIndex = self.getTabIndexByTabUid(newSelectedTabUid);\n            FormBuilder.selectedTabUid = FormBuilder.tabs[newTabIndex].uid;\n            FormBuilder.editTabUid = FormBuilder.selectedTabUid;\n\n            console.log('Remove Tab');\n\n            slideout.close();\n        });\n\n        slideout.on('submit', ev => {\n            this.updateTab(FormBuilder.editTabUid, ev.response.data.tab);\n        });\n\n        slideout.on('close', () => {\n            console.log('Close Tab Slideout');\n            FormBuilder.editTabUid = null;\n        });\n    },\n\n    updateTab(tabUid, data) {\n        let FormBuilder = window.FormBuilder;\n\n        let tabIndex = this.getTabIndexByTabUid(tabUid);\n\n        // loop through js object\n        Object.entries(data).forEach(([index, value]) => {\n            FormBuilder.tabs[tabIndex][index] = value;\n        });\n\n        if (!FormBuilder.tabs[tabIndex]['name']) {\n            FormBuilder.tabs[tabIndex]['name'] = 'Page';\n        }\n    },\n\n    updateTabPosition(tabUid, beforeTabUid = null) {\n        let FormBuilder = window.FormBuilder;\n\n        let beforeTabIndex = this.getTabIndexByTabUid(beforeTabUid);\n        let tabIndex = this.getTabIndexByTabUid(tabUid);\n        let targetTab = FormBuilder.tabs[tabIndex];\n\n        // console.log(this.tabs);\n        // Remove the updated tab\n        FormBuilder.tabs.splice(tabIndex, 1);\n\n        if (beforeTabUid) {\n\n            // console.log('target' + targetTab);\n            // Insert the updated tab before the target tab\n            FormBuilder.tabs.splice(beforeTabIndex, 0, targetTab);\n        } else {\n            FormBuilder.tabs.push(targetTab);\n        }\n\n        FormBuilder.lastUpdatedTabUid = targetTab.uid;\n    },\n\n    // -------------------------------------------------------------------------\n    // FORM FIELDS\n    // -------------------------------------------------------------------------\n\n    getFieldIndexByFieldUid(tab, fieldUid) {\n        return tab.fields.findIndex(item => item.fieldUid === fieldUid);\n    },\n\n    getFieldByType(type) {\n        return window.FormBuilder.sourceFields.filter(item => item.field.type === type)[0] ?? null;\n    },\n\n    // -------------------------------------------------------------------------\n    // LAYOUT ELEMENTS\n    // -------------------------------------------------------------------------\n\n    addFieldToLayoutTab(type, beforeFieldUid = null) {\n        console.log('addFieldToLayoutTab', type, beforeFieldUid);\n\n        let FormBuilder = window.FormBuilder;\n\n        let fieldData = this.getFieldByType(type);\n        fieldData.field.type = type;\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.sourceField) {\n            fieldData.field.name = fieldData.uiSettings.displayName;\n            fieldData.field.handle = fieldData.uiSettings.defaultHandle + '_' + Craft.randomString(4);\n            fieldData.field.uid = Craft.uuid();\n        }\n\n        if (FormBuilder.dragOrigin === FormBuilder.DragOrigins.layoutField) {\n\n        }\n\n        let fieldUid = fieldData.field.uid;\n\n        let tabIndex = this.getTabIndexByTabUid(FormBuilder.selectedTabUid);\n        let layoutElement = this.getLayoutElement(fieldUid, fieldData.field, fieldData.uiSettings);\n        FormBuilder.tabs[tabIndex].fields.push(layoutElement);\n\n        if (beforeFieldUid) {\n\n            let tabIndex = this.getTabIndexByTabUid(FormBuilder.selectedTabUid);\n            let tab = FormBuilder.tabs[tabIndex];\n\n            let fieldIndex = this.getFieldIndexByFieldUid(tab, fieldUid);\n            let targetField = tab.fields[fieldIndex];\n\n            // Remove the updated field\n            tab.fields.splice(fieldIndex, 1);\n\n            // let beforeFieldIndex = tab.fields.length + 1;\n            let beforeFieldIndex = this.getFieldIndexByFieldUid(tab, beforeFieldUid);\n\n            // Insert the updated field before the target field\n            tab.fields.splice(beforeFieldIndex, 0, targetField);\n\n            // Update tab\n            FormBuilder.tabs[tabIndex] = tab;\n\n            // FormBuilder.lastUpdatedFormFieldUid = targetField.uid;\n            //\n            // this.resetLastUpdated();\n        }\n    },\n\n    getLayoutElement(fieldUid, field, uiSettings) {\n        return {\n            type: 'BarrelStrength\\\\Sprout\\\\forms\\\\submissions\\\\CustomFormField',\n            required: false,\n            width: 100,\n            uid: Craft.uuid(),\n            userCondition: null,\n            elementCondition: null,\n            fieldUid: fieldUid,\n            field: field,\n            uiSettings: uiSettings,\n        };\n    },\n\n    editFieldLayoutElement(layoutElement) {\n        let FormBuilder = window.FormBuilder;\n\n        FormBuilder.editFieldUid = layoutElement.fieldUid;\n\n        let slideout = new Craft.CpScreenSlideout('sprout-module-forms/form-builder/edit-form-field-slideout-via-cp-screen', {\n            hasTabs: true,\n            tabManager: '',\n            params: {\n                formId: FormBuilder.formId,\n                layoutElement: layoutElement,\n            },\n        });\n\n        const $removeBtn = this.getRemoveButtonHtml();\n        slideout.$footer.find('.flex-grow').before($removeBtn);\n        slideout.$footer.find('.submit').addClass('secondary');\n\n        $removeBtn.on('click', () => {\n            this.deleteFieldLayoutElement(layoutElement.fieldUid);\n            slideout.close();\n        });\n\n        // let settingsHtml = self.swapPlaceholders(response.data.settingsHtml, response.data.fieldUid);\n        slideout.on('submit', ev => {\n            this.updateFieldLayoutElement(FormBuilder.editFieldUid, ev.response.data.layoutElement);\n        });\n\n        slideout.on('close', () => {\n            console.log('Close Edit Form Field Slideout');\n            FormBuilder.editFieldUid = null;\n        });\n\n        // init ui elements on slideout\n        // Craft.initUiElements(slideout);\n    },\n\n    updateFieldLayoutElement(fieldUid, fieldLayoutElement) {\n        let FormBuilder = window.FormBuilder;\n\n        let tabIndex = this.getTabIndexByTabUid(FormBuilder.selectedTabUid);\n        let tab = FormBuilder.tabs[tabIndex];\n        let fieldIndex = this.getFieldIndexByFieldUid(tab, fieldUid);\n        let targetFieldLayoutElement = tab.fields[fieldIndex];\n\n        targetFieldLayoutElement.required = fieldLayoutElement.required;\n        targetFieldLayoutElement.field.name = fieldLayoutElement.field.name;\n        targetFieldLayoutElement.field.handle = fieldLayoutElement.field.handle;\n        targetFieldLayoutElement.field.instructions = fieldLayoutElement.field.instructions;\n\n        // Merge updated values into existing field settings\n        Object.entries(fieldLayoutElement.field.settings).forEach(([index, value]) => {\n            targetFieldLayoutElement.field.settings[index] = value;\n        });\n\n        tab.fields[fieldIndex] = targetFieldLayoutElement;\n    },\n\n    updateFieldLayoutElementPosition(originTabUid, targetTabUid, fieldUid, beforeFieldUid = null) {\n        console.log('updateFieldPosition');\n\n        let FormBuilder = window.FormBuilder;\n\n        let originTabIndex = this.getTabIndexByTabUid(originTabUid);\n        let originTab = FormBuilder.tabs[originTabIndex];\n\n        let targetTabIndex = this.getTabIndexByTabUid(targetTabUid);\n        let targetTab = FormBuilder.tabs[targetTabIndex];\n\n        if (!targetTab) {\n            targetTab = originTab;\n        }\n\n        let originFieldIndex = this.getFieldIndexByFieldUid(originTab, fieldUid);\n        let targetField = originTab.fields[originFieldIndex];\n\n        // Remove the updated field from the layout\n        // this might change the indexes of the fields on the tab\n        originTab.fields.splice(originFieldIndex, 1);\n\n        if (beforeFieldUid) {\n            let beforeFieldIndex = this.getFieldIndexByFieldUid(targetTab, beforeFieldUid);\n\n            // Insert the updated field before the target field\n            targetTab.fields.splice(beforeFieldIndex, 0, targetField);\n        } else {\n            targetTab.fields.push(targetField);\n        }\n\n        // Update tab\n        FormBuilder.tabs[targetTabIndex] = targetTab;\n\n        // FormBuilder.lastUpdatedFormFieldUid = targetField.uid;\n\n        // this.resetLastUpdated();\n    },\n\n    deleteFieldLayoutElement(targetFieldUid) {\n        let tabIndex = this.getTabIndexByTabUid(FormBuilder.selectedTabUid);\n        let tab = FormBuilder.tabs[tabIndex];\n\n        let fieldIndex = this.getFieldIndexByFieldUid(tab, targetFieldUid);\n\n        // remove field from tab\n        FormBuilder.tabs[tabIndex].fields.splice(fieldIndex, 1);\n    },\n\n    // -------------------------------------------------------------------------\n    // MISC\n    // -------------------------------------------------------------------------\n\n    resetLastUpdated() {\n        // The timeout here needs to match the time of the 'drop-highlight' css transition effect\n        setTimeout(function() {\n            window.FormBuilder.lastUpdatedFormFieldUid = null;\n        }, 300);\n    },\n\n    getRemoveButtonHtml: function() {\n        const $removeBtn = Craft.ui.createButton({\n            class: 'icon',\n            label: Craft.t('app', 'Remove'),\n            spinner: true,\n        });\n\n        $removeBtn.attr('data-icon', 'trash');\n\n        return $removeBtn;\n    },\n};\n\nexport { FieldLayout };","import { DragDrop } from './helpers/DragDrop.js';\nimport { FieldLayout } from './helpers/FieldLayout.js';\nimport { Integrations } from './helpers/Integrations.js';\n\nexport const FormBuilder = (formId) => ({\n\n    // Helpers\n    DragDropHelper: DragDrop,\n    FieldLayoutHelper: FieldLayout,\n\n    formId: formId,\n\n    lastUpdatedFormFieldUid: null,\n\n    /**\n     * Array of field data\n     * [\n     *  id: 123,\n     *  type: className,\n     *  etc.\n     * ]\n     */\n    sourceFields: [],\n\n    /**\n     * [\n     *   {\n     *     id: 123,\n     *     label: 'X',\n     *     fields: [\n     *        'fieldUid': {\n     *          id: 123,\n     *          name: 'Y',\n     *          required,\n     *          getExampleHtml(),\n     *          getSettingsHtml(),\n     *        },\n     *        {},\n     *        {}\n     *      ]\n     *   }\n     * ]\n     */\n    tabs: [],\n    // fields: [],\n    // uiSettings: [],\n\n    fieldLayoutUid: null,\n\n    selectedTabUid: null,\n    editTabUid: null,\n    editFieldUid: null,\n\n    dragOrigin: null,\n\n    DragOrigins: {\n        sourceField: 'source-field',\n        layoutField: 'layout-field',\n        layoutTabNav: 'layout-tab-nav',\n    },\n\n    isDraggingTabUid: null,\n    isDragOverTabUid: null,\n\n    isDraggingFormFieldUid: null,\n    isDragOverFormFieldUid: null,\n\n    init() {\n\n        let self = this;\n        // Get the saved fieldLayout data\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-builder/get-submission-field-layout', {\n            data: {\n                formId: this.formId,\n            },\n        }).then((response) => {\n            console.log('get-submission-field-layout', response);\n            // self.tabs = [\n            //   {\n            //     id: 123,\n            //     label: 'Tab 1',\n            //     fields: [],\n            //   },\n            // ];\n            self.tabs = response.data.layout.tabs;\n            // self.fields = response.data.layout.fields;\n            // self.uiSettings = response.data.layout.uiSettings;\n            self.fieldLayoutUid = response.data.layout.uid;\n\n            // get uid of first tab in tabs array\n            self.selectedTabUid = self.tabs[0].uid ?? null;\n\n        }).catch(() => {\n            console.log('No form data found.');\n        });\n\n        window.FormBuilder = this;\n\n        let sourceFields = JSON.parse(this.$refs.formBuilder.dataset.sourceFields);\n\n        for (const field of sourceFields) {\n            this.sourceFields.push(field);\n        }\n    },\n\n    // Helper Methods\n\n    getFieldsByGroup(handle) {\n        return window.FormBuilder.sourceFields.filter(item => item.groupName === handle);\n    },\n\n    // scrollFieldLayout(stepY) {\n    //   let scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n    //   window.scrollTo(0, (scrollY + stepY));\n    //\n    //   if (this.scrollActive) {\n    //     setTimeout(function() {\n    //       scroll(0, stepY);\n    //     }, 20);\n    //   }\n    // },\n\n    // isBefore(element1, element2) {\n    //     if (element2.parentNode === element1.parentNode) {\n    //         for (let currentElement = element1.previousSibling; currentElement && currentElement.nodeType !== 9; currentElement = currentElement.previousSibling) {\n    //             if (currentElement === element2) {\n    //                 return true;\n    //             }\n    //         }\n    //     }\n    //     return false;\n    // },\n\n    // The js output by the condition builder\n    // \"<script>\n    // const conditionBuilderJs = \"<script>Garnish.requestAnimationFrame(() => {\n    //   const $button = $('#sources-__SOURCE_KEY__-condition-type-btn');\n    //   $button.menubtn().data('menubtn').on('optionSelect', event => {\n    //     const $option = $(event.option);\n    //     $button.text($option.text()).removeClass('add');\n    // // Don\\'t use data(\\'value\\') here because it could result in an object if data-value is JSON\n    //     const $input = $('#sources-__SOURCE_KEY__-condition-type-input').val($option.attr('data-value'));\n    //     htmx.trigger($input[0], 'change');\n    //   });\n    // });\n    // htmx.process(htmx.find('#__ID__'));\n    // htmx.trigger(htmx.find('#__ID__'), 'htmx:load');\n    // </script>\";\n    // swapPlaceholders(str, sourceKey) {\n    //     const defaultId = `condition${Math.floor(Math.random() * 1000000)}`;\n    //\n    //     return str\n    //         .replace(/__ID__/g, defaultId)\n    //         .replace(/__SOURCE_KEY__(?=-)/g, Craft.formatInputId('\"' + sourceKey + '\"'))\n    //         .replace(/__SOURCE_KEY__/g, sourceKey);\n    // },\n});\n","export const FormField = (element) => ({\n\n    element: element,\n    dragHover: false,\n\n    init() {\n\n    },\n\n    // exampleHtml() {\n    //   // let fieldData = window.formBuilder.getFieldByType(this.field.type);\n    //\n    //   let editText = Craft.t('sprout-module-forms', 'Edit');\n    //\n    //   return '<div ' +\n    //     'class=\"layout-field\"\\n' +\n    //     'draggable=\"true\"\\n' +\n    //     'x-on:dragstart=\"handleDragStart\"\\n' +\n    //     'x-on:dblclick=\"editFormField\"\\n' +\n    //     'x-bind:data-type=\"field.type\"' +\n    //     '>' +\n    //     '<div class=\"layout-field-header\">' +\n    //     '<h2 x-bind:class=\"field.required\" x-text=\"field.name\"></h2>' +\n    //     '<code class=\"light\" x-text=\"field.handle\"></code>' +\n    //     '<p x-show=\"field.instructions\" x-text=\"field.instructions\"></p>' +\n    //     '</div>' +\n    //     '<div class=\"body\" x-html=\"field.exampleInputHtml\"></div>' +\n    //     '<div class=\"layout-field-overlay\">' +\n    //     '<div x-on:click=\"editFormField\" class=\"edit-field-button\">'+editText+'</div>' +\n    //     '</div>' +\n    //     '</div>';\n    // },\n\n    // @todo - somehow outputting this collapses padding to left of main body area\n    sourceHtml() {\n        return '<div\\n' +\n            'class=\"source-field\"\\n' +\n            'draggable=\"true\"\\n' +\n            'x-bind:class=\"[dragHover ? \\'drag-hover\\' : \\'\\', element.field.sortOrder % 2 == 0 ? \\'even\\' : \\'odd\\']\"\\n' +\n            'x-on:mouseover=\"dragHover = true\"\\n' +\n            'x-on:mouseleave=\"dragHover = false\"\\n' +\n            'x-on:dragstart.self=\"DragDropHelper.dragStartSourceField\"\\n' +\n            'x-on:dragend.self=\"DragDropHelper.dragEndSourceField\"\\n' +\n            'x-bind:data-type=\"element.field.type\"' +\n            '>' +\n            '<h3>' +\n            '<span x-html=\"element.uiSettings.icon\" class=\"sproutforms-icon\"></span>' +\n            '<span x-text=\"element.field.name\" x-bind:data-handle=\"element.field.name\" class=\"sproutforms-sourcefield-name\"></span>' +\n            '</h3>' +\n            '</div>';\n    },\n});\n","import Alpine from 'alpinejs';\n\nimport {FormBuilder} from './FormBuilder';\nimport {FormField} from './FormField';\n\nwindow.Alpine = Alpine;\n\nAlpine.data('FormBuilder', FormBuilder);\nAlpine.data('FormField', FormField);\n\nAlpine.start();\n","\nlet Sprout = window.Sprout || {};\n\nSprout.formNameForm = function() {\n\n    let $form = $('#form-name-form');\n    let name = document.getElementById('name-field');\n\n    $form.on('submit', () =>  {\n        if (name.value.length === 0) {\n            Garnish.shake($form);\n            name.focus();\n            return false;\n        } else {\n            $form.submit();\n            return true;\n        }\n    });\n};\n\nif (document.readyState !== 'loading') {\n    Sprout.formNameForm();\n} else {\n    document.addEventListener('DOMContentLoaded', Sprout.formNameForm);\n}\n","/*\n * @link https://sprout.barrelstrengthdesign.com\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license https://craftcms.github.io/license\n */\n\n/* global Craft */\n\nclass SproutFormsIntegration {\n\n    constructor(settings) {\n        const self = this;\n\n        // this.integrationType = typeof settings.integrationType !== 'undefined'\n        //     ? settings.integrationType\n        //     : '';\n        //\n        // // Make the sourceFormField read only\n        // this.disableOptions();\n        //\n        // // Init all empty field selects\n        // this.updateAllFieldSelects();\n        //\n        // this.updateTargetFieldsOnChange = typeof settings.updateTargetFieldsOnChange !== 'undefined'\n        //     ? settings.updateTargetFieldsOnChange\n        //     : [];\n        //\n        // this.updateTargetFieldsOnChange.forEach(function(elementId) {\n        //     // Register an onChange event for all Element IDs identified by the Integration\n        //     $(elementId).change(function() {\n        //         self.updateAllFieldSelects();\n        //     });\n        // });\n    }\n\n    disableOptions() {\n        const self = this;\n        const integrationId = $('#integrationId').val();\n\n        const data = {\n            'integrationId': integrationId,\n        };\n\n        Craft.postActionRequest('sprout-module-forms/form-integration-settings/get-source-form-fields', data, $.proxy(function(response, textStatus) {\n            const statusSuccess = (textStatus === 'success');\n            if (statusSuccess && response.success) {\n                const rows = response.sourceFormFields;\n                $('tbody .formField').each(function(index) {\n                    const td = $(this);\n                    td.empty();\n                    const title = rows[index]['label'];\n                    const handle = rows[index]['value'];\n                    td.append('<div style=\"display:none;\"><select readonly name=\"settings[' + self.integrationType + '][fieldMapping][' + index + '][sourceFormField]\"><option selected value=\"' + handle + '\">' + title + '</option></select></div><div style=\"padding: 7px 10px;font-size: 12px;color:#8f98a3;\">' + title + ' <span class=\"code\">(' + handle + ')</span></div>');\n                });\n            } else {\n                Craft.cp.displayError(Craft.t('sprout', 'Unable to get the Form fields'));\n            }\n        }, this));\n\n        return null;\n    }\n\n    updateAllFieldSelects() {\n        const integrationIdBase = this.integrationType.replace(/\\\\/g, '-');\n        const mappingTableRows = 'table#settings-' + integrationIdBase + '-fieldMapping tr';\n\n        $(mappingTableRows).find('td:eq(2),th:eq(2)').remove();\n        $(mappingTableRows).find('td:eq(0),th:eq(0)').css('width', '50%');\n        $(mappingTableRows).find('td:eq(1),th:eq(1)').css('width', '50%');\n\n        const $currentRows = this.getCurrentRows('tbody .targetFields');\n\n        // Hand off all our current Form data so the Integration can use it if needed\n        const formData = $('#integrationId').closest('form').serialize();\n\n        const self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-integration-settings/get-target-integration-fields', {\n            data: formData,\n        }).then((response) => {\n            const statusSuccess = (textStatus === 'success');\n\n            if (statusSuccess && response.success) {\n                const rows = response.targetIntegrationFields;\n\n                if (rows.length === 0) {\n                    return false;\n                }\n\n                $currentRows.each(function(index) {\n                    const $select = $(this).find('select');\n                    const fields = rows[index];\n\n                    self.appendFieldsToSelect($select, fields);\n                });\n            } else {\n                Craft.cp.displayError(Craft.t('sprout', 'Unable to get the Form fields'));\n            }\n        }, this);\n    }\n\n    getCurrentRows(className = null) {\n        if (className === null) {\n            className = 'tbody .formField';\n        }\n        return $(className);\n    }\n\n    appendFieldsToSelect($select, fields) {\n        $select.empty();\n\n        let dropdown = '';\n        let closeOptgroup = false;\n        $select.append('<option value=\"\">' + Craft.t('sprout', 'None') + '</option>');\n\n        for (let i = 0; i < fields.length; i++) {\n            const field = fields[i];\n            let selectedCode = '';\n            const lastItem = i === (fields.length - 1);\n\n            if (!('optgroup' in field)) {\n                if ('selected' in field) {\n                    selectedCode = 'selected';\n                }\n                dropdown += '<option ' + selectedCode + ' value=\"' + field['value'] + '\">' + field['label'] + '</option>';\n            }\n\n            if (('optgroup' in field && closeOptgroup) || (lastItem && closeOptgroup)) {\n                dropdown += '</optgroup>';\n                closeOptgroup = false;\n            }\n\n            if ('optgroup' in field) {\n                dropdown += '<optgroup label=\"' + field['optgroup'] + '\">';\n                closeOptgroup = true;\n            }\n        }\n\n        $select.append(dropdown);\n    }\n}\n\nwindow.SproutFormsIntegration = SproutFormsIntegration;\n","class IntegrationsRelationsTable {\n\n    constructor(formId, siteId) {\n        this.formId = formId;\n        this.siteId = siteId;\n\n        this.newSelectField = document.getElementById('new-integration');\n\n        this.initLinkSlideout();\n        this.initNewSlideout();\n    }\n\n    initLinkSlideout() {\n        console.log('initialize existing integrations slideouts');\n\n        let self = this;\n\n        let editableItems = document.querySelectorAll('#integrations-field .edit-element-col a');\n\n        editableItems.forEach(function(editableItem) {\n            editableItem.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let integrationId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewSlideout() {\n        console.log('initialize new integrations slideouts');\n\n        let self = this;\n\n        if (this.newSelectField) {\n            let integrationUid = Craft.uuid();\n\n            this.newSelectField.addEventListener('change', function(event) {\n                if (event.target.value) {\n\n                    self.createSlideout(integrationUid, event.target.value);\n                }\n            });\n        }\n    }\n\n    createSlideout(integrationUid, integrationTypeUid) {\n        let self = this;\n        let FormBuilder = window.FormBuilder;\n\n        console.log('createSlideout', FormBuilder.integrationsFormFieldMetadata);\n\n        let integrationsFormFieldMetadata = FormBuilder.integrationsFormFieldMetadata.length > 0\n            ? JSON.parse(FormBuilder.integrationsFormFieldMetadata)\n            : [];\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-integrations/edit-integration-slideout', {\n                data: {\n                    formId: self.formId,\n                    integrationUid: integrationUid,\n                    integrationTypeUid: integrationTypeUid,\n                    integrationsFormFieldMetadata: integrationsFormFieldMetadata,\n                },\n            })\n            .then((response) => {\n                console.log('create slideout response', response);\n\n                if (response.data.success) {\n                    // let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    //     elementId: response.data.elementId,\n                    //     siteId: response.data.siteId,\n                    //     draftId: response.data.draftId,\n                    //     elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                    // });\n\n                    const slideout = new Craft.Slideout(response.data.html, {\n                        containerElement: 'form',\n                        containerAttributes: {\n                            action: 'sprout-module-forms/form-integration-settings/save-integration',\n                            method: 'post',\n                            novalidate: '',\n                            class: 'fld-element-settings',\n                        },\n                    });\n                    Craft.appendBodyHtml(response.data.slideoutJs);\n\n                    slideout.on('submit', () => {\n                        console.log('on slideout submit', response);\n\n                        self.replaceTable();\n                    });\n\n                    slideout.on('close', () => {\n                        console.log('on slideout close', response);\n                        if (this.newSelectField) {\n                            this.newSelectField.value = '';\n                        }\n                    });\n                }\n            });\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-forms/form-integrations/edit-integration-slideout', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('integrations table html response', response);\n\n                $('#integrations-field').html(response.data.html);\n\n                self.initLinkSlideout();\n                self.initNewSlideout();\n            });\n    }\n}\n\nwindow.IntegrationsRelationsTable = IntegrationsRelationsTable;\n\n\n\n","class DataSourceRelationsTable {\n\n    constructor(elementId, siteId) {\n        this.elementId = elementId;\n        this.siteId = siteId;\n\n        this.initLinkElementSlideout();\n        this.initNewElementSlideout();\n    }\n\n    initLinkElementSlideout() {\n        console.log('initialize existing report element slideouts');\n\n        let self = this;\n\n        let editableElements = document.querySelectorAll('#data-source-relations-field .edit-element-col a');\n\n        editableElements.forEach(function(editableElement) {\n            editableElement.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let elementId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewElementSlideout() {\n        console.log('initialize new report element slideouts');\n\n        let self = this;\n\n        let newSelectField = document.getElementById('new-data-set');\n\n        if (newSelectField) {\n            newSelectField.addEventListener('change', function(event) {\n                Craft.sendActionRequest('POST', 'sprout-module-data-studio/data-set/create-data-set', {\n                        data: {\n                            type: event.target.value,\n                        },\n                    })\n                    .then((response) => {\n                        console.log('create slideout response', response);\n\n                        if (response.data.success) {\n                            let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement', {\n                                elementId: response.data.elementId,\n                                siteId: response.data.siteId,\n                                draftId: response.data.draftId,\n                                elementType: 'BarrelStrength\\\\Sprout\\\\datastudio\\\\components\\\\elements\\\\DataSetElement',\n                            });\n\n                            slideout.on('submit', () => {\n                                console.log('on slideout submit', response);\n\n                                self.replaceTable();\n                            });\n                        }\n                    });\n            });\n        }\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-data-studio/form-relations-table/get-relations-table', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('reports table html response', response);\n\n                $('#data-source-relations-field').html(response.data.html);\n\n                self.initLinkElementSlideout();\n                self.initNewElementSlideout();\n            });\n    }\n}\n\nwindow.DataSourceRelationsTable = DataSourceRelationsTable;\n\n\n\n","class NotificationEventsRelationsTable {\n\n    constructor(elementId, siteId) {\n        this.elementId = elementId;\n        this.siteId = siteId;\n\n        this.initLinkElementSlideout();\n        this.initNewElementSlideout();\n    }\n\n    initLinkElementSlideout() {\n        console.log('initialize existing email element slideouts');\n\n        let self = this;\n\n        let editableElements = document.querySelectorAll('#notification-event-relations-field .edit-element-col a');\n\n        editableElements.forEach(function(editableElement) {\n            editableElement.addEventListener('click', function(event) {\n                event.preventDefault();\n\n                let elementId = event.target.closest('tr').getAttribute('data-element-id');\n                let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement', {\n                    elementId: elementId,\n                    siteId: this.siteId,\n                    elementType: 'BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement',\n                });\n\n                slideout.on('submit', () => {\n                    self.replaceTable();\n                });\n            });\n        });\n    }\n\n    initNewElementSlideout() {\n        console.log('initialize email element slideouts');\n\n        let self = this;\n\n        let newSelectField = document.getElementById('new-transactional-email');\n\n        if (newSelectField) {\n            newSelectField.addEventListener('change', function(event) {\n                console.log('on change email type event', event);\n\n                Craft.sendActionRequest('POST', 'sprout-module-mailer/email/create-email', {\n                        data: {\n                            emailTypeUid: event.target.value,\n                            emailVariant: 'BarrelStrength\\\\Sprout\\\\transactional\\\\components\\\\emailvariants\\\\TransactionalEmailVariant',\n                            emailVariantSettings: {\n                                eventId: 'BarrelStrength\\\\Sprout\\\\forms\\\\components\\\\notificationevents\\\\SaveSubmissionNotificationEvent',\n                                // emailTypeUid: event.target.value,\n                            },\n                        },\n                    })\n                    .then((response) => {\n                        console.log('create slideout response', response);\n\n                        if (response.data.success) {\n                            let slideout = Craft.createElementEditor('BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement', {\n                                elementId: response.data.elementId,\n                                siteId: response.data.siteId,\n                                draftId: response.data.draftId,\n                                elementType: 'BarrelStrength\\\\Sprout\\\\mailer\\\\components\\\\elements\\\\email\\\\EmailElement',\n                            });\n\n                            slideout.on('submit', () => {\n                                console.log('on slideout submit', response);\n\n                                self.replaceTable();\n                            });\n                        }\n                    });\n            });\n        }\n    }\n\n    replaceTable() {\n        let self = this;\n\n        Craft.sendActionRequest('POST', 'sprout-module-transactional/form-relations-table/get-relations-table', {\n                data: {\n                    elementId: self.elementId,\n                },\n            })\n            .then((response) => {\n                console.log('reports table html response', response);\n\n                $('#notification-event-relations-field').html(response.data.html);\n\n                self.initLinkElementSlideout();\n                self.initNewElementSlideout();\n            });\n    }\n}\n\nwindow.NotificationEventsRelationsTable = NotificationEventsRelationsTable;\n\n\n\n"],"names":["$relationModal","$modal","data","response","sproutRelationBtn","event","DragDrop","e","FormBuilder","FieldLayoutHelper","originTabUid","targetTabUid","type","fieldData","layoutElement","dropBeforeTargetFieldUid","beforeFieldUid","FieldLayout","fieldLayout","fieldLayoutTabs","tab","fieldLayoutFields","element","field","uiSettings","fieldAttributes","tabUid","item","newUid","self","slideout","$removeBtn","tabIndex","newSelectedTabUid","newTabIndex","ev","index","value","beforeTabUid","beforeTabIndex","targetTab","fieldUid","fieldIndex","targetField","beforeFieldIndex","fieldLayoutElement","targetFieldLayoutElement","originTabIndex","originTab","targetTabIndex","originFieldIndex","targetFieldUid","formId","sourceFields","handle","FormField","Alpine","Sprout","$form","name","SproutFormsIntegration","settings","textStatus","rows","td","title","mappingTableRows","$currentRows","formData","$select","fields","className","dropdown","closeOptgroup","i","selectedCode","lastItem","IntegrationsRelationsTable","siteId","editableItem","integrationUid","integrationTypeUid","integrationsFormFieldMetadata","DataSourceRelationsTable","elementId","editableElement","newSelectField","NotificationEventsRelationsTable"],"mappings":"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"}