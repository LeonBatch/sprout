{"version":3,"file":"meta-1791b7eb.js","sources":["../../../node_modules/jquery-tageditor/jquery.caret.min.js","../../src/meta/MetadataField.js","../../src/meta/EditableTable.js","../../src/meta/MetaDetailsToggle.js","../../src/meta/Schema.js","../../src/meta/WebsiteIdentity.js"],"sourcesContent":["// http://code.accursoft.com/caret - 1.3.3\r\n!function(e){e.fn.caret=function(e){var t=this[0],n=\"true\"===t.contentEditable;if(0==arguments.length){if(window.getSelection){if(n){t.focus();var o=window.getSelection().getRangeAt(0),r=o.cloneRange();return r.selectNodeContents(t),r.setEnd(o.endContainer,o.endOffset),r.toString().length}return t.selectionStart}if(document.selection){if(t.focus(),n){var o=document.selection.createRange(),r=document.body.createTextRange();return r.moveToElementText(t),r.setEndPoint(\"EndToEnd\",o),r.text.length}var e=0,c=t.createTextRange(),r=document.selection.createRange().duplicate(),a=r.getBookmark();for(c.moveToBookmark(a);0!==c.moveStart(\"character\",-1);)e++;return e}return t.selectionStart?t.selectionStart:0}if(-1==e&&(e=this[n?\"text\":\"val\"]().length),window.getSelection)n?(t.focus(),window.getSelection().collapse(t.firstChild,e)):t.setSelectionRange(e,e);else if(document.body.createTextRange)if(n){var c=document.body.createTextRange();c.moveToElementText(t),c.moveStart(\"character\",e),c.collapse(!0),c.select()}else{var c=t.createTextRange();c.move(\"character\",e),c.select()}return n||t.focus(),e}}(jQuery);\r\n","/* global Craft */\nimport 'jquery-tageditor';\n\nclass SproutMetaMetadataField {\n    constructor(props) {\n        this.fieldHandle = props.fieldHandle;\n        this.metaBadgeInfo = props.metaBadgeInfo;\n        this.maxDescriptionLength = props.maxDescriptionLength;\n\n        this.initMetadataFieldButtons();\n        this.addMetaBadgesToUi();\n    }\n\n    initMetadataFieldButtons() {\n        let self = this;\n\n        let metaDetailsTabsId = 'fields-' + this.fieldHandle + '-meta-details-tabs';\n        this.metaDetailsTabs = document.querySelectorAll('#' + metaDetailsTabsId + ' div.btn');\n\n        let metaDetailsBodyContainerId = 'fields-' + this.fieldHandle + '-meta-details-body';\n        this.metaDetailsBodyContainers = document.querySelectorAll(\n            '#' + metaDetailsBodyContainerId + ' div.matrixblock',\n        );\n\n        if (this.metaDetailsBodyContainers.length < 1) {\n            return;\n        }\n\n        for (let metaTab of this.metaDetailsTabs) {\n            metaTab.addEventListener('click', function(event) {\n                let $tab = $(event.target);\n\n                // If we don't have a div we are clicking on the svg or i tag within the div\n                // so reassign what we clicked on to the parent div\n                if (!$tab.is('div')) {\n                    $tab = $tab.closest('div.btn');\n                }\n\n                // Do nothing if the active element is clicked\n                let $selectedTab = $('#fields-projectsMetadata-meta-details-tabs .active');\n                if ($tab.is($selectedTab)) {\n                    return true;\n                }\n\n                let tabName = $tab.attr('data-type');\n                let tabBodyClass = '#fields-' + self.fieldHandle + '-meta-details-body .fields-' + tabName;\n                let targetBodyContainer = document.querySelector(tabBodyClass);\n\n                for (let metaTab of self.metaDetailsTabs) {\n                    metaTab.classList.remove('active');\n                }\n\n                for (let tabBody of self.metaDetailsBodyContainers) {\n                    tabBody.style.display = 'none';\n                }\n\n                $(targetBodyContainer).show();\n                $tab.addClass('active');\n            });\n        }\n\n        // Display the first tab and block when first loaded\n        $(this.metaDetailsBodyContainers[0]).show();\n        this.metaDetailsTabs[0].classList.add('active');\n    }\n\n    addMetaBadgesToUi() {\n        let self = this;\n\n        for (let key in this.metaBadgeInfo) {\n            console.log(this.metaBadgeInfo[key]);\n            let type = this.metaBadgeInfo[key]['type'];\n            let fieldHandle = this.metaBadgeInfo[key]['handle'];\n            let badgeClass = this.metaBadgeInfo[key]['badgeClass'];\n\n            // $('div.' + badgeClass).appendTo()\n            // let metaButton = document.querySelector('div.' + badgeClass).innerHTML;\n\n            let targetLabelId = '#fields-' + fieldHandle + '-label';\n            let targetInputId = '#fields-' + fieldHandle + '-field input';\n\n            let $targetInputElement = $(targetInputId);\n\n            if (fieldHandle === 'title') {\n                targetLabelId = '#title-label';\n                $targetInputElement = $('#title');\n            }\n\n            if ($(targetLabelId).find('.sprout-info').length === 0) {\n                $('div.' + badgeClass).appendTo($(targetLabelId)).removeClass('hidden');\n            }\n\n\n\n            // self.appendMetaBadge(targetLabelId, metaButton);\n            // Craft.initUiElements($(targetLabelId));\n            //\n            // if (type === 'optimizedTitleField') {\n            //     $targetInputElement.attr('maxlength', 60);\n            //     new Garnish.NiceText($targetInputElement, {showCharsLeft: true});\n            // }\n            //\n            // if (type === 'optimizedDescriptionField') {\n            //     let metaTextareaId = '#fields-' + fieldHandle + '-field textarea';\n            //     let metaTextarea = $(metaTextareaId);\n            //     metaTextarea.attr('maxlength', self.maxDescriptionLength);\n            //\n            //     // triggers Double instantiating console error\n            //     new Garnish.NiceText(metaTextarea, {showCharsLeft: true});\n            // }\n        }\n    }\n\n    getCustomizationSettings(customKey) {\n        return $('input[name=\\'fields[' + this.fieldHandle + '][metadata][' + customKey + ']\\']');\n    }\n\n    appendMetaBadge(targetLabelId, metaButton) {\n        // console.log('appendMetaBadge', targetLabelId, metaButton);\n        if ($(targetLabelId).find('.sprout-info').length === 0) {\n            $(targetLabelId).append(metaButton).removeClass('hidden');\n        }\n    }\n}\n\nclass SproutMetaKeywordsField {\n    constructor(props) {\n        this.keywordsFieldId = props.keywordsFieldId;\n\n        this.initKeywordsField();\n    }\n\n    initKeywordsField() {\n        // $(this.keywordsFieldId + ' input').tagEditor({\n        //   animateDelete: 20,\n        // });\n    }\n}\n\nwindow.SproutMetaMetadataField = SproutMetaMetadataField;\nwindow.SproutMetaKeywordsField = SproutMetaKeywordsField;\n","/* global Craft */\n/* global Garnish */\n\nif (typeof Craft.SproutMeta === typeof undefined) {\n    Craft.SproutMeta = {};\n}\n\n/**\n * Editable table class\n */\nCraft.SproutMeta.EditableTable = Garnish.Base.extend(\n    {\n        initialized: false,\n\n        id: null,\n        baseName: null,\n        columns: null,\n        sorter: null,\n        biggestId: -1,\n\n        $table: null,\n        $tbody: null,\n        $addRowBtn: null,\n\n        init: function(id, baseName, columns, settings) {\n            this.id = id;\n            this.baseName = baseName;\n            this.columns = columns;\n            this.setSettings(settings, Craft.SproutMeta.EditableTable.defaults);\n\n            this.$table = $('#' + id);\n            this.$tbody = this.$table.children('tbody');\n\n            this.sorter = new Craft.DataTableSorter(this.$table, {\n                helperClass: 'editabletablesorthelper',\n                copyDraggeeInputValuesToHelper: true,\n            });\n\n            if (this.isVisible()) {\n                this.initialize();\n            } else {\n                this.addListener(Garnish.$win, 'resize', 'initializeIfVisible');\n            }\n        },\n\n        isVisible: function() {\n            return (this.$table.height() > 0);\n        },\n\n        initialize: function() {\n            if (this.initialized) {\n                return;\n            }\n\n            this.initialized = true;\n            this.removeListener(Garnish.$win, 'resize');\n\n            const $rows = this.$tbody.children();\n\n            for (let i = 0; i < $rows.length; i++) {\n                new Craft.SproutMeta.EditableTable.Row(this, $rows[i]);\n            }\n\n            this.$addRowBtn = this.$table.next('.buttons').children('.add');\n\n            this.addListener(this.$addRowBtn, 'activate', 'addRow');\n        },\n\n        initializeIfVisible: function() {\n            if (this.isVisible()) {\n                this.initialize();\n            }\n        },\n\n        addRow: function() {\n            const rowId = this.settings.rowIdPrefix + (this.biggestId + 1),\n                rowHtml = Craft.SproutMeta.EditableTable.getRowHtml(rowId, this.columns, this.baseName, {}),\n                $tr = $(rowHtml).appendTo(this.$tbody);\n\n            new Craft.SproutMeta.EditableTable.Row(this, $tr);\n\n            this.sorter.addItems($tr);\n\n            // Focus the first input in the row\n            $tr.find('input,textarea,select').first().focus();\n\n            this.settings.onAddRow($tr);\n        },\n    },\n    {\n        textualColTypes: ['singleline', 'multiline', 'number'],\n        defaults: {\n            rowIdPrefix: '',\n            onAddRow: $.noop,\n            onDeleteRow: $.noop,\n        },\n\n        getRowHtml: function(rowId, columns, baseName, values) {\n\n            let rowHtml = '<tr data-id=\"' + rowId + '\">';\n            for (let colId in columns) {\n                const col = columns[colId],\n                    name = baseName + '[' + rowId + '][' + colId + ']',\n                    value = (typeof values[colId] !== 'undefined' ? values[colId] : ''),\n                    textual = Craft.inArray(col.type, Craft.SproutMeta.EditableTable.textualColTypes);\n\n                rowHtml += '<td class=\"' + (textual ? 'textual' : '') + ' ' + (typeof col['class'] !== 'undefined' ? col['class'] : '') + '\"' +\n                    (typeof col['width'] !== 'undefined' ? ' width=\"' + col['width'] + '\"' : '') +\n                    '>';\n\n                switch (col.type) {\n                    case 'selectOther': {\n                        const isOwnership = baseName.indexOf('ownership') > -1;\n                        if (isOwnership) {\n                            rowHtml += '<div class=\"field sprout-selectother\"><div class=\"select sprout-selectotherdropdown\"><select onchange=\"setDefault(this)\" name=\"' + name + '\">';\n                        } else {\n                            rowHtml += '<div class=\"field sprout-selectother\"><div class=\"select sprout-selectotherdropdown\"><select name=\"' + name + '\">';\n                        }\n\n                        let hasOptgroups = false;\n\n                        let firstRow = 'disabled selected';\n\n                        for (let key in col.options) {\n                            const option = col.options[key];\n\n                            if (typeof option.optgroup !== 'undefined') {\n                                if (hasOptgroups) {\n                                    rowHtml += '</optgroup>';\n                                } else {\n                                    hasOptgroups = true;\n                                }\n\n                                rowHtml += '<optgroup label=\"' + option.optgroup + '\">';\n                            } else {\n                                const optionLabel = (typeof option.label !== 'undefined' ? option.label : option),\n                                    optionValue = (typeof option.value !== 'undefined' ? option.value : key),\n                                    optionDisabled = (typeof option.disabled !== 'undefined' ? option.disabled : false);\n\n                                rowHtml += '<option ' + firstRow + ' value=\"' + optionValue + '\"' + (optionValue === value ? ' selected' : '') + (optionDisabled ? ' disabled' : '') + '>' + optionLabel + '</option>';\n                            }\n\n                            firstRow = '';\n                        }\n\n                        if (hasOptgroups) {\n                            rowHtml += '</optgroup>';\n                        }\n\n                        rowHtml += '</select></div>';\n\n                        rowHtml += '<div class=\"texticon clearable sprout-selectothertext hidden\"><input class=\"text fullwidth\" type=\"text\" name=\"' + name + '\" value=\"\" autocomplete=\"off\"><div class=\"clear\" title=\"Clear\"></div></div>';\n\n                        rowHtml += '</div>';\n\n                        break;\n                    }\n\n                    case 'checkbox': {\n                        rowHtml += '<input type=\"hidden\" name=\"' + name + '\">' +\n                            '<input type=\"checkbox\" name=\"' + name + '\" value=\"1\"' + (value ? ' checked' : '') + '>';\n\n                        break;\n                    }\n\n                    default: {\n                        rowHtml += '<input class=\"text fullwidth\" type=\"text\" name=\"' + name + '\" value=\"' + value + '\">';\n                    }\n                }\n\n                rowHtml += '</td>';\n            }\n\n            rowHtml += '<td class=\"thin action\"><a class=\"move icon\" title=\"' + Craft.t('sprout', 'Reorder') + '\"></a></td>' +\n                '<td class=\"thin action\"><a class=\"delete icon\" title=\"' + Craft.t('sprout', 'Delete') + '\"></a></td>' +\n                '</tr>';\n\n            return rowHtml;\n        },\n\n    });\n\n/**\n * Editable table row class\n */\nCraft.SproutMeta.EditableTable.Row = Garnish.Base.extend(\n    {\n        table: null,\n        id: null,\n        niceTexts: null,\n\n        $tr: null,\n        $tds: null,\n        $textareas: null,\n        $deleteBtn: null,\n\n        init: function(table, tr) {\n            this.table = table;\n            this.$tr = $(tr);\n            this.$tds = this.$tr.children();\n\n            // Get the row ID, sans prefix\n            const id = parseInt(this.$tr.attr('data-id').substr(this.table.settings.rowIdPrefix.length));\n\n            if (id > this.table.biggestId) {\n                this.table.biggestId = id;\n            }\n\n            this.$textareas = $();\n            this.niceTexts = [];\n            const textareasByColId = {};\n\n            let i = 0;\n\n            for (let colId in this.table.columns) {\n                let col = this.table.columns[colId];\n\n                if (Craft.inArray(col.type, Craft.SproutMeta.EditableTable.textualColTypes)) {\n                    const $textarea = $('textarea', this.$tds[i]);\n                    this.$textareas = this.$textareas.add($textarea);\n\n                    this.addListener($textarea, 'focus', 'onTextareaFocus');\n                    this.addListener($textarea, 'mousedown', 'ignoreNextTextareaFocus');\n\n                    this.niceTexts.push(new Garnish.NiceText($textarea, {\n                        onHeightChange: $.proxy(this, 'onTextareaHeightChange'),\n                    }));\n\n                    if (col.type === 'singleline' || col.type === 'number') {\n                        this.addListener($textarea, 'keypress', {type: col.type}, 'validateKeypress');\n                        this.addListener($textarea, 'textchange', {type: col.type}, 'validateValue');\n                    }\n\n                    textareasByColId[colId] = $textarea;\n                }\n\n                i++;\n            }\n\n            this.initSproutFields();\n\n            // Now that all of the text cells have been nice-ified, let's normalize the heights\n            this.onTextareaHeightChange();\n\n            // Now look for any autopopulate columns\n            for (let colId in this.table.columns) {\n                /**\n                 * @param {boolean} col.autopopulate\n                 */\n                let col = this.table.columns[colId];\n                if (col.autopopulate && typeof textareasByColId[col.autopopulate] !== 'undefined' && !textareasByColId[colId].val()) {\n                    new Craft.HandleGenerator(textareasByColId[colId], textareasByColId[col.autopopulate]);\n                }\n            }\n\n            const $deleteBtn = this.$tr.children().last().find('.delete');\n            this.addListener($deleteBtn, 'click', 'deleteRow');\n        },\n\n        initSproutFields: function() {\n            Craft.SproutFields.initFields(this.$tr);\n        },\n\n        onTextareaFocus: function(ev) {\n            this.onTextareaHeightChange();\n\n            const $textarea = $(ev.currentTarget);\n\n            if ($textarea.data('ignoreNextFocus')) {\n                $textarea.data('ignoreNextFocus', false);\n                return;\n            }\n\n            setTimeout(function() {\n                const val = $textarea.val();\n\n                // Does the browser support setSelectionRange()?\n                if (typeof $textarea[0].setSelectionRange !== 'undefined') {\n                    // Select the whole value\n                    const length = val.length * 2;\n                    $textarea[0].setSelectionRange(0, length);\n                } else {\n                    // Refresh the value to get the cursor positioned at the end\n                    $textarea.val(val);\n                }\n            }, 0);\n        },\n\n        ignoreNextTextareaFocus: function(ev) {\n            $.data(ev.currentTarget, 'ignoreNextFocus', true);\n        },\n\n        validateKeypress: function(ev) {\n            const keyCode = ev.keyCode ? ev.keyCode : ev.charCode;\n\n            if (!Garnish.isCtrlKeyPressed(ev) && (\n                (keyCode === Garnish.RETURN_KEY) ||\n                (ev.data.type === 'number' && !Craft.inArray(keyCode, Craft.SproutMeta.EditableTable.Row.numericKeyCodes))\n            )) {\n                ev.preventDefault();\n            }\n        },\n\n        validateValue: function(ev) {\n            let safeValue;\n\n            if (ev.data.type === 'number') {\n                // Only grab the number at the beginning of the value (if any)\n                const match = ev.currentTarget.value.match(/^\\s*(-?[\\d.]*)/);\n\n                if (match !== null) {\n                    safeValue = match[1];\n                } else {\n                    safeValue = '';\n                }\n            } else {\n                // Just strip any newlines\n                safeValue = ev.currentTarget.value.replace(/[\\r\\n]/g, '');\n            }\n\n            if (safeValue !== ev.currentTarget.value) {\n                ev.currentTarget.value = safeValue;\n            }\n        },\n\n        onTextareaHeightChange: function() {\n            // Keep all the textareas' heights in sync\n            let tallestTextareaHeight = -1;\n\n            for (let i = 0; i < this.niceTexts.length; i++) {\n                if (this.niceTexts[i].height > tallestTextareaHeight) {\n                    tallestTextareaHeight = this.niceTexts[i].height;\n                }\n            }\n\n            this.$textareas.css('min-height', tallestTextareaHeight);\n\n            // If the <td> is still taller, go with that insted\n            const tdHeight = this.$textareas.first().parent().height();\n\n            if (tdHeight > tallestTextareaHeight) {\n                this.$textareas.css('min-height', tdHeight);\n            }\n        },\n\n        deleteRow: function() {\n            this.table.sorter.removeItems(this.$tr);\n            this.$tr.remove();\n\n            // onDeleteRow callback\n            this.table.settings.onDeleteRow(this.$tr);\n        },\n    },\n    {\n        numericKeyCodes: [9 /* (tab) */, 8 /* (delete) */, 37, 38, 39, 40 /* (arrows) */, 45, 91 /* (minus) */, 46, 190 /* period */, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 /* (0-9) */],\n    });\n","/**\n * Helper class to toggle groups of sub-fields on Open Graph and Twitter Card Meta Details tabs\n * Initialize the class and identify the target select field to watch. When the select field is\n * updated, this class will look for a matching body div and toggle it's visibility.\n */\nclass MetaDetailsToggle {\n\n    constructor(props) {\n        let self = this;\n\n        this.fieldHandle = props.fieldHandle;\n        this.selectFieldId = props.selectFieldId;\n        let openGraphTypeInputClass = '#fields-' + this.fieldHandle + '-meta-details-body ' + this.selectFieldId;\n\n        let openGraphTypeDropdown = document.querySelector(openGraphTypeInputClass);\n\n        if (openGraphTypeDropdown !== null) {\n            let selectedDropdownOption = openGraphTypeDropdown.options[openGraphTypeDropdown.selectedIndex].value;\n\n            this.currentContainerId = this.getTargetContainerId(selectedDropdownOption);\n            this.currentContainer = document.getElementById(this.currentContainerId);\n\n            if (this.currentContainer) {\n                this.currentContainer.classList.remove('hidden');\n            }\n\n            openGraphTypeDropdown.addEventListener('change', function(event) {\n                self.toggleOpenGraphFieldContainer(event, self);\n            });\n        }\n    }\n\n    toggleOpenGraphFieldContainer(event, self) {\n\n        let currentTarget = event.target;\n        let newContainerName = currentTarget.options[currentTarget.selectedIndex].value;\n        let newContainerId = self.getTargetContainerId(newContainerName);\n        let newContainer = document.getElementById(newContainerId);\n\n        // Only update classes if containers exist\n        if (newContainer) {\n            newContainer.classList.remove('hidden');\n        }\n\n        if (self.currentContainer) {\n            self.currentContainer.classList.add('hidden');\n        }\n\n        // Set new values\n        self.currentContainerId = newContainerId;\n        self.currentContainer = newContainer;\n    }\n\n    getTargetContainerId(selectedOption) {\n        return '#fields-' + selectedOption;\n    }\n}\n\nwindow.MetaDetailsToggle = MetaDetailsToggle;\n","class SproutMetaWebsiteIdentitySettings {\n\n    constructor(props) {\n        this.items = props.items;\n        this.mainEntityValues = props.mainEntityValues;\n\n        this.initLegacyCode();\n        this.initOtherLegacyCode();\n    }\n\n    initLegacyCode() {\n        let self = this;\n\n        // Default option\n        let option = '';\n\n        // Method to clear dropdowns down to a given level\n        let clearDropDown = function(arrayObj, startIndex) {\n            $.each(arrayObj, function(index, value) {\n                if (index >= startIndex) {\n                    $(value).html(option);\n                }\n            });\n        };\n\n        // Method to disable dropdowns down to a given level\n        let disableDropDown = function(arrayObj, startIndex) {\n            $.each(arrayObj, function(index, value) {\n                if (index >= startIndex) {\n                    $(value).closest('div.organizationinfo-dropdown').addClass('hidden');\n                }\n            });\n        };\n\n        // Method to enable dropdowns down to a given level\n        let enableDropDown = function(element) {\n            element.closest('div.organizationinfo-dropdown').removeClass('hidden');\n        };\n\n        // Method to generate and append options\n        let generateOptions = function(element, children) {\n            let options = '';\n            let name = '';\n\n            $.each(children, function(index, value) {\n                // insert space before capital letters\n                name = index.replace(/([A-Z][^A-Z\\b])/g, ' $1').trim();\n                options += '<option value=\"' + index + '\">' + name + '</option>';\n\n                // let's foreach the children\n                if (value) {\n                    $.each(value, function(key, level3) {\n                        name = '&nbsp;&nbsp;&nbsp;' + key.replace(/([A-Z][^A-Z\\b])/g, ' $1').trim();\n                        options += '<option value=\"' + key + '\">' + name + '</option>';\n                    });\n                }\n\n            });\n\n            element.append(options);\n        };\n\n        // Select each of the dropdowns\n        let firstDropDown = $('.mainentity-firstdropdown select');\n        let secondDropDown = $('.mainentity-seconddropdown select');\n\n        // Hold selected option\n        let firstSelection = '';\n        let secondSelection = '';\n\n        // Hold selection\n        let selection = '';\n\n        // Selection handler for first level dropdown\n        firstDropDown.on('change', function() {\n\n            // Get selected option\n            firstSelection = firstDropDown.val();\n\n            // Clear all dropdowns down to the hierarchy\n            clearDropDown($('.organization-info :input'), 1);\n\n            // Disable all dropdowns down to the hierarchy\n            disableDropDown($('.organization-info :input'), 1);\n\n            // Check current selection\n            if (typeof self.items[firstSelection] === 'undefined' || firstSelection === '' || self.items[firstSelection].length <= 0) {\n                return;\n            }\n\n            if (self.items[firstSelection][0]) {\n                // Enable second level DropDown\n                enableDropDown(secondDropDown);\n\n                // Generate and append options\n                generateOptions(secondDropDown, self.items[firstSelection][0]);\n            }\n\n        });\n\n        // Selection handler for second level dropdown\n        secondDropDown.on('change', function() {\n            let lastValue = secondDropDown.val();\n            // Final work goes here\n        });\n    }\n\n    initOtherLegacyCode() {\n        let self = this;\n        let mainEntityValues = self.mainEntityValues;\n\n        //Main entity dropdowns\n        $('.mainentity-firstdropdown select').change(function() {\n            if (this.value === 'barrelstrength-sprout-schema-personschema') {\n                $('.mainentity-seconddropdown select').addClass('hidden');\n            } else {\n                $('.mainentity-seconddropdown select').removeClass('hidden');\n            }\n        });\n\n        // check if we need load depending dropdowns\n        if (mainEntityValues) {\n            if (mainEntityValues.hasOwnProperty('schemaTypeId') && mainEntityValues.schemaTypeId) {\n                $('.mainentity-firstdropdown select').val(mainEntityValues.schemaTypeId).change();\n            }\n            if (mainEntityValues.hasOwnProperty('schemaOverrideTypeId') && mainEntityValues.schemaOverrideTypeId) {\n                $('.mainentity-seconddropdown select').val(mainEntityValues.schemaOverrideTypeId).change();\n            }\n        }\n\n    }\n}\n\nwindow.SproutMetaWebsiteIdentitySettings = SproutMetaWebsiteIdentitySettings;\n","class SproutMetaWebsiteIdentity {\n\n    constructor(props) {\n\n        this.items = props.items;\n        this.websiteIdentity = props.websiteIdentity;\n\n        this.firstDropdownId = props.firstDropdownId;\n        this.secondDropdownId = props.secondDropdownId;\n        this.thirdDropdownId = props.thirdDropdownId;\n\n        this.initInfoIcons();\n        this.initWebsiteIdentityField();\n        this.moreWebsiteIdentityStuff();\n    }\n\n    initInfoIcons() {\n        let infoIcons = document.querySelectorAll('[data-additional-info]');\n\n        infoIcons.forEach(function(infoIcon) {\n            let targetId = infoIcon.dataset.additionalInfo;\n            let label = document.getElementById(targetId + '-label');\n\n            label.appendChild(infoIcon);\n            infoIcon.classList.toggle('hidden');\n        });\n    }\n\n    initWebsiteIdentityField() {\n        let self = this;\n\n        // Select each of the dropdowns\n        let firstDropDown = $(this.firstDropdownId);\n        let secondDropDown = $(this.secondDropdownId);\n        let thirdDropDown = $(this.thirdDropdownId);\n\n        // Hold selected option\n        let firstSelection = '';\n        let secondSelection = '';\n        let thirdSelection = '';\n\n        // Hold selection\n        let selection = '';\n\n        // Selection handler for first level dropdown\n        firstDropDown.on('change', function() {\n\n            // Get selected option\n            firstSelection = firstDropDown.val();\n\n            // Clear all dropdowns down to the hierarchy\n            self.clearDropDown($('#organization :input'), 1);\n\n            // Disable all dropdowns down to the hierarchy\n            self.disableDropDown($('#organization :input'), 1);\n\n            // Check current selection\n            if (firstSelection === '') {\n                return;\n            }\n\n            if (self.items[firstSelection].hasOwnProperty('children')) {\n                // Enable second level DropDown\n                self.enableDropDown(secondDropDown);\n\n                // Generate and append options\n                self.generateOptions(secondDropDown, self.items[firstSelection]['children']);\n            }\n\n        });\n\n        // Selection handler for second level dropdown\n        secondDropDown.on('change', function() {\n\n            firstSelection = $('#main-entity-first-dropdown').val();\n            secondSelection = secondDropDown.val();\n\n            // Clear all dropdowns down to the hierarchy\n            self.clearDropDown($('#organization :input'), 2);\n\n            // Disable all dropdowns down to the hierarchy\n            self.disableDropDown($('#organization :input'), 2);\n\n            // Check current selection\n            if (secondSelection === '') {\n                return;\n            }\n\n            let secondChildren = [];\n            let children = self.items[firstSelection]['children'];\n            let pos = null;\n            for (let i = 0; i < children.length; i++) {\n                if (children[i].name === secondSelection) {\n                    if (children[i].hasOwnProperty('children')) {\n                        // Enable third level DropDown\n                        self.enableDropDown(thirdDropDown);\n\n                        // Generate and append options\n                        self.generateOptions(thirdDropDown, children[i]['children']);\n                    }\n\n                    break;\n                }\n            }\n\n        });\n    }\n\n    moreWebsiteIdentityStuff() {\n        let websiteIdentity = this.websiteIdentity;\n\n        // check if we need load depending dropdowns\n        if (websiteIdentity) {\n            if (websiteIdentity.hasOwnProperty('organizationSubTypes') && websiteIdentity.organizationSubTypes[0]) {\n                $('#main-entity-first-dropdown').val(websiteIdentity.organizationSubTypes[0]).trigger('change');\n            }\n            if (websiteIdentity.hasOwnProperty('organizationSubTypes') && websiteIdentity.organizationSubTypes[1]) {\n                $('#main-entity-second-dropdown').val(websiteIdentity.organizationSubTypes[1]).trigger('change');\n            }\n            if (websiteIdentity.hasOwnProperty('organizationSubTypes') && websiteIdentity.organizationSubTypes[2]) {\n                $('#main-entity-third-dropdown').val(websiteIdentity.organizationSubTypes[2]).trigger('change');\n            }\n        }\n\n        $('#identityType').change(function() {\n\n            if (this.value === 'Person') {\n                $('.person-info').removeClass('hidden');\n                $('.organization-info').addClass('hidden');\n            } else {\n                $('.person-info').addClass('hidden');\n                $('.organization-info').removeClass('hidden');\n            }\n\n            if (this.value === 'Organization') {\n                $('.organization-info').removeClass('hidden');\n                $('.person-info').addClass('hidden');\n\n                if ($('#main-entity-first-dropdown').val() === 'LocalBusiness') {\n                    $('#localbusiness').removeClass('hidden');\n                }\n            } else {\n                $('.organization-info').addClass('hidden');\n                $('.person-info').removeClass('hidden');\n            }\n        });\n\n        $('#main-entity-first-dropdown').change(function() {\n            if (this.value === 'LocalBusiness') {\n                $('#localbusiness').removeClass('hidden');\n            } else {\n                $('#localbusiness').addClass('hidden');\n            }\n        });\n    }\n\n    // Clear dropdowns down to a given level\n    clearDropDown(arrayObj, startIndex) {\n\n        // Default option passed to html() on Globals page\n        let option = '<option value=\"\" selected=\"selected\"></option>';\n\n        // From Metadata Field settings page:\n        // var option = '';\n\n        $.each(arrayObj, function(index, value) {\n            if (index >= startIndex) {\n                $(value).html(option);\n            }\n        });\n    };\n\n    // Disable dropdowns down to a given level\n    disableDropDown(arrayObj, startIndex) {\n        $.each(arrayObj, function(index, value) {\n            if (index >= startIndex) {\n                $(value).closest('div.organizationinfo-dropdown').addClass('hidden');\n            }\n        });\n    };\n\n    // Enable dropdowns down to a given level\n    enableDropDown(element) {\n        element.closest('div.organizationinfo-dropdown').removeClass('hidden');\n    };\n\n    // Generate and append options\n    generateOptions(element, children) {\n        let options = '';\n        let name = '';\n\n        for (let i = 0; i < children.length; i++) {\n            // insert space before capital letters\n            name = children[i].name.replace(/([A-Z][^A-Z\\b])/g, ' $1').trim();\n\n            options += '<option value=\"' + children[i].name + '\">' + name + '</option>';\n        }\n\n        element.append(options);\n    };\n}\n\nwindow.SproutMetaWebsiteIdentity = SproutMetaWebsiteIdentity;\n"],"names":["e","n","o","r","c","a","SproutMetaMetadataField","props","self","metaDetailsTabsId","metaDetailsBodyContainerId","metaTab","event","$tab","$selectedTab","tabName","tabBodyClass","targetBodyContainer","tabBody","key","fieldHandle","badgeClass","targetLabelId","targetInputId","customKey","metaButton","SproutMetaKeywordsField","id","baseName","columns","settings","$rows","i","rowId","rowHtml","$tr","values","colId","col","name","value","textual","hasOptgroups","firstRow","option","optionLabel","optionValue","optionDisabled","table","tr","textareasByColId","$textarea","$deleteBtn","ev","val","length","keyCode","safeValue","match","tallestTextareaHeight","tdHeight","MetaDetailsToggle","openGraphTypeInputClass","openGraphTypeDropdown","selectedDropdownOption","currentTarget","newContainerName","newContainerId","newContainer","selectedOption","SproutMetaWebsiteIdentitySettings","clearDropDown","arrayObj","startIndex","index","disableDropDown","enableDropDown","element","generateOptions","children","options","level3","firstDropDown","secondDropDown","firstSelection","mainEntityValues","SproutMetaWebsiteIdentity","infoIcon","targetId","thirdDropDown","secondSelection","websiteIdentity"],"mappings":"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","x_google_ignoreList":[0]}