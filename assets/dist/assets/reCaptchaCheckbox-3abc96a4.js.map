{"version":3,"file":"reCaptchaCheckbox-3abc96a4.js","sources":["../../src/forms-frontend/recaptcha_v2_checkbox.js"],"sourcesContent":["/**\n * Prepare reCAPTCHA for ALL Sprout Forms on page\n */\nclass SproutFormsGoogleRecaptchaCheckbox {\n\n  constructor(settings) {\n    this.siteKey = settings.siteKey;\n    this.theme = settings.theme ?? null;\n    this.size = settings.size ?? null;\n    this.customValidityText = settings.customValidityText;\n    this.grecaptcha = settings.grecaptcha;\n\n    this.initRecaptchas();\n\n    let self = this;\n    window.onload = function() {\n      self.makeRecaptchasRequired();\n    }\n  }\n\n  initRecaptchas() {\n    let self = this;\n    let sproutFormsRecaptchaContainers = document.querySelectorAll('.google-recaptcha-container');\n\n    for (let recaptchaContainer of sproutFormsRecaptchaContainers) {\n      let form = recaptchaContainer.closest('form');\n      this.addFormEventListener(form);\n\n      let widgetId = this.grecaptcha.render(recaptchaContainer, {\n        'sitekey': self.siteKey,\n        'theme': self.theme,\n        'size': self.size,\n        'callback': function() {\n          self.onSproutFormsRecaptchaSuccess(form);\n        },\n        'expired-callback': function() {\n          self.onSproutFormsRecaptchaExpired(form);\n          self.grecaptcha.reset();\n        }\n      });\n\n      form.setAttribute('data-google-recaptcha-widget-id', widgetId);\n    }\n  }\n\n  /**\n   * Make reCAPTCHA not required any longer if successful callback\n   *\n   * @param form\n   */\n  onSproutFormsRecaptchaSuccess(form) {\n    let recaptchaResponseTextarea = form.querySelector('.g-recaptcha-response');\n    recaptchaResponseTextarea.required = false;\n    recaptchaResponseTextarea.setCustomValidity('');\n  }\n\n  /**\n   * Make reCAPTCHA required again after expiration resets things\n   *\n   * @param form\n   */\n  onSproutFormsRecaptchaExpired(form) {\n    let self = this;\n    // Google swaps in new recaptcha textarea after this triggers\n    // Add delay to target the new textarea over the old\n    setTimeout(function() {\n      let recaptchaResponseTextarea = form.querySelector('.g-recaptcha-response');\n      self.makeRecaptchaRequired(recaptchaResponseTextarea);\n    }, 500);\n  }\n\n  /**\n   * Make all reCAPTCHAs required after initial page load\n   */\n  makeRecaptchasRequired() {\n    let self = this;\n\n    let recaptchaResponseTextareas = document.querySelectorAll('.g-recaptcha-response');\n    for (const recaptchaResponseTextarea of recaptchaResponseTextareas) {\n      self.makeRecaptchaRequired(recaptchaResponseTextarea);\n    }\n  }\n\n  /**\n   * Make a single reCAPTCHA textarea required\n   *\n   * @param recaptchaResponseTextarea\n   */\n  makeRecaptchaRequired(recaptchaResponseTextarea) {\n    if (recaptchaResponseTextarea) {\n      recaptchaResponseTextarea.required = true;\n      recaptchaResponseTextarea.setCustomValidity(this.customValidityText);\n    }\n  }\n\n  /**\n   * Adds Event Listener to ensure we reset reCAPTCHA after AJAX submissions\n   *\n   * @param form\n   */\n  addFormEventListener(form) {\n    let self = this;\n\n    form.addEventListener('afterSproutFormsSubmit', function(event) {\n\n      let targetForm = event.target;\n      let widgetId = targetForm.getAttribute('data-google-recaptcha-widget-id');\n      self.grecaptcha.reset(widgetId);\n      self.makeRecaptchasRequired();\n\n    }, false);\n  }\n}\n\nwindow.SproutFormsGoogleRecaptchaCheckbox = SproutFormsGoogleRecaptchaCheckbox;\n"],"names":["SproutFormsGoogleRecaptchaCheckbox","settings","self","sproutFormsRecaptchaContainers","recaptchaContainer","form","widgetId","recaptchaResponseTextarea","recaptchaResponseTextareas","event"],"mappings":"AAGA,MAAMA,CAAmC,CAEvC,YAAYC,EAAU,CACpB,KAAK,QAAUA,EAAS,QACxB,KAAK,MAAQA,EAAS,OAAS,KAC/B,KAAK,KAAOA,EAAS,MAAQ,KAC7B,KAAK,mBAAqBA,EAAS,mBACnC,KAAK,WAAaA,EAAS,WAE3B,KAAK,eAAc,EAEnB,IAAIC,EAAO,KACX,OAAO,OAAS,UAAW,CACzBA,EAAK,uBAAsB,CAC5B,CACF,CAED,gBAAiB,CACf,IAAIA,EAAO,KACPC,EAAiC,SAAS,iBAAiB,6BAA6B,EAE5F,QAASC,KAAsBD,EAAgC,CAC7D,IAAIE,EAAOD,EAAmB,QAAQ,MAAM,EAC5C,KAAK,qBAAqBC,CAAI,EAE9B,IAAIC,EAAW,KAAK,WAAW,OAAOF,EAAoB,CACxD,QAAWF,EAAK,QAChB,MAASA,EAAK,MACd,KAAQA,EAAK,KACb,SAAY,UAAW,CACrBA,EAAK,8BAA8BG,CAAI,CACxC,EACD,mBAAoB,UAAW,CAC7BH,EAAK,8BAA8BG,CAAI,EACvCH,EAAK,WAAW,OACjB,CACT,CAAO,EAEDG,EAAK,aAAa,kCAAmCC,CAAQ,EAEhE,CAOD,8BAA8BD,EAAM,CAClC,IAAIE,EAA4BF,EAAK,cAAc,uBAAuB,EAC1EE,EAA0B,SAAW,GACrCA,EAA0B,kBAAkB,EAAE,CAC/C,CAOD,8BAA8BF,EAAM,CAClC,IAAIH,EAAO,KAGX,WAAW,UAAW,CACpB,IAAIK,EAA4BF,EAAK,cAAc,uBAAuB,EAC1EH,EAAK,sBAAsBK,CAAyB,CACrD,EAAE,GAAG,CACP,CAKD,wBAAyB,CACvB,IAAIL,EAAO,KAEPM,EAA6B,SAAS,iBAAiB,uBAAuB,EAClF,UAAWD,KAA6BC,EACtCN,EAAK,sBAAsBK,CAAyB,CAEvD,CAOD,sBAAsBA,EAA2B,CAC3CA,IACFA,EAA0B,SAAW,GACrCA,EAA0B,kBAAkB,KAAK,kBAAkB,EAEtE,CAOD,qBAAqBF,EAAM,CACzB,IAAIH,EAAO,KAEXG,EAAK,iBAAiB,yBAA0B,SAASI,EAAO,CAG9D,IAAIH,EADaG,EAAM,OACG,aAAa,iCAAiC,EACxEP,EAAK,WAAW,MAAMI,CAAQ,EAC9BJ,EAAK,uBAAsB,CAE5B,EAAE,EAAK,CACT,CACH,CAEA,OAAO,mCAAqCF"}