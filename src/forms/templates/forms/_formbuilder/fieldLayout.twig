{% import "_includes/forms" as forms %}
{% import "sprout-module-core/_macros/sproutcp" as sproutCp %}

{% set module = sprout.modules.forms %}

{# {% if form.getFirstError('fieldLayoutId') %} #}
{# {{ forms.errorList(form.getErrors('fieldLayoutId')) }} #}
{# {% endif %} #}

{% set zilchHtml %}
    {% set boxBody %}
        <p>{{ "Drag a field from the right sidebar into the form builder to start building your form."|t('sprout-module-forms')|raw }}</p>
    {% endset %}

    {{ sproutCp.mediaBox({
        heading: "A blank canvas. Formidable."|t('sprout-module-forms'),
        body: boxBody,
        resourcePath: '@Sprout/Assets/dist/static/forms/icons/icon.svg',
    }) }}
{% endset %}

<div x-data="FormBuilder({{ form.id }})"
    x-ref="formBuilder"
    class="sprout-form-builder"
    data-source-fields='{{ form.getSourceFields()|json_encode|raw }}'
>

    <input id="field-layout-settings" type="hidden" name="submissionFieldLayout" x-bind:value="FieldLayoutHelper.submissionFieldLayoutInputValue">

    {# Tabs #}
    <div id="form-builder-tabs">
        <div class="scrollable" role="tablist" aria-label="Form Pages">
            <template x-for="tab in tabs">
                <div
                    class="form-builder-tab"
                    href="#tab--content"
                    data-id="tab--content"
                    aria-controls="tab--content"
                    role="tab"
                    draggable="true"

                    x-on:dragover.prevent="DragDropHelper.dragOverLayoutTabNav"
                    x-on:dragstart.self="DragDropHelper.dragStartLayoutTabNav"
                    x-on:dragend.self="DragDropHelper.dragEndLayoutTabNav"
                    x-on:dragenter.prevent.self="DragDropHelper.dragEnterLayoutTabNav"
                    x-on:dragleave.prevent.self="DragDropHelper.dragLeaveLayoutTabNav"
                    x-on:drop="DragDropHelper.dropOnLayoutTabNav"

                    x-on:click="selectedTabUid = tab.uid"
                    x-bind:uid="tab.uid"
                    x-bind:data-tab-uid="tab.uid"
                    x-bind:class="selectedTabUid == tab.uid ? 'sel' : ''"
                    x-bind:aria-selected="selectedTabUid == tab.uid ? true : false"
                >
                    <span x-text="tab.name"></span>
                    <a
                        x-on:click="FieldLayoutHelper.editTab(tab)"
                        class="settings icon"
                    ></a>
                </div>
            </template>
        </div>

        <div id="form-builder-action-buttons" class="btngroup submit">
            <a
                id="addFormPageBtn"
                class="btn add icon"
                href="#"
                title="New Page"
                x-on:click="FieldLayoutHelper.addTab"
            >
                {{ "New page"|t('sprout-module-forms') }}
            </a>
            {# <div id="" class="btn icon" title="{{ 'Edit Pages'|t('sprout-module-forms') }}" data-icon="menu"></div> #}
        </div>

        {{ forms.lightswitch({
            id: 'enabled',
            name: 'enabled',
            on: form.enabled,
            onLabel: "Enabled"|t('sprout-module-forms'),
        }) }}
        {#    <button type="button" class="btn menubtn hidden" title="List all tabs" aria-label="List all tabs" tabindex="0" aria-controls="menu.Garnish926770551" aria-haspopup="listbox" aria-expanded="false"></button> #}
    </div>

    <div id="form-builder-workspace">

        <div id="form-builder-layout">

            {# Form Builder / Tabs #}
            <template x-for="tab in tabs">

                <div
                    class="layout-tab drag-zone"
                    x-bind:id="'sproutforms-tab-' + tab.uid"
                    x-bind:data-tab-uid="tab.uid"
                    x-show="tab.uid === selectedTabUid"

                    x-on:dragover="DragDropHelper.dragOverLayoutTabBody"
                    x-on:dragenter.prevent.self="DragDropHelper.dragEnterLayoutTabBody"
                    x-on:dragleave.prevent.self="DragDropHelper.dragLeaveLayoutTabBody"
                    x-on:drop="DragDropHelper.dropOnLayoutTabBody"
                >
                    {# Tab with Fields #}
                    <template x-if="tab.elements.length > 0">

                        <template x-for="element in tab.elements">

                            {# Layout Field #}
                            <div
                                class="layout-field drag-target"
                                x-bind:class="isDragOverFormFieldUid === element.fieldUid ? 'drag-over' : ''"
                                x-on:dblclick="FieldLayoutHelper.editFieldLayoutElement(element)"
                                x-bind:data-type="element.field.type"
                                x-bind:data-tab-uid="tab.uid"
                                x-bind:data-field-uid="element.fieldUid"

                                draggable="true"
                                x-on:dragover="DragDropHelper.dragOverLayoutField"
                                x-on:dragstart="DragDropHelper.dragStartLayoutField"
                                x-on:dragend="DragDropHelper.dragEndLayoutField"
                                x-on:dragenter.prevent="DragDropHelper.dragEnterLayoutField"
                                x-on:dragleave.prevent="DragDropHelper.dragLeaveLayoutField"
                                x-on:drop.prevent.stop="DragDropHelper.dropOnExistingLayoutField"
                            >

                                <div class="layout-field-header">
                                    <h2 x-bind:class="element.required" x-text="element.field.name"></h2>
                                    <p x-show="element.field.instructions" x-text="element.field.instructions"></p>
                                </div>

                                <div class="body" x-html="element.uiSettings.exampleInputHtml"></div>
                                <div class="form-field-details">
                                    <span x-text="element.uiSettings.displayName"></span>
                                    <a
                                        x-on:click="deleteFormField(element)"
                                        class="delete icon"
                                    ></a>
                                    {# <code x-text="field.uiSettings.fieldHandleHtml"></code> #}
                                </div>

                                <a
                                    x-on:click="FieldLayoutHelper.editFieldLayoutElement(element)"
                                    class="settings icon edit-field-button"
                                    title="{{ 'Edit'|t('sprout-module-forms') }}"
                                    role="button"
                                    aria-label="{{ 'Edit'|t('sprout-module-forms') }}">
                                </a>
                            </div>

                        </template>

                    </template>

                    {# Tab with no Fields #}
                    <template x-if="tab.elements.length === 0">

                        <div class="field placeholder-field">
                            {{ zilchHtml }}
                        </div>

                    </template>

                </div>

            </template>

            <template x-for="tab in tabs">

                <template x-for="element in tab.elements">
                    <div
                        x-bind:id="'field-settings-slideout-' + element.fieldUid"
                        x-bind:data-field-uid="element.fieldUid"
                        class="fld-element-settings-body"
                        x-bind:class="editFieldUid == element.fieldUid ? '' : 'hidden'"
                    >
                        {# <div x-html="field.settingsHtml"></div> #}
                    </div>
                </template>
            </template>
        </div>

        <div id="form-builder-sidebar">

            {# Sidebar #}
            <div id="form-source-fields">
                <h6 x-show="getFieldsByGroup('Common Fields').length">{{ 'Common Fields'|t('sprout-module-forms') }}</h6>
                <template x-for="field in getFieldsByGroup('Common Fields')">
                    <div x-data="FormField(field)" x-html="sourceHtml"></div>
                </template>

                <h6 x-show="getFieldsByGroup('Reference Fields').length">{{ 'Reference Fields'|t('sprout-module-forms') }}</h6>
                <template x-for="field in getFieldsByGroup('Reference Fields')">
                    <div x-data="FormField(field)" x-html="sourceHtml"></div>
                </template>

                <h6 x-show="getFieldsByGroup('Relations Fields').length">{{ 'Relations Fields'|t('sprout-module-forms') }}</h6>
                <template x-for="field in getFieldsByGroup('Relations Fields')">
                    <div x-data="FormField(field)" x-html="sourceHtml"></div>
                </template>

                <h6 x-show="getFieldsByGroup('Layout Fields').length">{{ 'Layout Fields'|t('sprout-module-forms') }}</h6>
                <template x-for="field in getFieldsByGroup('Layout Fields')">
                    <div x-data="FormField(field)" x-html="sourceHtml"></div>
                </template>

                <h6 x-show="getFieldsByGroup('Custom Fields').length">{{ 'Custom Fields'|t('sprout-module-forms') }}</h6>
                <template x-for="field in getFieldsByGroup('Custom Fields')">
                    <div x-data="FormField(field)" x-html="sourceHtml"></div>
                </template>
            </div>

        </div>

    </div>
</div>

{% do sprout.modules.core.vite.register('forms/Forms.js', false, {
    'depends': [
        'craft\\web\\assets\\cp\\CpAsset'
    ]
}) %}
